/*! dustjs-linkedin - v2.7.5
* http://dustjs.com/
* Copyright (c) 2016 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define("dust.core",[],b):"object"==typeof exports?module.exports=b():a.dust=b()}(this,function(){function getTemplate(a,b){return a?"function"==typeof a&&a.template?a.template:dust.isTemplateFn(a)?a:b!==!1?dust.cache[a]:void 0:void 0}function load(a,b,c){if(!a)return b.setError(new Error("No template or template name provided to render"));var d=getTemplate(a,dust.config.cache);return d?d(b,Context.wrap(c,d.templateName)):dust.onLoad?b.map(function(b){function d(a,d){var f;if(a)return b.setError(a);if(f=getTemplate(d,!1)||getTemplate(e,dust.config.cache),!f){if(!dust.compile)return b.setError(new Error("Dust compiler not available"));f=dust.loadSource(dust.compile(d,e))}f(b,Context.wrap(c,f.templateName)).end()}var e=a;3===dust.onLoad.length?dust.onLoad(e,c.options,d):dust.onLoad(e,d)}):b.setError(new Error("Template Not Found: "+a))}function Context(a,b,c,d,e){void 0===a||a instanceof Stack||(a=new Stack(a)),this.stack=a,this.global=b,this.options=c,this.blocks=d,this.templateName=e,this._isContext=!0}function getWithResolvedData(a,b,c){return function(d){return a.push(d)._get(b,c)}}function Stack(a,b,c,d){this.tail=b,this.isObject=a&&"object"==typeof a,this.head=a,this.index=c,this.of=d}function Stub(a){this.head=new Chunk(this),this.callback=a,this.out=""}function Stream(){this.head=new Chunk(this)}function Chunk(a,b,c){this.root=a,this.next=b,this.data=[],this.flushable=!1,this.taps=c}function Tap(a,b){this.head=a,this.tail=b}var dust={version:"2.7.5"},NONE="NONE",ERROR="ERROR",WARN="WARN",INFO="INFO",DEBUG="DEBUG",EMPTY_FUNC=function(){};dust.config={whitespace:!1,amd:!1,cjs:!1,cache:!0},dust._aliases={write:"w",end:"e",map:"m",render:"r",reference:"f",section:"s",exists:"x",notexists:"nx",block:"b",partial:"p",helper:"h"},function(){var a,b,c={DEBUG:0,INFO:1,WARN:2,ERROR:3,NONE:4};"undefined"!=typeof console&&console.log?(a=console.log,b="function"==typeof a?function(){a.apply(console,arguments)}:function(){a(Array.prototype.slice.apply(arguments).join(" "))}):b=EMPTY_FUNC,dust.log=function(a,d){d=d||INFO,c[d]>=c[dust.debugLevel]&&b("[DUST:"+d+"]",a)},dust.debugLevel=NONE,"undefined"!=typeof process&&process.env&&/\bdust\b/.test(process.env.DEBUG)&&(dust.debugLevel=DEBUG)}(),dust.helpers={},dust.cache={},dust.register=function(a,b){a&&(b.templateName=a,dust.config.cache!==!1&&(dust.cache[a]=b))},dust.render=function(a,b,c){var d=new Stub(c).head;try{load(a,d,b).end()}catch(e){d.setError(e)}},dust.stream=function(a,b){var c=new Stream,d=c.head;return dust.nextTick(function(){try{load(a,d,b).end()}catch(c){d.setError(c)}}),c},dust.loadSource=function(source){return eval(source)},dust.isArray=Array.isArray?Array.isArray:function(a){return"[object Array]"===Object.prototype.toString.call(a)},dust.nextTick=function(){return function(a){setTimeout(a,0)}}(),dust.isEmpty=function(a){return 0===a?!1:dust.isArray(a)&&!a.length?!0:!a},dust.isEmptyObject=function(a){var b;if(null===a)return!1;if(void 0===a)return!1;if(a.length>0)return!1;for(b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0},dust.isTemplateFn=function(a){return"function"==typeof a&&a.__dustBody},dust.isThenable=function(a){return a&&"object"==typeof a&&"function"==typeof a.then},dust.isStreamable=function(a){return a&&"function"==typeof a.on&&"function"==typeof a.pipe},dust.filter=function(a,b,c,d){var e,f,g,h;if(c)for(e=0,f=c.length;f>e;e++)g=c[e],g.length&&(h=dust.filters[g],"s"===g?b=null:"function"==typeof h?a=h(a,d):dust.log("Invalid filter `"+g+"`",WARN));return b&&(a=dust.filters[b](a,d)),a},dust.filters={h:function(a){return dust.escapeHtml(a)},j:function(a){return dust.escapeJs(a)},u:encodeURI,uc:encodeURIComponent,js:function(a){return dust.escapeJSON(a)},jp:function(a){return JSON?JSON.parse(a):(dust.log("JSON is undefined; could not parse `"+a+"`",WARN),a)}},dust.makeBase=dust.context=function(a,b){return new Context(void 0,a,b)},dust.isContext=function(a){return"object"==typeof a&&a._isContext===!0},Context.wrap=function(a,b){return dust.isContext(a)?a:new Context(a,{},{},null,b)},Context.prototype.get=function(a,b){return"string"==typeof a&&("."===a[0]&&(b=!0,a=a.substr(1)),a=a.split(".")),this._get(b,a)},Context.prototype._get=function(a,b){var c,d,e,f,g,h=this.stack||{},i=1;if(d=b[0],e=b.length,a&&0===e)f=h,h=h.head;else{if(a)h&&(h=h.head?h.head[d]:void 0);else{for(;h&&(!h.isObject||(f=h.head,c=h.head[d],void 0===c));)h=h.tail;h=void 0!==c?c:this.global&&this.global[d]}for(;h&&e>i;){if(dust.isThenable(h))return h.then(getWithResolvedData(this,a,b.slice(i)));f=h,h=h[b[i]],i++}}return"function"==typeof h?(g=function(){try{return h.apply(f,arguments)}catch(a){throw dust.log(a,ERROR),a}},g.__dustBody=!!h.__dustBody,g):(void 0===h&&dust.log("Cannot find reference `{"+b.join(".")+"}` in template `"+this.getTemplateName()+"`",INFO),h)},Context.prototype.getPath=function(a,b){return this._get(a,b)},Context.prototype.push=function(a,b,c){return void 0===a?(dust.log("Not pushing an undefined variable onto the context",INFO),this):this.rebase(new Stack(a,this.stack,b,c))},Context.prototype.pop=function(){var a=this.current();return this.stack=this.stack&&this.stack.tail,a},Context.prototype.rebase=function(a){return new Context(a,this.global,this.options,this.blocks,this.getTemplateName())},Context.prototype.clone=function(){var a=this.rebase();return a.stack=this.stack,a},Context.prototype.current=function(){return this.stack&&this.stack.head},Context.prototype.getBlock=function(a){var b,c,d;if("function"==typeof a&&(a=a(new Chunk,this).data.join("")),b=this.blocks,!b)return dust.log("No blocks for context `"+a+"` in template `"+this.getTemplateName()+"`",DEBUG),!1;for(c=b.length;c--;)if(d=b[c][a])return d;return dust.log("Malformed template `"+this.getTemplateName()+"` was missing one or more blocks."),!1},Context.prototype.shiftBlocks=function(a){var b,c=this.blocks;return a?(b=c?c.concat([a]):[a],new Context(this.stack,this.global,this.options,b,this.getTemplateName())):this},Context.prototype.resolve=function(a){var b;return"function"!=typeof a?a:(b=(new Chunk).render(a,this),b instanceof Chunk?b.data.join(""):b)},Context.prototype.getTemplateName=function(){return this.templateName},Stub.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.callback(a.error),dust.log("Rendering failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.out+=a.data.join(""),a=a.next,this.head=a}this.callback(null,this.out)},Stream.prototype.flush=function(){for(var a=this.head;a;){if(!a.flushable)return a.error?(this.emit("error",a.error),this.emit("end"),dust.log("Streaming failed with error `"+a.error+"`",ERROR),void(this.flush=EMPTY_FUNC)):void 0;this.emit("data",a.data.join("")),a=a.next,this.head=a}this.emit("end")},Stream.prototype.emit=function(a,b){var c,d,e=this.events||{},f=e[a]||[];if(!f.length)return dust.log("Stream broadcasting, but no listeners for `"+a+"`",DEBUG),!1;for(f=f.slice(0),c=0,d=f.length;d>c;c++)f[c](b);return!0},Stream.prototype.on=function(a,b){var c=this.events=this.events||{},d=c[a]=c[a]||[];return"function"!=typeof b?dust.log("No callback function provided for `"+a+"` event listener",WARN):d.push(b),this},Stream.prototype.pipe=function(a){if("function"!=typeof a.write||"function"!=typeof a.end)return dust.log("Incompatible stream passed to `pipe`",WARN),this;var b=!1;return"function"==typeof a.emit&&a.emit("pipe",this),"function"==typeof a.on&&a.on("error",function(){b=!0}),this.on("data",function(c){if(!b)try{a.write(c,"utf8")}catch(d){dust.log(d,ERROR)}}).on("end",function(){if(!b)try{a.end(),b=!0}catch(c){dust.log(c,ERROR)}})},Chunk.prototype.write=function(a){var b=this.taps;return b&&(a=b.go(a)),this.data.push(a),this},Chunk.prototype.end=function(a){return a&&this.write(a),this.flushable=!0,this.root.flush(),this},Chunk.prototype.map=function(a){var b=new Chunk(this.root,this.next,this.taps),c=new Chunk(this.root,b,this.taps);this.next=c,this.flushable=!0;try{a(c)}catch(d){dust.log(d,ERROR),c.setError(d)}return b},Chunk.prototype.tap=function(a){var b=this.taps;return this.taps=b?b.push(a):new Tap(a),this},Chunk.prototype.untap=function(){return this.taps=this.taps.tail,this},Chunk.prototype.render=function(a,b){return a(this,b)},Chunk.prototype.reference=function(a,b,c,d){return"function"==typeof a?(a=a.apply(b.current(),[this,b,null,{auto:c,filters:d}]),a instanceof Chunk?a:this.reference(a,b,c,d)):dust.isThenable(a)?this.await(a,b,null,c,d):dust.isStreamable(a)?this.stream(a,b,null,c,d):dust.isEmpty(a)?this:this.write(dust.filter(a,c,d,b))},Chunk.prototype.section=function(a,b,c,d){var e,f,g,h=c.block,i=c["else"],j=this;if("function"==typeof a&&!dust.isTemplateFn(a)){try{a=a.apply(b.current(),[this,b,c,d])}catch(k){return dust.log(k,ERROR),this.setError(k)}if(a instanceof Chunk)return a}if(dust.isEmptyObject(c))return j;if(dust.isEmptyObject(d)||(b=b.push(d)),dust.isArray(a)){if(h){if(f=a.length,f>0){for(g=b.stack&&b.stack.head||{},g.$len=f,e=0;f>e;e++)g.$idx=e,j=h(j,b.push(a[e],e,f));return g.$idx=void 0,g.$len=void 0,j}if(i)return i(this,b)}}else{if(dust.isThenable(a))return this.await(a,b,c);if(dust.isStreamable(a))return this.stream(a,b,c);if(a===!0){if(h)return h(this,b)}else if(a||0===a){if(h)return h(this,b.push(a))}else if(i)return i(this,b)}return dust.log("Section without corresponding key in template `"+b.getTemplateName()+"`",DEBUG),this},Chunk.prototype.exists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(e)return e(this,b)}else{if(d)return d(this,b);dust.log("No block for exists check in template `"+b.getTemplateName()+"`",DEBUG)}return this},Chunk.prototype.notexists=function(a,b,c){var d=c.block,e=c["else"];if(dust.isEmpty(a)){if(d)return d(this,b);dust.log("No block for not-exists check in template `"+b.getTemplateName()+"`",DEBUG)}else if(e)return e(this,b);return this},Chunk.prototype.block=function(a,b,c){var d=a||c.block;return d?d(this,b):this},Chunk.prototype.partial=function(a,b,c,d){var e;return void 0===d&&(d=c,c=b),dust.isEmptyObject(d)||(c=c.clone(),e=c.pop(),c=c.push(d).push(e)),dust.isTemplateFn(a)?this.capture(a,b,function(a,b){c.templateName=a,load(a,b,c).end()}):(c.templateName=a,load(a,this,c))},Chunk.prototype.helper=function(a,b,c,d,e){var f,g=this,h=d.filters;if(void 0===e&&(e="h"),!dust.helpers[a])return dust.log("Helper `"+a+"` does not exist",WARN),g;try{return f=dust.helpers[a](g,b,c,d),f instanceof Chunk?f:("string"==typeof h&&(h=h.split("|")),dust.isEmptyObject(c)?g.reference(f,b,e,h):g.section(f,b,c,d))}catch(i){return dust.log("Error in helper `"+a+"`: "+i.message,ERROR),g.setError(i)}},Chunk.prototype.await=function(a,b,c,d,e){return this.map(function(f){a.then(function(a){f=c?f.section(a,b,c):f.reference(a,b,d,e),f.end()},function(a){var d=c&&c.error;d?f.render(d,b.push(a)).end():(dust.log("Unhandled promise rejection in `"+b.getTemplateName()+"`",INFO),f.end())})})},Chunk.prototype.stream=function(a,b,c,d,e){var f=c&&c.block,g=c&&c.error;return this.map(function(h){var i=!1;a.on("data",function(a){i||(f?h=h.map(function(c){c.render(f,b.push(a)).end()}):c||(h=h.reference(a,b,d,e)))}).on("error",function(a){i||(g?h.render(g,b.push(a)):dust.log("Unhandled stream error in `"+b.getTemplateName()+"`",INFO),i||(i=!0,h.end()))}).on("end",function(){i||(i=!0,h.end())})})},Chunk.prototype.capture=function(a,b,c){return this.map(function(d){var e=new Stub(function(a,b){a?d.setError(a):c(b,d)});a(e.head,b).end()})},Chunk.prototype.setError=function(a){return this.error=a,this.root.flush(),this};for(var f in Chunk.prototype)dust._aliases[f]&&(Chunk.prototype[dust._aliases[f]]=Chunk.prototype[f]);Tap.prototype.push=function(a){return new Tap(a,this)},Tap.prototype.go=function(a){for(var b=this;b;)a=b.head(a),b=b.tail;return a};var HCHARS=/[&<>"']/,AMP=/&/g,LT=/</g,GT=/>/g,QUOT=/\"/g,SQUOT=/\'/g;dust.escapeHtml=function(a){return"string"==typeof a||a&&"function"==typeof a.toString?("string"!=typeof a&&(a=a.toString()),HCHARS.test(a)?a.replace(AMP,"&amp;").replace(LT,"&lt;").replace(GT,"&gt;").replace(QUOT,"&quot;").replace(SQUOT,"&#39;"):a):a};var BS=/\\/g,FS=/\//g,CR=/\r/g,LS=/\u2028/g,PS=/\u2029/g,NL=/\n/g,LF=/\f/g,SQ=/'/g,DQ=/"/g,TB=/\t/g;return dust.escapeJs=function(a){return"string"==typeof a?a.replace(BS,"\\\\").replace(FS,"\\/").replace(DQ,'\\"').replace(SQ,"\\'").replace(CR,"\\r").replace(LS,"\\u2028").replace(PS,"\\u2029").replace(NL,"\\n").replace(LF,"\\f").replace(TB,"\\t"):a},dust.escapeJSON=function(a){return JSON?JSON.stringify(a).replace(LS,"\\u2028").replace(PS,"\\u2029").replace(LT,"\\u003c"):(dust.log("JSON is undefined; could not escape `"+a+"`",WARN),a)},dust}),"function"==typeof define&&define.amd&&define.amd.dust===!0&&define(["require","dust.core"],function(require,dust){return dust.onLoad=function(a,b){require([a],function(){b()})},dust});
/*! dustjs-helpers - v1.7.4
* http://dustjs.com/
* Copyright (c) 2017 Aleksander Williams; Released under the MIT License */
!function(a,b){"function"==typeof define&&define.amd&&define.amd.dust===!0?define(["dust.core"],b):"object"==typeof exports?(module.exports=b(require("dustjs-linkedin")),module.exports.registerWith=b):b(a.dust)}(this,function(dust){function a(a,b,c){c=c||"INFO",a=a?"{@"+a+"}: ":"",dust.log(a+b,c)}function b(b){k[b]||(a(b,"Deprecation warning: "+b+" is deprecated and will be removed in a future version of dustjs-helpers","WARN"),a(null,"For help and a deprecation timeline, see https://github.com/linkedin/dustjs-helpers/wiki/Deprecated-Features#"+b.replace(/\W+/g,""),"WARN"),k[b]=!0)}function c(a){return a.stack.tail&&a.stack.tail.head&&"undefined"!=typeof a.stack.tail.head.__select__}function d(a){return c(a)&&a.get("__select__")}function e(a,b){var c,d=a.stack.head,e=a.rebase();a.stack&&a.stack.tail&&(e.stack=a.stack.tail);var f={isPending:!1,isResolved:!1,isDeferredComplete:!1,deferreds:[]};for(c in b)f[c]=b[c];return e.push({__select__:f}).push(d,a.stack.index,a.stack.of)}function f(a){var b,c;if(a.isDeferredPending=!0,a.deferreds.length)for(a.isDeferredComplete=!0,b=0,c=a.deferreds.length;c>b;b++)a.deferreds[b]();a.isDeferredPending=!1}function g(a,b){return"function"==typeof b?b.toString().replace(/(^\s+|\s+$)/gm,"").replace(/\n/gm,"").replace(/,\s*/gm,", ").replace(/\)\{/gm,") {"):b}function h(a,b){return function(c,d,e,f){return i(c,d,e,f,a,b)}}function i(b,c,e,f,g,h){var i,k,l,m,n=e.block,o=e["else"],p=d(c)||{};if(p.isResolved&&!p.isDeferredPending)return b;if(f.hasOwnProperty("key"))k=f.key;else{if(!p.hasOwnProperty("key"))return a(g,"No key specified","WARN"),b;k=p.key}return m=f.type||p.type,k=j(c.resolve(k),m),l=j(c.resolve(f.value),m),h(k,l)?(p.isPending||(i=!0,p.isPending=!0),n&&(b=b.render(n,c)),i&&(p.isResolved=!0)):o&&(b=b.render(o,c)),b}function j(a,b){switch(b&&(b=b.toLowerCase()),b){case"number":return+a;case"string":return String(a);case"boolean":return a="false"===a?!1:a,Boolean(a);case"date":return new Date(a)}return a}var k={},l={tap:function(a,c,d){return b("tap"),d.resolve(a)},sep:function(a,b,c){var d=c.block;return b.stack.index===b.stack.of-1?a:d?d(a,b):a},first:function(a,b,c){return 0===b.stack.index?c.block(a,b):a},last:function(a,b,c){return b.stack.index===b.stack.of-1?c.block(a,b):a},contextDump:function(b,c,d,e){var f,h,i=c.resolve(e.to),j=c.resolve(e.key);switch(j){case"full":f=c.stack;break;default:f=c.stack.head}switch(h=JSON.stringify(f,g,2),i){case"console":a("contextDump",h);break;default:h=h.replace(/</g,"\\u003c"),b=b.write(h)}return b},math:function(b,c,g,h){var i,j=h.key,k=h.method,l=h.operand,m=h.round;if(!h.hasOwnProperty("key")||!h.method)return a("math","`key` or `method` was not provided","ERROR"),b;switch(j=parseFloat(c.resolve(j)),l=parseFloat(c.resolve(l)),k){case"mod":0===l&&a("math","Division by 0","ERROR"),i=j%l;break;case"add":i=j+l;break;case"subtract":i=j-l;break;case"multiply":i=j*l;break;case"divide":0===l&&a("math","Division by 0","ERROR"),i=j/l;break;case"ceil":case"floor":case"round":case"abs":i=Math[k](j);break;case"toint":i=parseInt(j,10);break;default:a("math","Method `"+k+"` is not supported","ERROR")}return"undefined"!=typeof i&&(m&&(i=Math.round(i)),g&&g.block?(c=e(c,{key:i}),b=b.render(g.block,c),f(d(c))):b=b.write(i)),b},select:function(b,c,g,h){var i=g.block,j={};return h.hasOwnProperty("key")&&(j.key=c.resolve(h.key)),h.hasOwnProperty("type")&&(j.type=h.type),i?(c=e(c,j),b=b.render(i,c),f(d(c))):a("select","Missing body block","WARN"),b},eq:h("eq",function(a,b){return a===b}),ne:h("ne",function(a,b){return a!==b}),lt:h("lt",function(a,b){return b>a}),lte:h("lte",function(a,b){return b>=a}),gt:h("gt",function(a,b){return a>b}),gte:h("gte",function(a,b){return a>=b}),any:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("any","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved&&(a=a.render(e.block,c)),a.end()})}):a("any","Must be used inside a {@select} block","ERROR"),b},none:function(b,c,e){var f=d(c);return f?f.isDeferredComplete?a("none","Must not be nested inside {@any} or {@none} block","ERROR"):b=b.map(function(a){f.deferreds.push(function(){f.isResolved||(a=a.render(e.block,c)),a.end()})}):a("none","Must be used inside a {@select} block","ERROR"),b},size:function(a,b,c,d){var e,f,g=d.key;if(g=b.resolve(d.key),g&&g!==!0)if(dust.isArray(g))e=g.length;else if(!isNaN(parseFloat(g))&&isFinite(g))e=g;else if("object"==typeof g){e=0;for(f in g)g.hasOwnProperty(f)&&e++}else e=(g+"").length;else e=0;return a.write(e)}};for(var m in l)dust.helpers[m]=l[m];return dust});
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):t.page=e()}(this,function(){"use strict";function t(t){return r(a(t))}var p=Array.isArray||function(t){return"[object Array]"==Object.prototype.toString.call(t)},o=c,e=a,n=r,i=h,y=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^()])+)\\))?|\\(((?:\\\\.|[^()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function a(t){for(var e,n=[],i=0,o=0,r="";null!=(e=y.exec(t));){var a=e[0],s=e[1],h=e.index;if(r+=t.slice(o,h),o=h+a.length,s)r+=s[1];else{r&&(n.push(r),r="");var c=e[2],p=e[3],u=e[4],f=e[5],l=e[6],d=e[7],g="+"===l||"*"===l,v="?"===l||"*"===l,m=c||"/",w=u||f||(d?".*":"[^"+m+"]+?");n.push({name:p||i++,prefix:c||"",delimiter:m,optional:v,repeat:g,pattern:w.replace(/([=!:$\/()])/g,"\\$1")})}}return o<t.length&&(r+=t.substr(o)),r&&n.push(r),n}function r(h){for(var c=new Array(h.length),t=0;t<h.length;t++)"object"==typeof h[t]&&(c[t]=new RegExp("^"+h[t].pattern+"$"));return function(t){for(var e="",n=t||{},i=0;i<h.length;i++){var o=h[i];if("string"!=typeof o){var r,a=n[o.name];if(null==a){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to be defined')}if(p(a)){if(!o.repeat)throw new TypeError('Expected "'+o.name+'" to not repeat, but received "'+a+'"');if(0===a.length){if(o.optional)continue;throw new TypeError('Expected "'+o.name+'" to not be empty')}for(var s=0;s<a.length;s++){if(r=encodeURIComponent(a[s]),!c[i].test(r))throw new TypeError('Expected all "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=(0===s?o.prefix:o.delimiter)+r}}else{if(r=encodeURIComponent(a),!c[i].test(r))throw new TypeError('Expected "'+o.name+'" to match "'+o.pattern+'", but received "'+r+'"');e+=o.prefix+r}}else e+=o}return e}}function u(t){return t.replace(/([.+*?=^!:${}()[\]|\/])/g,"\\$1")}function s(t,e){return t.keys=e,t}function f(t){return t.sensitive?"":"i"}function h(t,e){for(var n=(e=e||{}).strict,i=!1!==e.end,o="",r=t[t.length-1],a="string"==typeof r&&/\/$/.test(r),s=0;s<t.length;s++){var h=t[s];if("string"==typeof h)o+=u(h);else{var c=u(h.prefix),p=h.pattern;h.repeat&&(p+="(?:"+c+p+")*"),o+=p=h.optional?c?"(?:"+c+"("+p+"))?":"("+p+")?":c+"("+p+")"}}return n||(o=(a?o.slice(0,-2):o)+"(?:\\/(?=$))?"),o+=i?"$":n&&a?"":"(?=\\/|$)",new RegExp("^"+o,f(e))}function c(t,e,n){return p(e=e||[])?n=n||{}:(n=e,e=[]),t instanceof RegExp?function(t,e){var n=t.source.match(/\((?!\?)/g);if(n)for(var i=0;i<n.length;i++)e.push({name:i,prefix:null,delimiter:null,optional:!1,repeat:!1,pattern:null});return s(t,e)}(t,e):(p(t)?function(t,e,n){for(var i=[],o=0;o<t.length;o++)i.push(c(t[o],e,n).source);return s(new RegExp("(?:"+i.join("|")+")",f(n)),e)}:function(t,e,n){for(var i=a(t),o=h(i,n),r=0;r<i.length;r++)"string"!=typeof i[r]&&e.push(i[r]);return s(o,e)})(t,e,n)}o.parse=e,o.compile=t,o.tokensToFunction=n,o.tokensToRegExp=i;var l,d="undefined"!=typeof document,g="undefined"!=typeof window,v="undefined"!=typeof history,m="undefined"!=typeof process,w=d&&document.ontouchstart?"touchstart":"click",_=g&&!(!window.history.location&&!window.location);function b(){this.callbacks=[],this.exits=[],this.current="",this.len=0,this._decodeURLComponents=!0,this._base="",this._strict=!1,this._running=!1,this._hashbang=!1,this.clickHandler=this.clickHandler.bind(this),this._onpopstate=this._onpopstate.bind(this)}function x(t,e){if("function"==typeof t)return x.call(this,"*",t);if("function"==typeof e)for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.callbacks.push(n.middleware(arguments[i]));else"string"==typeof t?this["string"==typeof e?"redirect":"show"](t,e):this.start(t)}function E(t,e,n){var i=this.page=n||x,o=i._window,r=i._hashbang,a=i._getBase();"/"===t[0]&&0!==t.indexOf(a)&&(t=a+(r?"#!":"")+t);var s=t.indexOf("?");this.canonicalPath=t;var h=new RegExp("^"+a.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"));if(this.path=t.replace(h,"")||"/",r&&(this.path=this.path.replace("#!","")||"/"),this.title=d&&o.document.title,this.state=e||{},this.state.path=t,this.querystring=~s?i._decodeURLEncodedURIComponent(t.slice(s+1)):"",this.pathname=i._decodeURLEncodedURIComponent(~s?t.slice(0,s):t),this.params={},this.hash="",!r){if(!~this.path.indexOf("#"))return;var c=this.path.split("#");this.path=this.pathname=c[0],this.hash=i._decodeURLEncodedURIComponent(c[1])||"",this.querystring=this.querystring.split("#")[0]}}function R(t,e,n){this.page=n||k;var i=e||{};i.strict=i.strict||n._strict,this.path="*"===t?"(.*)":t,this.method="GET",this.regexp=o(this.path,this.keys=[],i)}b.prototype.configure=function(t){var e=t||{};this._window=e.window||g&&window,this._decodeURLComponents=!1!==e.decodeURLComponents,this._popstate=!1!==e.popstate&&g,this._click=!1!==e.click&&d,this._hashbang=!!e.hashbang;var n=this._window;this._popstate?n.addEventListener("popstate",this._onpopstate,!1):g&&n.removeEventListener("popstate",this._onpopstate,!1),this._click?n.document.addEventListener(w,this.clickHandler,!1):d&&n.document.removeEventListener(w,this.clickHandler,!1),this._hashbang&&g&&!v?n.addEventListener("hashchange",this._onpopstate,!1):g&&n.removeEventListener("hashchange",this._onpopstate,!1)},b.prototype.base=function(t){if(0===arguments.length)return this._base;this._base=t},b.prototype._getBase=function(){var t=this._base;if(t)return t;var e=g&&this._window&&this._window.location;return g&&this._hashbang&&e&&"file:"===e.protocol&&(t=e.pathname),t},b.prototype.strict=function(t){if(0===arguments.length)return this._strict;this._strict=t},b.prototype.start=function(t){var e=t||{};if(this.configure(e),!1!==e.dispatch){var n;if(this._running=!0,_){var i=this._window.location;n=this._hashbang&&~i.hash.indexOf("#!")?i.hash.substr(2)+i.search:this._hashbang?i.search+i.hash:i.pathname+i.search+i.hash}this.replace(n,null,!0,e.dispatch)}},b.prototype.stop=function(){if(this._running){this.current="",this.len=0,this._running=!1;var t=this._window;this._click&&t.document.removeEventListener(w,this.clickHandler,!1),g&&t.removeEventListener("popstate",this._onpopstate,!1),g&&t.removeEventListener("hashchange",this._onpopstate,!1)}},b.prototype.show=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,!1!==n&&this.dispatch(o,r),!1!==o.handled&&!1!==i&&o.pushState(),o},b.prototype.back=function(t,e){var n=this;if(0<this.len){var i=this._window;v&&i.history.back(),this.len--}else t?setTimeout(function(){n.show(t,e)}):setTimeout(function(){n.show(n._getBase(),e)})},b.prototype.redirect=function(t,e){var n=this;"string"==typeof t&&"string"==typeof e&&x.call(this,t,function(t){setTimeout(function(){n.replace(e)},0)}),"string"==typeof t&&void 0===e&&setTimeout(function(){n.replace(t)},0)},b.prototype.replace=function(t,e,n,i){var o=new E(t,e,this),r=this.prevContext;return this.prevContext=o,this.current=o.path,o.init=n,o.save(),!1!==i&&this.dispatch(o,r),o},b.prototype.dispatch=function(e,n){var i=0,o=0,r=this;function a(){var t=r.callbacks[i++];if(e.path===r.current)return t?void t(e,a):function(t){if(t.handled)return;var e,n=this._window;e=this._hashbang?_&&this._getBase()+n.location.hash.replace("#!",""):_&&n.location.pathname+n.location.search;if(e===t.canonicalPath)return;this.stop(),t.handled=!1,_&&(n.location.href=t.canonicalPath)}.call(r,e);e.handled=!1}(n?function t(){var e=r.exits[o++];if(!e)return a();e(n,t)}:a)()},b.prototype.exit=function(t,e){if("function"==typeof t)return this.exit("*",t);for(var n=new R(t,null,this),i=1;i<arguments.length;++i)this.exits.push(n.middleware(arguments[i]))},b.prototype.clickHandler=function(t){if(1===this._which(t)&&!(t.metaKey||t.ctrlKey||t.shiftKey||t.defaultPrevented)){var e=t.target,n=t.path||(t.composedPath?t.composedPath():null);if(n)for(var i=0;i<n.length;i++)if(n[i].nodeName&&"A"===n[i].nodeName.toUpperCase()&&n[i].href){e=n[i];break}for(;e&&"A"!==e.nodeName.toUpperCase();)e=e.parentNode;if(e&&"A"===e.nodeName.toUpperCase()){var o="object"==typeof e.href&&"SVGAnimatedString"===e.href.constructor.name;if(!e.hasAttribute("download")&&"external"!==e.getAttribute("rel")){var r=e.getAttribute("href");if((this._hashbang||!this._samePath(e)||!e.hash&&"#"!==r)&&!(r&&-1<r.indexOf("mailto:"))&&(o?!e.target.baseVal:!e.target)&&(o||this.sameOrigin(e.href))){var a=o?e.href.baseVal:e.pathname+e.search+(e.hash||"");a="/"!==a[0]?"/"+a:a,m&&a.match(/^\/[a-zA-Z]:\//)&&(a=a.replace(/^\/[a-zA-Z]:\//,"/"));var s=a,h=this._getBase();0===a.indexOf(h)&&(a=a.substr(h.length)),this._hashbang&&(a=a.replace("#!","")),(!h||s!==a||_&&"file:"===this._window.location.protocol)&&(t.preventDefault(),this.show(s))}}}}},b.prototype._onpopstate=(l=!1,g?(d&&"complete"===document.readyState?l=!0:window.addEventListener("load",function(){setTimeout(function(){l=!0},0)}),function(t){if(l)if(t.state){var e=t.state.path;this.replace(e,t.state)}else if(_){var n=this._window.location;this.show(n.pathname+n.search+n.hash,void 0,void 0,!1)}}):function(){}),b.prototype._which=function(t){return null==(t=t||g&&this._window.event).which?t.button:t.which},b.prototype._toURL=function(t){var e=this._window;if("function"==typeof URL&&_)return new URL(t,e.location.toString());if(d){var n=e.document.createElement("a");return n.href=t,n}},b.prototype.sameOrigin=function(t){if(!t||!_)return!1;var e=this._toURL(t),n=this._window.location;return n.protocol===e.protocol&&n.hostname===e.hostname&&n.port===e.port},b.prototype._samePath=function(t){if(!_)return!1;var e=this._window.location;return t.pathname===e.pathname&&t.search===e.search},b.prototype._decodeURLEncodedURIComponent=function(t){return"string"==typeof t&&this._decodeURLComponents?decodeURIComponent(t.replace(/\+/g," ")):t},E.prototype.pushState=function(){var t=this.page,e=t._window,n=t._hashbang;t.len++,v&&e.history.pushState(this.state,this.title,n&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},E.prototype.save=function(){var t=this.page;v&&"file:"!==t._window.location.protocol&&t._window.history.replaceState(this.state,this.title,t._hashbang&&"/"!==this.path?"#!"+this.path:this.canonicalPath)},R.prototype.middleware=function(n){var i=this;return function(t,e){if(i.match(t.path,t.params))return n(t,e);e()}},R.prototype.match=function(t,e){var n=this.keys,i=t.indexOf("?"),o=~i?t.slice(0,i):t,r=this.regexp.exec(decodeURIComponent(o));if(!r)return!1;for(var a=1,s=r.length;a<s;++a){var h=n[a-1],c=this.page._decodeURLEncodedURIComponent(r[a]);void 0===c&&hasOwnProperty.call(e,h.name)||(e[h.name]=c)}return!0};var k=function t(){var e=new b;function n(){return x.apply(e,arguments)}return n.callbacks=e.callbacks,n.exits=e.exits,n.base=e.base.bind(e),n.strict=e.strict.bind(e),n.start=e.start.bind(e),n.stop=e.stop.bind(e),n.show=e.show.bind(e),n.back=e.back.bind(e),n.redirect=e.redirect.bind(e),n.replace=e.replace.bind(e),n.dispatch=e.dispatch.bind(e),n.exit=e.exit.bind(e),n.configure=e.configure.bind(e),n.sameOrigin=e.sameOrigin.bind(e),n.clickHandler=e.clickHandler.bind(e),n.create=t,Object.defineProperty(n,"len",{get:function(){return e.len},set:function(t){e.len=t}}),Object.defineProperty(n,"current",{get:function(){return e.current},set:function(t){e.current=t}}),n.Context=E,n.Route=R,n}(),U=k,L=k;return U.default=L,U});
/*!
 * EventEmitter v5.2.4 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - http://oli.me.uk/
 * @preserve
 */
!function(e){"use strict";function t(){}function n(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function r(e){return function(){return this[e].apply(this,arguments)}}function i(e){return"function"==typeof e||e instanceof RegExp||!(!e||"object"!=typeof e)&&i(e.listener)}var s=t.prototype,o=e.EventEmitter;s.getListeners=function(e){var t,n,r=this._getEvents();if(e instanceof RegExp){t={};for(n in r)r.hasOwnProperty(n)&&e.test(n)&&(t[n]=r[n])}else t=r[e]||(r[e]=[]);return t},s.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},s.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&(t={},t[e]=n),t||n},s.addListener=function(e,t){if(!i(t))throw new TypeError("listener must be a function");var r,s=this.getListenersAsObject(e),o="object"==typeof t;for(r in s)s.hasOwnProperty(r)&&n(s[r],t)===-1&&s[r].push(o?t:{listener:t,once:!1});return this},s.on=r("addListener"),s.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},s.once=r("addOnceListener"),s.defineEvent=function(e){return this.getListeners(e),this},s.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},s.removeListener=function(e,t){var r,i,s=this.getListenersAsObject(e);for(i in s)s.hasOwnProperty(i)&&(r=n(s[i],t),r!==-1&&s[i].splice(r,1));return this},s.off=r("removeListener"),s.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},s.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},s.manipulateListeners=function(e,t,n){var r,i,s=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(r=n.length;r--;)s.call(this,t,n[r]);else for(r in t)t.hasOwnProperty(r)&&(i=t[r])&&("function"==typeof i?s.call(this,r,i):o.call(this,r,i));return this},s.removeEvent=function(e){var t,n=typeof e,r=this._getEvents();if("string"===n)delete r[e];else if(e instanceof RegExp)for(t in r)r.hasOwnProperty(t)&&e.test(t)&&delete r[t];else delete this._events;return this},s.removeAllListeners=r("removeEvent"),s.emitEvent=function(e,t){var n,r,i,s,o,u=this.getListenersAsObject(e);for(s in u)if(u.hasOwnProperty(s))for(n=u[s].slice(0),i=0;i<n.length;i++)r=n[i],r.once===!0&&this.removeListener(e,r.listener),o=r.listener.apply(this,t||[]),o===this._getOnceReturnValue()&&this.removeListener(e,r.listener);return this},s.trigger=r("emitEvent"),s.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},s.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},s._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},s._getEvents=function(){return this._events||(this._events={})},t.noConflict=function(){return e.EventEmitter=o,t},"function"==typeof define&&define.amd?define(function(){return t}):"object"==typeof module&&module.exports?module.exports=t:e.EventEmitter=t}(this||{});
/* docma (dust) compiled templates */
(function(dust){dust.register("docma-404",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class=\"container container-boxed\"><br /><br /><h1>404</h1><hr /><h3>Page Not Found</h3><br />The file or page you have requested is not found. &nbsp;&nbsp;<br />Please make sure page address is entered correctly.<br /><br /><br /></div></div>");}body_0.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-api",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{}).w("<div id=\"wrapper\">").x(ctx.getPath(false, ["template","options","sidebar","enabled"]),ctx,{"block":body_1},{}).w("<div id=\"page-content-wrapper\"><div class=\"container\"><br />").s(ctx.get(["documentation"], false),ctx,{"block":body_2},{}).w("<br /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span></div></div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"sidebar-wrapper\">").p("sidebar",ctx,ctx,{}).w("</div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("docma-content",body_0);function body_0(chk,ctx){return chk.p("navbar",ctx,ctx,{"boxed":"true"}).w("<div id=\"page-content-wrapper\"><div class='").h("eq",ctx,{"block":body_1},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("'><div id=\"docma-content\"></div>").h("eq",ctx,{"block":body_2},{"key":ctx.getPath(false, ["currentRoute","sourceType"]),"value":"md"},"h").w("</div></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("container container-boxed");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<br /><hr /><span class=\"docma-info\">Documentation built with <b><a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://onury.io/docma\">Docma</a></b>.</span>");}body_2.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("enums",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["$members"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","enums"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Enumeration</div><ul class=\"param-list\">").s(ctx.get(["$members"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\"><span class=\"param-info value\">Value:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Enumeration</th><th>Type</th><th>Value</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["$members"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.getPath(true, []),ctx,"h",["$longname","s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["$val"]).w("</code></td><td>").f(ctx.getPath(true, []),ctx,"h",["s","$desc"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navbar",body_0);function body_0(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","enabled"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<nav class=\"navbar ").x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"block":body_2},{}).w("\"><div class=\"navbar-inner ").x(ctx.get(["boxed"], false),ctx,{"block":body_3},{}).w("\"><div class=\"navbar-brand\">").x(ctx.getPath(false, ["template","options","logo","dark"]),ctx,{"block":body_4},{}).w("<span class=\"navbar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").h("gt",ctx,{"block":body_7},{"key":ctx.getPath(false, ["template","options","navbar","menu","length"]),"value":0},"h").w("</div></nav>").x(ctx.getPath(false, ["template","options","navbar","fixed"]),ctx,{"block":body_16},{}).w("<div class=\"nav-overlay\"></div>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("dark");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("container container-boxed");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.x(ctx.getPath(false, ["template","options","navbar","dark"]),ctx,{"else":body_5,"block":body_6},{});}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","dark"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"navbar-logo\" />");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<div class=\"navbar-menu-btn\" tabindex=\"0\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i><i class=\"fas fa-md fa-times trans-all-ease\"></i></div><div class=\"navbar-menu\"><ul class=\"navbar-list\">").s(ctx.getPath(false, ["template","options","navbar","menu"]),ctx,{"block":body_8},{}).w("</ul></div>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.x(ctx.get(["items"], false),ctx,{"else":body_9,"block":body_10},{});}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{});}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<li class=\"dropdown\"><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_11,"block":body_12},{}).w("\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"false\"><i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>").x(ctx.get(["label"], false),ctx,{"block":body_13},{}).x(ctx.get(["chevron"], false),ctx,{"block":body_14},{}).w("</a><ul>").s(ctx.get(["items"], false),ctx,{"block":body_15},{}).w("</ul></li>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("#");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h").w("</span>");}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<i class=\"nav-arrow fas fa-sm fa-angle-down\"></i>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w(" ").p("navitem",ctx,ctx.rebase(ctx.getPath(true, [])),{}).w(" ");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.w("<div class=\"nav-spacer\"></div>");}body_16.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("navitem",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["separator"], false),ctx,{"else":body_1,"block":body_6},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<li><a href=\"").x(ctx.get(["href"], false),ctx,{"else":body_2,"block":body_3},{}).w("\" target=\"").f(ctx.get(["target"], false),ctx,"h").w("\">").x(ctx.get(["iconClass"], false),ctx,{"block":body_4},{}).x(ctx.get(["label"], false),ctx,{"block":body_5},{}).w("</a></li>");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("#");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.f(ctx.get(["href"], false),ctx,"h");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"nav-icon ").f(ctx.get(["iconClass"], false),ctx,"h").w("\" aria-hidden=\"true\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<span class=\"nav-label\">").f(ctx.get(["label"], false),ctx,"h",["s"]).w("</span>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<li role=\"separator\" class=\"divider\"></li>");}body_6.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("params",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["params"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_8},{"key":ctx.getPath(false, ["template","options","symbols","params"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Parameters</div><ul class=\"param-list\">").s(ctx.get(["params"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").x(ctx.get(["variable"], false),ctx,{"block":body_4},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").x(ctx.get(["variable"], false),ctx,{"block":body_5},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span><span class=\"param-info-box\">").x(ctx.get(["optional"], false),ctx,{"else":body_6,"block":body_7},{}).w("</span></div><div class=\"param-desc\">").f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("...");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("...");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<span class=\"param-info default\">Default:&nbsp;</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Param</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["params"], false),ctx,{"block":body_9},{}).w("</tbody></table>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<tr><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_10},{}).f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").x(ctx.get(["variable"], false),ctx,{"block":body_11},{}).f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").x(ctx.get(["optional"], false),ctx,{"else":body_12,"block":body_13},{}).f(ctx.getPath(true, []),ctx,"h",["s","$param_desc"]).w("</td></tr>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("...");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("...");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.w("<span class=\"param-info required boxed\">Required</span>");}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("<span class=\"param-info default boxed\">Default</span><span class=\"color-gray\">:</span><code>").f(ctx.getPath(true, []),ctx,"h",["$def"]).w("</code>");}body_13.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("properties",body_0);function body_0(chk,ctx){return chk.x(ctx.get(["properties"], false),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.h("eq",ctx,{"else":body_2,"block":body_4},{"key":ctx.getPath(false, ["template","options","symbols","props"]),"value":"table"},"h");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"space-top-sm space-bottom-xs fw-bold\">Properties</div><ul class=\"param-list\">").s(ctx.get(["properties"], false),ctx,{"block":body_3},{}).w("</ul>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<li><div class=\"param-meta clearfix\"><span class=\"inline-block space-right-sm\"><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code>&nbsp;:&nbsp;<code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></span></div><div class=\"param-desc\">").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</div></li>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<table class=\"table table-striped table-bordered\"><thead><tr><th>Property</th><th>Type</th><th>Description</th></tr></thead><tbody>").s(ctx.get(["properties"], false),ctx,{"block":body_5},{}).w("</tbody></table>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<tr><td><code>").f(ctx.get(["name"], false),ctx,"h",["s","$dot_prop"]).w("</code></td><td><code>").f(ctx.getPath(true, []),ctx,"h",["s","$type"]).w("</code></td><td>").f(ctx.get(["description"], false),ctx,"h",["s","$p"]).w("</td></tr>");}body_5.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("sidebar",body_0);function body_0(chk,ctx){return chk.w("<div class=\"sidebar-header\"><div id=\"sidebar-toggle\"><i class=\"fas fa-lg fa-bars trans-all-ease\"></i></div><div class=\"sidebar-brand\">").x(ctx.getPath(false, ["template","options","logo","light"]),ctx,{"block":body_1},{}).w("<span class=\"sidebar-title\"><a href=\"").f(ctx.getPath(false, ["template","options","title","href"]),ctx,"h").w("\">").f(ctx.getPath(false, ["template","options","title","label"]),ctx,"h").w("</a></span></div>").x(ctx.getPath(false, ["template","options","sidebar","search"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["template","options","sidebar","toolbar"]),ctx,{"block":body_3},{}).w("</div><div class=\"sidebar-nav-container\"><ul class=\"sidebar-nav\">").f(ctx.get(["symbols"], false),ctx,"h",["s","$navnodes"]).w("</ul></div>");}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<img src=\"").f(ctx.getPath(false, ["template","options","logo","light"]),ctx,"h").w("\" alt=\"logo\" class=\"sidebar-logo\" />");}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.w("<div class=\"sidebar-search\"><div class=\"sidebar-search-icon\"><i class=\"fas fa-md fa-search\"></i></div><input id=\"txt-search\" type=\"search\" placeholder=\"Search...\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\" /><div class=\"sidebar-search-clean\"><i class=\"fas fa-lg fa-times-circle\"></i></div></div>");}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<div class=\"sidebar-toolbar\"><div class=\"toolbar-scope-filters\"></div><div class=\"toolbar-kind-filters\"></div><div class=\"toolbar-buttons\"><span class=\"btn-switch-fold inline-block\" title=\"Fold Symbols\">").h("eq",ctx,{"else":body_4,"block":body_5},{"key":ctx.getPath(false, ["template","options","sidebar","itemsFolded"]),"type":"boolean","value":"true"},"h").w("</span><span class=\"btn-switch-outline inline-block space-left-xs\" title=\"Toggle Outline\">").h("eq",ctx,{"else":body_6,"block":body_7},{"key":ctx.getPath(false, ["template","options","sidebar","outline"]),"type":"string","value":"tree"},"h").w("</span></div></div>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-down\"></i>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<i class=\"far fa-lg fa-caret-square-right\"></i>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-outdent\"></i>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<i class=\"fas fa-lg fa-indent\"></i>");}body_7.__dustBody=!0;return body_0}(dust));
(function(dust){dust.register("symbol",body_0);function body_0(chk,ctx){return chk.nx(ctx.getPath(false, ["symbol","$hide"]),ctx,{"block":body_1},{});}body_0.__dustBody=!0;function body_1(chk,ctx){return chk.w("<div id=\"").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\" class=\"symbol-container\"><div class=\"symbol-heading\"><div class=\"symbol\"><a href=\"#").f(ctx.get(["symbol"], false),ctx,"h",["$id"]).w("\"><i class=\"fas fa-link color-gray-light\" aria-hidden=\"true\"></i></a><code class=\"symbol-name\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$longname_params"]).w("</code><span class=\"symbol-sep\">").f(ctx.get(["symbol"], false),ctx,"h",["$type_sep"]).w("</span><code class=\"symbol-type\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$type"]).w("</code>").f(ctx.get(["symbol"], false),ctx,"h",["s","$tags"]).w("</div></div><div class=\"symbol-definition\"><div class=\"symbol-info\">").x(ctx.getPath(false, ["symbol","alias"]),ctx,{"block":body_2},{}).x(ctx.getPath(false, ["symbol","augments"]),ctx,{"block":body_4},{}).x(ctx.getPath(false, ["symbol","version"]),ctx,{"block":body_5},{}).x(ctx.getPath(false, ["symbol","since"]),ctx,{"block":body_6},{}).x(ctx.getPath(false, ["symbol","copyright"]),ctx,{"block":body_7},{}).x(ctx.getPath(false, ["symbol","author"]),ctx,{"block":body_8},{}).x(ctx.getPath(false, ["symbol","license"]),ctx,{"block":body_9},{}).w("</div>").x(ctx.getPath(false, ["symbol","defaultvalue"]),ctx,{"block":body_10},{}).f(ctx.get(["symbol"], false),ctx,"h",["s","$desc"]).x(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_11},{}).h("ne",ctx,{"block":body_16},{"key":ctx.getPath(false, ["symbol","meta","code","type"]),"value":"ClassDeclaration"},"h").x(ctx.getPath(false, ["symbol","fires"]),ctx,{"block":body_19},{}).x(ctx.getPath(false, ["symbol","returns"]),ctx,{"block":body_21},{}).x(ctx.getPath(false, ["symbol","generator"]),ctx,{"block":body_24},{}).x(ctx.getPath(false, ["symbol","exceptions"]),ctx,{"block":body_28},{}).x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_31},{}).x(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_32},{}).x(ctx.getPath(false, ["template","options","symbols","meta"]),ctx,{"block":body_35},{}).w("</div></div><hr />").x(ctx.getPath(false, ["symbol","$constructor"]),ctx,{"block":body_39},{}).nx(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"block":body_41},{});}body_1.__dustBody=!0;function body_2(chk,ctx){return chk.nx(ctx.get(["$constructor"], false),ctx,{"block":body_3},{});}body_2.__dustBody=!0;function body_3(chk,ctx){return chk.w("<p><b class=\"caption\">Alias:</b> <code>").f(ctx.getPath(false, ["symbol","alias"]),ctx,"h",["s","$dot_prop"]).w("</code></p>");}body_3.__dustBody=!0;function body_4(chk,ctx){return chk.w("<p><b class=\"caption\">Extends:</b> ").f(ctx.get(["symbol"], false),ctx,"h",["s","$extends"]).w("</p>");}body_4.__dustBody=!0;function body_5(chk,ctx){return chk.w("<p><b class=\"caption\">Version:</b>&nbsp;").f(ctx.getPath(false, ["symbol","version"]),ctx,"h",["s"]).w("</p>");}body_5.__dustBody=!0;function body_6(chk,ctx){return chk.w("<p><b class=\"caption\">Since:</b>&nbsp;").f(ctx.getPath(false, ["symbol","since"]),ctx,"h",["s"]).w("</p>");}body_6.__dustBody=!0;function body_7(chk,ctx){return chk.w("<p><b class=\"caption\">Copyright:</b>&nbsp;").f(ctx.getPath(false, ["symbol","copyright"]),ctx,"h",["s"]).w("</p>");}body_7.__dustBody=!0;function body_8(chk,ctx){return chk.w("<p><b class=\"caption\">Author:</b>&nbsp;").f(ctx.getPath(false, ["symbol","author"]),ctx,"h",["s","$author"]).w("</p>");}body_8.__dustBody=!0;function body_9(chk,ctx){return chk.w("<p><b class=\"caption\">License:</b>&nbsp;").f(ctx.getPath(false, ["symbol","license"]),ctx,"h",["s"]).w("</p>");}body_9.__dustBody=!0;function body_10(chk,ctx){return chk.w("<p class=\"symbol-def-val\"><b class=\"caption\"><i>Value:</i></b>&nbsp;<code>").f(ctx.get(["symbol"], false),ctx,"h",["$def"]).w("</code></p>");}body_10.__dustBody=!0;function body_11(chk,ctx){return chk.w("<p class=\"no-margin\"><b>See</b>").h("gt",ctx,{"else":body_12,"block":body_14},{"key":ctx.getPath(false, ["symbol","see","length"]),"value":1},"h").w("</p>");}body_11.__dustBody=!0;function body_12(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_13},{});}body_12.__dustBody=!0;function body_13(chk,ctx){return chk.w("&nbsp;").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]);}body_13.__dustBody=!0;function body_14(chk,ctx){return chk.w("<ul>").s(ctx.getPath(false, ["symbol","see"]),ctx,{"block":body_15},{}).w("</ul>");}body_14.__dustBody=!0;function body_15(chk,ctx){return chk.w("<li>").f(ctx.getPath(true, []),ctx,"h",["s","$pl"]).w("</li>");}body_15.__dustBody=!0;function body_16(chk,ctx){return chk.p("params",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ").x(ctx.getPath(false, ["symbol","isEnum"]),ctx,{"else":body_17,"block":body_18},{});}body_16.__dustBody=!0;function body_17(chk,ctx){return chk.p("properties",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_17.__dustBody=!0;function body_18(chk,ctx){return chk;}body_18.__dustBody=!0;function body_19(chk,ctx){return chk.h("gt",ctx,{"block":body_20},{"key":ctx.getPath(false, ["symbol","fires","length"]),"value":"0","type":"number"},"h");}body_19.__dustBody=!0;function body_20(chk,ctx){return chk.w("<p><b class=\"caption\">Emits:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$emits"]).w("</p>");}body_20.__dustBody=!0;function body_21(chk,ctx){return chk.h("gt",ctx,{"else":body_22,"block":body_23},{"key":ctx.getPath(false, ["symbol","returns","length"]),"value":"1","type":"number"},"h");}body_21.__dustBody=!0;function body_22(chk,ctx){return chk.w("<p><b class=\"caption\">Returns:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_22.__dustBody=!0;function body_23(chk,ctx){return chk.w("<b class=\"caption\">Returns:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$returns"]).w("</p>");}body_23.__dustBody=!0;function body_24(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","yields"]),ctx,{"block":body_25},{});}body_24.__dustBody=!0;function body_25(chk,ctx){return chk.h("gt",ctx,{"else":body_26,"block":body_27},{"key":ctx.getPath(false, ["symbol","yields","length"]),"value":"1","type":"number"},"h");}body_25.__dustBody=!0;function body_26(chk,ctx){return chk.w("<p><b class=\"caption\">Yields:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_26.__dustBody=!0;function body_27(chk,ctx){return chk.w("<b class=\"caption\">Yields:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$yields"]).w("</p>");}body_27.__dustBody=!0;function body_28(chk,ctx){return chk.h("gt",ctx,{"else":body_29,"block":body_30},{"key":ctx.getPath(false, ["symbol","exceptions","length"]),"value":"1","type":"number"},"h");}body_28.__dustBody=!0;function body_29(chk,ctx){return chk.w("<p><b class=\"caption\">Throws:</b>&nbsp;&nbsp;").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_29.__dustBody=!0;function body_30(chk,ctx){return chk.w("<b class=\"caption\">Throws:</b><p class=\"pad-left\">").f(ctx.get(["symbol"], false),ctx,"h",["s","$exceptions"]).w("</p>");}body_30.__dustBody=!0;function body_31(chk,ctx){return chk.p("enums",ctx,ctx.rebase(ctx.get(["symbol"], false)),{"template":ctx.get(["template"], false)}).w(" ");}body_31.__dustBody=!0;function body_32(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","examples"]),ctx,{"block":body_33},{});}body_32.__dustBody=!0;function body_33(chk,ctx){return chk.w("<p><b>Example").h("gt",ctx,{"block":body_34},{"key":ctx.getPath(false, ["symbol","examples","length"]),"value":1},"h").w("</b>").f(ctx.getPath(true, []),ctx,"h",["$get_caption","s"]).w("</p><pre><code>").f(ctx.getPath(true, []),ctx,"h",["$nt","$tnl","$remove_caption"]).w("</code></pre>");}body_33.__dustBody=!0;function body_34(chk,ctx){return chk.w("&nbsp;#").h("math",ctx,{},{"key":ctx.get(["$idx"], false),"method":"add","operand":"1"},"h");}body_34.__dustBody=!0;function body_35(chk,ctx){return chk.x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_36},{});}body_35.__dustBody=!0;function body_36(chk,ctx){return chk.w("<p class=\"symbol-meta\">").x(ctx.getPath(false, ["symbol","meta","filename"]),ctx,{"block":body_37},{}).x(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,{"block":body_38},{}).w("</p>");}body_36.__dustBody=!0;function body_37(chk,ctx){return chk.w("<b>File:</b> ").f(ctx.getPath(false, ["symbol","meta","filename"]),ctx,"h").w("&nbsp;&nbsp;");}body_37.__dustBody=!0;function body_38(chk,ctx){return chk.w("<b>Line:</b> ").f(ctx.getPath(false, ["symbol","meta","lineno"]),ctx,"h").w("&nbsp;&nbsp;");}body_38.__dustBody=!0;function body_39(chk,ctx){return chk.h("ne",ctx,{"block":body_40},{"key":ctx.getPath(false, ["symbol","hideconstructor"]),"type":"boolean","value":"true"},"h");}body_39.__dustBody=!0;function body_40(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(false, ["symbol","$constructor"]),"template":ctx.get(["template"], false)});}body_40.__dustBody=!0;function body_41(chk,ctx){return chk.s(ctx.getPath(false, ["symbol","$members"]),ctx,{"block":body_42},{});}body_41.__dustBody=!0;function body_42(chk,ctx){return chk.p("symbol",ctx,ctx,{"symbol":ctx.getPath(true, []),"template":ctx.get(["template"], false)});}body_42.__dustBody=!0;return body_0}(dust));
/*!
 * Docma (Web) Core
 * https://github.com/onury/docma
 * @license MIT
 */
var DocmaWeb = (function () {
'use strict';

var Utils={};function getStr(e){return"string"==typeof e?e.trim():""}function bracket(e){return/^[a-z$_][a-z\d$_]*$/i.test(e)?"."+e:'["'+e+'"]'}function fixBracket(r){return r.replace(/(.*?)\."([^"]+)"\]?$/,function(e,t,n){return n?t+bracket(n):r})}function cleanName(e){return fixBracket(e=getStr(e).replace(/([^>]+>)?~?(.*)/,"$2").replace(/^"[^"]+"\.?~?([^"]+)$/,"$1").replace(/^(module\.)?exports\./,"").replace(/^module:/,""))}function getMetaCodeName(e){return cleanName(Utils.notate(e,"meta.code.name")||"")}function identity(e){return e}function hasConstructorTag(e){return/\*\s+@construct(s|or)\b/.test(e.comment)}Utils.type=function(e){return Object.prototype.toString.call(e).match(/\s(\w+)/i)[1].toLowerCase()},Utils.notate=function(e,t){if("object"==typeof e){var n,r=Array.isArray(t)?t:t.split("."),i=r[0];if(i)return n=e[i],1<r.length?(r.shift(),Utils.notate(n,r)):n}},Utils.getName=function(e){if(e.alias){var t=getMetaCodeName(e);if(t)return t.replace(/.*?[#.~:](\w+)$/i,"$1")}return e.name},Utils.getLongName=function(e){var t=cleanName(e.longname),n=getMetaCodeName(e)||t,r=e.memberof||"";if(r=/^".*"$/.test(r)?"":cleanName(r),e.name===r&&Utils.isConstructor(e))return n;var i=e.alias?n:t;if(!r)return i;var l=new RegExp("^"+r+"[#.~:]"),o="instance"===e.scope?"#":".";return l.test(i)?i:r+o+i},Utils.getFullName=Utils.getLongName,Utils.getCodeName=function(e){return getMetaCodeName(e)||Utils.getLongName(e)},Utils.getSymbolByName=function(e,t){var n,r,i,l;if("object"===Utils.type(e)){var o=Object.keys(e);for(n=0;n<o.length;n++)if(i=e[o[n]].documentation,l=Utils.getSymbolByName(i,t))return l;return null}for(i=e,n=0;n<i.length;n++){if((r=i[n]).name===t||r.longname===t||Utils.getFullName(r)===t)return r;if(r.$members&&(l=Utils.getSymbolByName(r.$members,t)))return l}return null},Utils.getLevels=function(e){var t=("string"==typeof e?e:e.$longname)||"";return(t=cleanName(t))?((t||"").split(/[.#~]/)||[]).length:0},Utils.getParentName=function(e){var t;if("string"!=typeof e){if(e.memberof&&!1===/^".*"$/.test(e.memberof))return cleanName(e.memberof);t=cleanName(e.$longname)}else t=cleanName(e);return t&&/[.#~]/g.test(t)?t.replace(/[.#~][^.#~]*$/,""):""},Utils.getParent=function(e,t){var n="string"==typeof t?Utils.getSymbolByName(e,t):t;if(!n)return null;var r=Utils.getParentName(n);return r?Utils.getSymbolByName(e,r):null},Utils.isDeprecated=function(e){return e.deprecated},Utils.isGlobal=function(e){return"global"===e.scope},Utils.isNamespace=function(e){return"namespace"===e.kind},Utils.isModule=function(e){return"module"===e.kind},Utils.isMixin=function(e){return"mixin"===e.kind},Utils.isClass=function(e){return"class"===e.kind&&"MethodDefinition"!==Utils.notate(e,"meta.code.type")&&!hasConstructorTag(e)},Utils.isConstant=function(e){return"constant"===e.kind},Utils.isConstructor=function(e){return"class"===e.kind&&("MethodDefinition"===Utils.notate(e,"meta.code.type")||hasConstructorTag(e))},Utils.isStaticMember=function(e){return"static"===e.scope},Utils.isStatic=Utils.isStaticMember,Utils.isInner=function(e){return"inner"===e.scope},Utils.isInstanceMember=function(e){return"instance"===e.scope},Utils.isInterface=function(e){return"interface"===e.scope},Utils.isMethod=function(e){var t=Utils.notate(e,"meta.code.type");return"function"===e.kind||"FunctionExpression"===t||"FunctionDeclaration"===t},Utils.isFunction=Utils.isMethod,Utils.isInstanceMethod=function(e){return Utils.isInstanceMember(e)&&Utils.isMethod(e)},Utils.isStaticMethod=function(e){return Utils.isStaticMember(e)&&Utils.isMethod(e)},Utils.isProperty=function(e){return"member"===e.kind&&!Utils.isMethod(e)},Utils.isInstanceProperty=function(e){return Utils.isInstanceMember(e)&&Utils.isProperty(e)},Utils.isStaticProperty=function(e){return Utils.isStaticMember(e)&&Utils.isProperty(e)},Utils.isTypeDef=function(e){return"typedef"===e.kind},Utils.isCustomType=Utils.isTypeDef,Utils.isCallback=function(e){var t=(e.type||{}).names||[];return"typedef"===e.kind&&0<=(e.comment||"").indexOf("@callback "+e.longname)&&1===t.length&&"function"===t[0]},Utils.isEnum=function(e){return Boolean(e.isEnum)},Utils.isEvent=function(e){return"event"===e.kind},Utils.isExternal=function(e){return"external"===e.kind},Utils.isGenerator=function(e){return e.generator&&"function"===e.kind},Utils.isReadOnly=function(e){return e.readonly},Utils.isPublic=function(e){return"string"!=typeof e.access||"public"===e.access},Utils.isPrivate=function(e){return"private"===e.access},Utils.isPackagePrivate=function(e){return"package"===e.access},Utils.isProtected=function(e){return"protected"===e.access},Utils.isUndocumented=function(e){return!e.comments},Utils.hasDescription=function(e){return Boolean(getStr(e.classdesc)||getStr(e.description))},Utils.trimLeft=function(e){return e.replace(/^[\s\n\r\-—]*/,"")},Utils.trimNewLines=function(e){return e.replace(/^[\r\n]+|[\r\n]+$/,"")},Utils.parseTicks=function(e){return"string"!=typeof e?"":e.replace(/(```\s*)([\s\S]*?)(\s*```)/g,function(e,t,n){return Utils.normalizeTabs(Utils._wrapCode(n,!0,!0).replace(/`/g,"&#x60;"))}).replace(/(`)(.*?)(`)/g,function(e,t,n){return Utils._wrapCode(n,!0)})},Utils.parseNewLines=function(e,r){return r=r||{},Utils._tokenize(e,function(e,t){if(t)return e;var n=e.split(/[\r\n]{2,}/);return n.length<=1&&r.keepIfSingle?e:n.map(function(e){return"<p>"+e+"</p>"}).join("")}).join("")},Utils.parseLinks=function(e,l){if("string"!=typeof e)return"";l=l||{};var t=e.replace(/\{@link +([^}]*?)\}/g,function(e,t){var n,r,i=t.split("|");return 1===i.length?n=r=i[0].trim():(n=i[0].trim(),r=i[1].trim()),!1===/[/?&=]/.test(n)&&"#"!==n[0]&&(n="#"+n),'<a href="'+n+'"'+(l.target?' target="'+l.target+'" rel="noopener noreferrer"':"")+">"+r+"</a>"});return Utils.parseTicks(t)},Utils.parse=function(e,t){return t=t||{},e=Utils.trimLeft(e),e=Utils.parseNewLines(e,t),e=Utils.parseTicks(e),Utils.parseLinks(e,t)},Utils.normalizeTabs=function(e){if("string"!=typeof e)return"";var r,t=e.match(/^\s*/gm),n=1/0;if(t.forEach(function(e,t){e=e.replace(/\t/g,"  "),0<t&&(n=Math.min(e.length,n))}),n!==1/0){var i=new RegExp("^\\s{"+n+"}","g");e=e.replace(i,"")}return(e=e.replace(/^\s*/,"")).replace(/([\r\n]+)(\s+)/gm,function(e,t,n){return r=n.replace(/\t/g,"  "),t+(r=new Array(r.length-r.length%2+1).join(" "))})},Utils.getKeywords=function(e){if("string"==typeof e)return e.toLowerCase();var t=Utils.getFullName(e)+" "+e.longname+" "+e.name+" "+(e.alias||"")+" "+(e.memberOf||"")+" "+(e.$kind||"")+" "+(e.scope||"")+" "+(e.classdesc||"")+" "+(e.description||"")+" "+(e.filename||"")+" "+(e.readonly?"readonly":"")+(e.isEnum?"enum":"");return Utils.isConstructor(e)&&(t+=" constructor"),Utils.isMethod(e)&&(t+=" method"),Utils.isProperty(e)&&(t+=" property"),t.replace(/[><"'`\n\r]/g,"").toLowerCase()},Utils.getCodeFileInfo=function(e){return{filename:Utils.notate(e,"meta.filename"),lineno:Utils.notate(e,"meta.lineno"),path:Utils.notate(e,"meta.path")}},Utils.getSymbolLink=function(e,t){if("string"!=typeof t)return t.$docmaLink;var n=Utils.getSymbolByName(e,t);return n?n.$docmaLink:""};var reEndBrackets=/\[\]$/,reTypeParts=/^([^<]+?)(?:\.)?(?:<\(([^>)]+)\)>)?(?:<([^>]+)>)?(\[\])?$/;function _link(e,t,n){var r,i=reEndBrackets.test(t)?"[]":"",l=(t||"").replace(reEndBrackets,""),o=n||{},a="";return"internal"!==o.linkType&&(r=Utils._getTypeExternalLink(l))&&(a=' target="_blank" rel="noopener noreferrer"'),r||"external"===o.linkType||(r=Utils.getSymbolLink(e,l)),r&&(t='<a href="'+r+'"'+a+">"+(o.displayText||l)+i+"</a>"),t}function serializer(r){var i=[],l=[];return function(e,t){if(2e3<i.length)return"[Too Big Object]";if(0<i.length){var n=i.indexOf(this);~n?(i.splice(n+1),l.splice(n,1/0,e)):(i.push(this),l.push(e)),0<=i.indexOf(t)&&(t=i[0]===t?"[Circular ~]":"[Circular ~."+l.slice(0,i.indexOf(t)).join(".")+"]")}else i.push(t);return r?r.call(this,e,t):t}}function decodeHash(e){return decodeURIComponent(e).replace(/^#/,"")}Utils._parseAnchorLinks=function(t,e,n){var r=e.match(reTypeParts);if(!r||!r[1])return"";var i=r[4]||"",l=r[2]||r[3]||"";return l=(l=l&&l.split(",").map(function(e){return e.trim().split("|").map(function(e){return _link(t,e,n)}).join('<span class="code-delim">|</span>')}).join('<span class="code-delim">, </span>'))&&"&lt;"+l+"&gt;",_link(t,r[1],n)+l+i},Utils.getTypes=function(t,e,n){var r=n||{},i="class"===e.kind?["class"]:Utils.notate(e,"type.names")||[];return i=i.map(function(e){return r.links&&(e=Utils._parseAnchorLinks(t,e,{linkType:r.links})),e}).join('<span class="code-delim">|</span>'),e.isEnum?"enum&lt;"+i+"&gt;":i},Utils.getReturnTypes=function(r,e,t){var n=e.returns;if(!Array.isArray(n))return"void";var i=t||{},l=n.reduce(function(e,t){var n=Utils.notate(t,"type.names")||[];return i.links&&(n=n.map(function(e){return Utils._parseAnchorLinks(r,e,{linkType:i.links})})),e.concat(n)},[]);return 0<l.length?l.join('<span class="code-delim">|</span>'):"void"},Utils.getCodeTags=function(n,e,t){var r=t||{};return e.map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(r.demileter||",")},Utils.getFormattedTypeList=function(n,e,t){if(!Array.isArray(e)||0===e.length)return"";var r=t||{},i='<span class="code-delim">'+(r.delimeter||"|")+"</span>",l="boolean"!=typeof r.descriptions||r.descriptions,o=r.descDelimeter||"&nbsp;&nbsp;—&nbsp;&nbsp;",a="",s=e.map(function(e){return l&&(a=(a=Utils.parse(e.description||"",{keepIfSingle:!0}))&&o+a),e.type?(e.type.names||[]).map(function(e){if(r.links){var t=Utils._parseAnchorLinks(n,e,{linkType:r.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(e,!0)}).join(i)+a:a?"— "+a:""});return 1<s.length?"<ul><li>"+s.join("</li><li>")+"</li></ul>":s},Utils.getEmittedEvents=function(n,e,t){if(!e||0===e.length)return"";var r,i,l=t||{},o=l.delimeter||", ";return(e||[]).map(function(e){if(r=e.split(/\s*[\s-—]\s*/g),i=(r[0]||"").trim(),l.links){var t=Utils._parseAnchorLinks(n,i,{linkType:l.links});return Utils._wrapCode(t,!1)}return Utils._wrapCode(i,!0)}).join(o)},Utils._find=function(e,t){if(!e||!t)return null;var n,r,i=null;for(n=0;n<e.length;n++)if((r=e[n])&&"object"==typeof r){for(var l in t)if(void 0!==t[l]&&t.hasOwnProperty(l)){if(t[l]!==r[l]){i=null;break}i=r}if(i)break}return i},Utils._assign=function(e,t,n){var r;for(r in e=e||{},t)t.hasOwnProperty(r)&&(n?Object.defineProperty(e,r,{enumerable:!0,value:t[r]}):e[r]=t[r]);return e},Utils._values=function(e){if(Array.isArray(e))return e;var t,n=[];for(t in e)e.hasOwnProperty(t)&&n.push(e[t]);return n},Utils._wrapCode=function(e,t,n){return"string"!=typeof e?"":(void 0!==t&&!0!==t||(e=e.replace(/</g,"&lt;").replace(/>/g,"&gt;")),e="<code>"+e+"</code>",n?"<pre>"+e+"</pre>":e)},Utils._tokenize=function(e,t){"function"!=typeof t&&(t=identity);if(e.indexOf("```")<0)return[t(e,!1)];var n,r="```".length,i="",l="",o=[],a=!1;for(n=0;n<e.length;n++)i+=e[n],l+=e[n],i.length>r&&(i=i.slice(-r)),"```"===i&&(l=(a=!a)?(o.push(t(l.slice(0,-r),!1)),i):(o.push(t(l,!0)),""));return o},Utils._ensureSlash=function(e,t,n){return t?(e&&"/"!==t.slice(0,1)&&(t="/"+t),n&&"/"!==t.slice(-1)&&(t+="/"),t):e||n?"/":""},Utils._safeStringify=function(t,e,n){try{return JSON.stringify(t,serializer(e),n)}catch(e){return String(t)}},Utils.DOM={};var ATTR_BODY_STYLE="data-body-style";Utils.DOM.getOffset=function(e){var t="object"==typeof e?e:document.getElementById(e);if(t){var n=t.getBoundingClientRect();if(n.width||n.height||t.getClientRects().length){var r=document.documentElement;return{top:n.top+window.pageYOffset-r.clientTop,left:n.left+window.pageXOffset-r.clientLeft}}}},Utils.DOM.scrollTo=function(e){var t=document.documentElement||document.body;if(e=decodeHash(e||window.location.hash||"")){var n=document.getElementById(e);if(n){var r=Utils.DOM.getOffset(n);r&&(t.scrollTop=r.top)}}else t.scrollTop=0},Utils.DOM._createChild=function(e,t,n){n=n||{};var r=document.createElement(t||"div");return Object.keys(n).forEach(function(e){r[e]=n[e]}),e.appendChild(r),r},Utils.DOM._removePrevBodyStyles=function(){for(var e=document.getElementsByTagName("head")[0].querySelectorAll("["+ATTR_BODY_STYLE+"]");0<e.length;)e[0].parentNode.removeChild(e[0])},Utils.DOM._moveBodyStylesToHead=function(){var e,t,n=document.getElementsByTagName("head")[0],r=document.body.getElementsByTagName("style");for(e=0;e<r.length;e++)(t=r[e]).parentNode.removeChild(t),t.setAttribute(ATTR_BODY_STYLE,""),n.appendChild(t)};var _builtinURLs={globals:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/",statements:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/",operators:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/",functions:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/",web:"https://developer.mozilla.org/en-US/docs/Web/API/"},_builtins={globals:["Infinity","NaN","undefined","null","Object","Function","function","Boolean","boolean","Symbol","Error","EvalError","InternalError","RangeError","ReferenceError","SyntaxError","TypeError","URIError","Number","number","Math","Date","String","string","RegExp","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","Map","Set","WeakMap","WeakSet","ArrayBuffer","DataView","JSON","Promise","Generator","GeneratorFunction","Reflect","Proxy","TypedArray","Intl","Intl.Collator","Intl.DateTimeFormat","Intl.NumberFormat","WebAssembly","WebAssembly.Module","WebAssembly.Instance","WebAssembly.Memory","WebAssembly.Table","WebAssembly.CompileError","WebAssembly.LinkError","WebAssembly.RuntimeError"],statements:["function","function*","async function","class","debugger"],operators:["void","super","this"],functions:["arguments"],web:["AbstractWorker","AnalyserNode","AudioBuffer","AudioContext","AudioListener","AudioNode","BaseAudioContext","BeforeUnloadEvent","Blob","BlobEvent","BufferSource","ByteString","CSSMediaRule","CSSPageRule","CSSPrimitiveValue","CSSRule","CSSRuleList","CSSStyleDeclaration","CSSStyleRule","CSSStyleSheet","CSSSupportsRule","CSSValue","CSSValueList","CloseEvent","CompositionEvent","Console","Coordinates","Crypto","CryptoKey","CustomEvent","DOMException","DOMImplementation","Document","DocumentFragment","DocumentType","DoubleRange","DragEvent","Element","ErrorEvent","Event","EventListener","EventSource","EventTarget","File","FileList","FileReader","FileReaderSync","FormData","Geolocation","HTMLAnchorElement","HTMLAreaElement","HTMLAudioElement","HTMLBRElement","HTMLBaseElement","HTMLBodyElement","HTMLButtonElement","HTMLCanvasElement","HTMLCollection","HTMLDListElement","HTMLDataElement","HTMLDataListElement","HTMLDetailsElement","HTMLDivElement","HTMLDocument","HTMLElement","HTMLEmbedElement","HTMLFieldSetElement","HTMLFormControlsCollection","HTMLFormElement","HTMLHRElement","HTMLHeadElement","HTMLHeadingElement","HTMLHtmlElement","HTMLIFrameElement","HTMLImageElement","HTMLInputElement","HTMLKeygenElement","HTMLLIElement","HTMLLabelElement","HTMLLegendElement","HTMLLinkElement","HTMLMapElement","HTMLMediaElement","HTMLMetaElement","HTMLMeterElement","HTMLModElement","HTMLOListElement","HTMLObjectElement","HTMLOptGroupElement","HTMLOptionElement","HTMLOptionsCollection","HTMLOutputElement","HTMLParagraphElement","HTMLParamElement","HTMLPreElement","HTMLProgressElement","HTMLQuoteElement","HTMLScriptElement","HTMLSelectElement","HTMLSlotElement","HTMLSourceElement","HTMLSpanElement","HTMLStyleElement","HTMLTableCaptionElement","HTMLTableCellElement","HTMLTableColElement","HTMLTableDataCellElement","HTMLTableElement","HTMLTableHeaderCellElement","HTMLTableRowElement","HTMLTableSectionElement","HTMLTemplateElement","HTMLTextAreaElement","HTMLTimeElement","HTMLTitleElement","HTMLTrackElement","HTMLUListElement","HTMLUnknownElement","HTMLVideoElement","HashChangeEvent","History","ImageData","InputEvent","KeyboardEvent","LinkStyle","Location","LongRange","MediaDevices","MediaDeviceInfo","MediaError","MediaRecorder","MediaStream","MessageChannel","MessageEvent","MessagePort","MouseEvent","MutationObserver","MutationRecord","NamedNodeMap","Navigator","NavigatorGeolocation","Node","NodeIterator","NodeList","NonDocumentTypeChildNode","Notification","PageTransitionEvent","PointerEvent","PopStateEvent","Position","PositionError","PositionOptions","ProgressEvent","PromiseRejectionEvent","RTCCertificate","RTCConfiguration","RTCDTMFSender","RTCDTMFToneChangeEvent","RTCDataChannel","RTCPeerConnection","RTCPeerConnection","RTCRtpCodecParameters","RTCRtpContributingSource","RTCRtpReceiver","RTCRtpSender","RTCRtpSynchronizationSource","RTCRtpTransceiver","RTCRtpTransceiverDirection","RTCRtpTransceiverInit","RTCStatsReport","RadioNodeList","RandomSource","Range","RenderingContext","SVGAnimateElement","SVGAnimateMotionElement","SVGAnimateTransformElement","SVGAnimationElement","SVGCircleElement","SVGClipPathElement","SVGCursorElement","SVGElement","SVGEllipseElement","SVGEvent","SVGFilterElement","SVGGeometryElement","SVGGradientElement","SVGGraphicsElement","SVGImageElement","SVGLineElement","SVGLinearGradientElement","SVGMPathElement","SVGMaskElement","SVGMetadataElement","SVGPathElement","SVGPatternElement","SVGPolygonElement","SVGPolylineElement","SVGRadialGradientElement","SVGRect","SVGRectElement","SVGSVGElement","SVGScriptElement","SVGSetElement","SVGStopElement","SVGStyleElement","SVGSwitchElement","SVGSymbolElement","SVGTSpanElement","SVGTextContentElement","SVGTextElement","SVGTextPathElement","SVGTextPositioningElement","SVGTitleElement","SVGTransform","SVGTransformList","SVGTransformable","SVGUseElement","SVGViewElement","ShadowRoot","SharedWorker","Storage","StorageEvent","StyleSheet","StyleSheetList","Text","TextMetrics","TimeEvent","TimeRanges","Touch","TouchEvent","TouchList","Transferable","TreeWalker","UIEvent","URL","WebGLActiveInfo","WebGLBuffer","WebGLContextEvent","WebGLFramebuffer","WebGLProgram","WebGLRenderbuffer","WebGLRenderingContext","WebGLShader","WebGLTexture","WebGLUniformLocation","WebGLVertexArrayObject","WebSocket","WheelEvent","Window","Worker","WorkerGlobalScope","WorkerLocation","WorkerNavigator","XMLHttpRequest","XMLHttpRequestEventTarget","XMLSerializer","XPathExpression","XPathResult","XSLTProcessor"]},_cats=Object.keys(_builtins);Utils._getTypeExternalLink=function(e){var t,n;for(t=0;t<_cats.length;t++)if(n=_cats[t],0<=_builtins[n].indexOf(e))return _builtinURLs[n]+(e||"").replace(/^([^.]*\.)/,"");return""};

function DocmaWeb(t){this._=t||{},this._.initialLoad=!1,this._.appEntranceRI=null,this._.emitter=new EventEmitter,Object.defineProperty(this,"app",{configurable:!1,get:function(){return this._.app||null}}),Object.defineProperty(this,"apis",{configurable:!1,get:function(){return this._.apis||{}}}),Object.defineProperty(this,"routes",{configurable:!1,get:function(){return this._.routes||{}}}),Object.defineProperty(this,"template",{configurable:!1,get:function(){return this._.template||{}}}),Object.defineProperty(this,"location",{configurable:!1,get:function(){var t=Utils._ensureSlash(!0,window.location.pathname,!0),e=Utils._ensureSlash(!0,docma.app.base,!0),o=t;return t.slice(0,e.length)===e&&(o=t.slice(e.length-1,t.length)),{host:window.location.host,hostname:window.location.hostname,origin:window.location.origin,port:window.location.port,protocol:(window.location.protocol||"").replace(/:$/,""),entrance:Utils._ensureSlash(!0,docma.app.entrance,!1),base:e,hash:(window.location.hash||"").replace(/^#/,""),query:(window.location.search||"").replace(/^\?/,""),href:window.location.href,fullpath:t,pathname:o,path:o+(window.location.search||""),getQuery:function(t,e){"?"===(e=void 0===e?window.location.search||"":e).slice(0,1)&&(e=e.slice(1)),t=(t||"").replace(/[[\]]/g,"\\$&");var o=new RegExp("&?"+t+"(=([^&#]*)|&|#|$)").exec(e);return o&&o[2]?decodeURIComponent(o[2].replace(/\+/g," ")):""}}}}),Object.defineProperty(this,"currentRoute",{configurable:!1,get:function(){return this._.currentRoute||null}}),Object.defineProperty(this,"documentation",{configurable:!1,get:function(){return this._.documentation||[]}}),Object.defineProperty(this,"symbols",{configurable:!1,get:function(){return this._.symbols||[]}})}DocmaWeb.prototype._trigger=function(t,e){this.info("Event:",t,e?e[0]:""),this._.emitter.trigger(t,e)},DocmaWeb.Event={Ready:"ready",Render:"render",Route:"route",Navigate:"navigate"},DocmaWeb.prototype.on=function(t,e){return this._.emitter.on.apply(this._.emitter,arguments),docma},DocmaWeb.prototype.once=function(){return this._.emitter.once.apply(this._.emitter,arguments),this},DocmaWeb.prototype.off=function(){return this._.emitter.off.apply(this._.emitter,arguments),this},DocmaWeb.prototype.addListener=DocmaWeb.prototype.on,DocmaWeb.prototype.addListenerOnce=DocmaWeb.prototype.once,DocmaWeb.prototype.removeListener=DocmaWeb.prototype.off,DocmaWeb.prototype.log=function(){docma._.logsEnabled&&console.log.apply(console,arguments)},DocmaWeb.prototype.info=function(){docma._.logsEnabled&&console.info.apply(console,arguments)},DocmaWeb.prototype.warn=function(){docma._.logsEnabled&&console.warn.apply(console,arguments)},DocmaWeb.prototype.error=function(){docma._.logsEnabled&&console.error.apply(console,arguments)},DocmaWeb.prototype.getDocmaElem=function(){var t=document.getElementById(this._.elementID);return t=t||Utils.DOM.createChild(document.body,"div",{id:this._.elementID})},DocmaWeb.prototype.getContentElem=function(){var t=document.getElementById(this._.contentElementID);if(!t)throw new Error("Partial "+this._.partials.content+' should have an element with id="'+this._.contentElementID+'".');return t},DocmaWeb.prototype.loadContent=function(t){this.getContentElem().innerHTML=t,Utils.DOM._removePrevBodyStyles(),Utils.DOM._moveBodyStylesToHead(),Utils.DOM.scrollTo()},DocmaWeb.prototype._loadCompiledContent=function(t){this.getDocmaElem().innerHTML=t},DocmaWeb.prototype._fixAnchors=function(r){this.app.base&&setTimeout(function(){var t,e,o=document.querySelectorAll('a[href^="#"]');for(t=0;t<o.length;t++){var n=(e=o[t]).getAttribute("href");"#"===n.slice(0,1)&&1<n.length&&(n=window.location.pathname+(window.location.search||"")+n,e.setAttribute("href",n))}"function"==typeof r&&r()},50)},DocmaWeb.prototype.addFilter=function(t,e){if(this.filterExists(t))throw new Error('Filter "'+t+'" already exists.');return dust.filters[t]=e,this},DocmaWeb.prototype.removeFilter=function(t){return delete dust.filters[t],this},DocmaWeb.prototype.filterExists=function(t){return"function"==typeof dust.filters[t]},DocmaWeb.prototype.createRoute=function(t,e){return new DocmaWeb.Route(this,t,e)},DocmaWeb.prototype.createRouteFromID=function(t){if("string"!=typeof t)return this.warn("Route ID is not a string: "+t),new DocmaWeb.Route(this,null);var e=t.split(":");return new DocmaWeb.Route(this,e[1],e[0])},DocmaWeb.prototype.createRouteFromQuery=function(t){if(!t)return new DocmaWeb.Route(null);var e=t.split("&")[0].split("="),o=e[0].toLowerCase(),n=e[1];return new DocmaWeb.Route(this,n,o)},DocmaWeb.prototype._render=function(o,n){var r=this;dust.render(o,this,function(t,e){if(t)throw r.warn("Could not load Docma partial:",o),r.log("Compiled HTML: ",e),t;r._loadCompiledContent(e),"function"==typeof n&&n()})},DocmaWeb.prototype._triggerAfterRender=function(){this._trigger(DocmaWeb.Event.Render,[docma.currentRoute]),this._.initialLoad&&(this._trigger(DocmaWeb.Event.Ready),this._.initialLoad=!1)},DocmaWeb.prototype._render404=function(t,e){this._.currentRoute=this.createRoute(null);var o=this;this._render(this._.partials.notFound,function(){if(o._trigger(DocmaWeb.Event.Render,[null]),Utils.DOM.scrollTo(),"function"==typeof e)return e(404);throw new Error("Page or content not found for route: "+Utils._safeStringify(t))})},DocmaWeb.prototype.fetch=function(e,o){var n=new XMLHttpRequest,r=this;n.onreadystatechange=function(){if(4===n.readyState){var t=200===n.status?n.responseText:"";return r.log("XHR GET:",n.status,e),o(n.status,t)}},n.open("GET",e,!0),n.send()},DocmaWeb.prototype.render=function(o,n){if(!o||!o.exists())return this._render404(o,n);if(!o.isEqualTo(this.currentRoute)){this._.currentRoute=o;var r="function"==typeof n,i=this;o.type===DocmaWeb.Route.Type.API?this._render(this._.partials.api,function(){i._triggerAfterRender(),r&&n(200),i._fixAnchors(function(){Utils.DOM.scrollTo()})}):docma.fetch(o.contentPath,function(t,e){if(404===t)return i._render404(o,n);i._render(i._.partials.content,function(){i.loadContent(e),i._triggerAfterRender(),r&&n(t),i._fixAnchors(function(){Utils.DOM.scrollTo()})})})}},DocmaWeb.Utils=Utils;

var _arrRouteTypes;DocmaWeb.Route=function(t,e,o){if(this._docma=t,o&&!(_arrRouteTypes.indexOf(o)<0)){if(e)t.app.routing.caseSensitive||(e=e.toLowerCase());else{if(o!==DocmaWeb.Route.Type.API)return;e=t._.defaultApiName}var i=Utils._find(t.routes,{type:o,name:e});i&&Utils._assign(this,i)}},DocmaWeb.Route.Type={API:"api",CONTENT:"content"},_arrRouteTypes=Utils._values(DocmaWeb.Route.Type),DocmaWeb.Route.SourceType={JS:"js",MD:"md",HTML:"html"},DocmaWeb.Route.prototype.exists=function(){return Boolean(this.id)},DocmaWeb.Route.prototype.isEqualTo=function(t){return!!(t&&t.exists()&&this.exists())&&t.path===this.path},DocmaWeb.Route.prototype.isCurrent=function(){return this.isEqualTo(this._docma.currentRoute)},DocmaWeb.Route.prototype.apply=function(t){return this.type===DocmaWeb.Route.Type.API?(this._docma._.documentation=this._docma.apis[this.name].documentation,this._docma._.symbols=this._docma.apis[this.name].symbols):(this._docma._.documentation=null,this._docma._.symbols=null),this._docma._trigger(DocmaWeb.Event.Route,[this.exists()?this:null]),this._docma.render(this,t),this},DocmaWeb.Route.prototype.toString=function(){var e=this.toJSON();return Object.keys(e).map(function(t){return t+": "+e[t]}).join(", ")},DocmaWeb.Route.prototype.toJSON=function(){return{id:this.id,contentPath:this.contentPath,path:this.path,type:this.type,sourceType:this.sourceType,name:this.name}};

dust.filters=dust.filters||{},dust.filters.$pt=function(e){return DocmaWeb.Utils.parseTicks(e)},dust.filters.$pnl=function(e){return DocmaWeb.Utils.parseNewLines(e,{keepIfSingle:!0})},dust.filters.$pl=function(e){return DocmaWeb.Utils.parseLinks(e)},dust.filters.$tl=function(e){return DocmaWeb.Utils.trimLeft(e)},dust.filters.$tnl=function(e){return DocmaWeb.Utils.trimNewLines(e)},dust.filters.$p=function(e){return DocmaWeb.Utils.parse(e,{keepIfSingle:!0})},dust.filters.$nt=function(e){return DocmaWeb.Utils.normalizeTabs(e)},dust.filters.$desc=function(e){return DocmaWeb.Utils.parse(e.classdesc||e.description||"")};var reJSValues=/true|false|null|undefined|Infinity|NaN|\d+|Number\.\w+|Math\.(PI|E|LN(2|10)|LOG(2|10)E|SQRT(1_)?2)|\[.*?]|\{.*?}|new [a-zA-Z]+.*|\/.+\/[gmiu]*|Date\.(now\(\)|UTC\(.*)|window|document/;function getFormatValue(e,t){if(arguments.length<2&&(t=DocmaWeb.Utils.notate(e,"meta.code.value")||e.defaultvalue),"string"!=typeof t)return String(t);var n=DocmaWeb.Utils.notate(e,"type.names")||[];return!/['"`]/.test(t.slice(0,1))&&0<=n.indexOf("String")&&(1===n.length||-1===reJSValues.indexOf(t))?'"'+t+'"':String(t)}dust.filters.$def=function(e){return e.hasOwnProperty("defaultvalue")?getFormatValue(e,e.defaultvalue):"undefined"},dust.filters.$val=function(e){return getFormatValue(e)},dust.filters.$id=function(e){var t;"string"==typeof e?t=e:t=(DocmaWeb.Utils.isConstructor(e)?"new-":"")+e.$longname;return t.replace(/ /g,"-")};

DocmaWeb.version = "3.2.2";
return DocmaWeb;
})();
var docma = Object.freeze(new DocmaWeb({"version":"3.2.2","routes":[{"id":"api:","type":"api","name":"_def_","path":"api/","contentPath":null,"sourceType":"js"},{"id":"api:Core","type":"api","name":"Core","path":"api/Core/","contentPath":null,"sourceType":"js"},{"id":"api:Functional","type":"api","name":"Functional","path":"api/Functional/","contentPath":null,"sourceType":"js"},{"id":"api:Tools","type":"api","name":"Tools","path":"api/Tools/","contentPath":null,"sourceType":"js"},{"id":"api:Utils","type":"api","name":"Utils","path":"api/Utils/","contentPath":null,"sourceType":"js"},{"id":"content:home","type":"content","name":"home","path":"home/","contentPath":"content/home.html","sourceType":"md"}],"apis":{"_def_":{"documentation":[{"comment":"/**\n * Constants\n * @namespace Constants\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Constants","kind":"namespace","name":"Constants","longname":"Constants","scope":"global","$longname":"Constants","$kind":"namespace","$docmaLink":"api/#Constants","$members":[{"comment":"/**\n * Chords\n * @namespace Chords\n * @memberof Constants\n */","meta":{"filename":"chords.js","lineno":5,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Chords","kind":"namespace","name":"Chords","memberof":"Constants","scope":"static","longname":"Constants.Chords","$longname":"Constants.Chords","$kind":"namespace","$docmaLink":"api/#Constants.Chords","$members":[{"comment":"/**\n * Augmented 5th triad\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[609,626],"filename":"chords.js","lineno":36,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010303","name":"AUG_CHORD","type":"Literal","value":"aug"}},"description":"Augmented 5th triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"aug","readonly":true,"name":"AUG_CHORD","longname":"Constants.Chords.AUG_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.AUG_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.AUG_CHORD"},{"comment":"/**\n * Diminished 5th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[740,757],"filename":"chords.js","lineno":45,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010307","name":"DIM_CHORD","type":"Literal","value":"dim"}},"description":"Diminished 5th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"dim","readonly":true,"name":"DIM_CHORD","longname":"Constants.Chords.DIM_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.DIM_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.DIM_CHORD"},{"comment":"/**\n * 11th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2893,2912],"filename":"chords.js","lineno":189,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010371","name":"ELEVEN_CHORD","type":"Literal","value":"11"}},"description":"11th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"11","readonly":true,"name":"ELEVEN_CHORD","longname":"Constants.Chords.ELEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.ELEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.ELEVEN_CHORD"},{"comment":"/**\n* Major triad\n* @type {string}\n* @memberof Constants.Chords\n* @default\n* @readonly\n*/","meta":{"range":[355,374],"filename":"chords.js","lineno":18,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010295","name":"MAJOR_CHORD","type":"Literal","value":"maj"}},"description":"Major triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"maj","readonly":true,"name":"MAJOR_CHORD","longname":"Constants.Chords.MAJOR_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_CHORD"},{"comment":"/**\n * Major 11th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[3158,3184],"filename":"chords.js","lineno":207,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010379","name":"MAJOR_ELEVEN_CHORD","type":"Literal","value":"M11"}},"description":"Major 11th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"M11","readonly":true,"name":"MAJOR_ELEVEN_CHORD","longname":"Constants.Chords.MAJOR_ELEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_ELEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_ELEVEN_CHORD"},{"comment":"/**\n * Major 9th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2766,2789],"filename":"chords.js","lineno":180,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010367","name":"MAJOR_NINE_CHORD","type":"Literal","value":"M9"}},"description":"Major 9th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"M9","readonly":true,"name":"MAJOR_NINE_CHORD","longname":"Constants.Chords.MAJOR_NINE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_NINE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_NINE_CHORD"},{"comment":"/**\n * Major 7th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1663,1687],"filename":"chords.js","lineno":108,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010335","name":"MAJOR_SEVEN_CHORD","type":"Literal","value":"M7"}},"description":"Major 7th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"M7","readonly":true,"name":"MAJOR_SEVEN_CHORD","longname":"Constants.Chords.MAJOR_SEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_SEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_SEVEN_CHORD"},{"comment":"/**\n * Major 6th added 9th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2372,2406],"filename":"chords.js","lineno":153,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010355","name":"MAJOR_SIX_ADD_NINE_CHORD","type":"Literal","value":"6add9"}},"description":"Major 6th added 9th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"6add9","readonly":true,"name":"MAJOR_SIX_ADD_NINE_CHORD","longname":"Constants.Chords.MAJOR_SIX_ADD_NINE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_SIX_ADD_NINE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_SIX_ADD_NINE_CHORD"},{"comment":"/**\n * Major 6th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1796,1817],"filename":"chords.js","lineno":117,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010339","name":"MAJOR_SIX_CHORD","type":"Literal","value":"6"}},"description":"Major 6th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"6","readonly":true,"name":"MAJOR_SIX_CHORD","longname":"Constants.Chords.MAJOR_SIX_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_SIX_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_SIX_CHORD"},{"comment":"/**\n * Major 13th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[3557,3585],"filename":"chords.js","lineno":234,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010391","name":"MAJOR_THIRTEEN_CHORD","type":"Literal","value":"M13"}},"description":"Major 13th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"M13","readonly":true,"name":"MAJOR_THIRTEEN_CHORD","longname":"Constants.Chords.MAJOR_THIRTEEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MAJOR_THIRTEEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MAJOR_THIRTEEN_CHORD"},{"comment":"/**\n * Minor triad\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[479,496],"filename":"chords.js","lineno":27,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010299","name":"MINOR_CHORD","type":"Literal","value":"m"}},"description":"Minor triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m","readonly":true,"name":"MINOR_CHORD","longname":"Constants.Chords.MINOR_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_CHORD"},{"comment":"/**\n * Minor 11th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[3022,3048],"filename":"chords.js","lineno":198,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010375","name":"MINOR_ELEVEN_CHORD","type":"Literal","value":"m11"}},"description":"Minor 11th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m11","readonly":true,"name":"MINOR_ELEVEN_CHORD","longname":"Constants.Chords.MINOR_ELEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_ELEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_ELEVEN_CHORD"},{"comment":"/**\n * Minor triad, major 6th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2071,2099],"filename":"chords.js","lineno":135,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010347","name":"MINOR_MAJOR_SIX_CHORD","type":"Literal","value":"m6"}},"description":"Minor triad, major 6th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m6","readonly":true,"name":"MINOR_MAJOR_SIX_CHORD","longname":"Constants.Chords.MINOR_MAJOR_SIX_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_MAJOR_SIX_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_MAJOR_SIX_CHORD"},{"comment":"/**\n * Minor 9th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2634,2657],"filename":"chords.js","lineno":171,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010363","name":"MINOR_NINE_CHORD","type":"Literal","value":"m9"}},"description":"Minor 9th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m9","readonly":true,"name":"MINOR_NINE_CHORD","longname":"Constants.Chords.MINOR_NINE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_NINE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_NINE_CHORD"},{"comment":"/**\n * Minor 7th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1378,1402],"filename":"chords.js","lineno":90,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010327","name":"MINOR_SEVEN_CHORD","type":"Literal","value":"m7"}},"description":"Minor 7th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m7","readonly":true,"name":"MINOR_SEVEN_CHORD","longname":"Constants.Chords.MINOR_SEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_SEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_SEVEN_CHORD"},{"comment":"/**\n * Minor 7th flat 5 chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1518,1554],"filename":"chords.js","lineno":99,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010331","name":"MINOR_SEVEN_FLAT_FIVE_CHORD","type":"Literal","value":"m7b5"}},"description":"Minor 7th flat 5 chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m7b5","readonly":true,"name":"MINOR_SEVEN_FLAT_FIVE_CHORD","longname":"Constants.Chords.MINOR_SEVEN_FLAT_FIVE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_SEVEN_FLAT_FIVE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_SEVEN_FLAT_FIVE_CHORD"},{"comment":"/**\n * Minor 6th added 9th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2218,2253],"filename":"chords.js","lineno":144,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010351","name":"MINOR_SIX_ADD_NINE_CHORD","type":"Literal","value":"m6add9"}},"description":"Minor 6th added 9th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m6add9","readonly":true,"name":"MINOR_SIX_ADD_NINE_CHORD","longname":"Constants.Chords.MINOR_SIX_ADD_NINE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_SIX_ADD_NINE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_SIX_ADD_NINE_CHORD"},{"comment":"/**\n * Minor 6th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1926,1949],"filename":"chords.js","lineno":126,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010343","name":"MINOR_SIX_CHORD","type":"Literal","value":"m6m"}},"description":"Minor 6th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m6m","readonly":true,"name":"MINOR_SIX_CHORD","longname":"Constants.Chords.MINOR_SIX_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_SIX_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_SIX_CHORD"},{"comment":"/**\n * Minor 13th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[3419,3447],"filename":"chords.js","lineno":225,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010387","name":"MINOR_THIRTEEN_CHORD","type":"Literal","value":"m13"}},"description":"Minor 13th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"m13","readonly":true,"name":"MINOR_THIRTEEN_CHORD","longname":"Constants.Chords.MINOR_THIRTEEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.MINOR_THIRTEEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.MINOR_THIRTEEN_CHORD"},{"comment":"/**\n * 9th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[2509,2525],"filename":"chords.js","lineno":162,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010359","name":"NINE_CHORD","type":"Literal","value":"9"}},"description":"9th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"9","readonly":true,"name":"NINE_CHORD","longname":"Constants.Chords.NINE_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.NINE_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.NINE_CHORD"},{"comment":"/**\n * Power triad\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1126,1140],"filename":"chords.js","lineno":72,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010319","name":"P5_CHORD","type":"Literal","value":"5"}},"description":"Power triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"5","readonly":true,"name":"P5_CHORD","longname":"Constants.Chords.P5_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.P5_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.P5_CHORD"},{"comment":"/**\n * Dominant 7th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1252,1269],"filename":"chords.js","lineno":81,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010323","name":"SEVEN_CHORD","type":"Literal","value":"7"}},"description":"Dominant 7th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"7","readonly":true,"name":"SEVEN_CHORD","longname":"Constants.Chords.SEVEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.SEVEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.SEVEN_CHORD"},{"comment":"/**\n * Suspended 2nd triad\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[870,889],"filename":"chords.js","lineno":54,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010311","name":"SUS2_CHORD","type":"Literal","value":"sus2"}},"description":"Suspended 2nd triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"sus2","readonly":true,"name":"SUS2_CHORD","longname":"Constants.Chords.SUS2_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.SUS2_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.SUS2_CHORD"},{"comment":"/**\n * Suspended 4th triad\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[1002,1021],"filename":"chords.js","lineno":63,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010315","name":"SUS4_CHORD","type":"Literal","value":"sus4"}},"description":"Suspended 4th triad","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"sus4","readonly":true,"name":"SUS4_CHORD","longname":"Constants.Chords.SUS4_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.SUS4_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.SUS4_CHORD"},{"comment":"/**\n * 13th chord\n * @type {string}\n * @memberof Constants.Chords\n * @default\n * @readonly\n */","meta":{"range":[3288,3309],"filename":"chords.js","lineno":216,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010383","name":"THIRTEEN_CHORD","type":"Literal","value":"13"}},"description":"13th chord","type":{"names":["string"]},"memberof":"Constants.Chords","defaultvalue":"13","readonly":true,"name":"THIRTEEN_CHORD","longname":"Constants.Chords.THIRTEEN_CHORD","kind":"constant","scope":"static","params":[],"$longname":"Constants.Chords.THIRTEEN_CHORD","$kind":"constant","$docmaLink":"api/#Constants.Chords.THIRTEEN_CHORD"}]},{"comment":"/**\n * Chords\n * @namespace ChordStructures\n * @memberof Constants\n */","meta":{"filename":"chords.js","lineno":302,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Chords","kind":"namespace","name":"ChordStructures","memberof":"Constants","scope":"static","longname":"Constants.ChordStructures","$longname":"Constants.ChordStructures","$kind":"namespace","$docmaLink":"api/#Constants.ChordStructures","$members":[{"comment":"/**\n * Eleventh chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6869,6901],"filename":"chords.js","lineno":360,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010674","name":"ELEVENTH","type":"ArrayExpression","value":"[6,\"1 3 5 7 9 11\"]"}},"description":"Eleventh chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[6,\"1 3 5 7 9 11\"]","defaultvaluetype":"array","readonly":true,"name":"ELEVENTH","longname":"Constants.ChordStructures.ELEVENTH","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.ELEVENTH","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.ELEVENTH"},{"comment":"/**\n * Ninth chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6725,6751],"filename":"chords.js","lineno":351,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010668","name":"NINTH","type":"ArrayExpression","value":"[5,\"1 3 5 7 9\"]"}},"description":"Ninth chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[5,\"1 3 5 7 9\"]","defaultvaluetype":"array","readonly":true,"name":"NINTH","longname":"Constants.ChordStructures.NINTH","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.NINTH","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.NINTH"},{"comment":"/**\n * Seventh chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6584,6610],"filename":"chords.js","lineno":342,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010662","name":"SEVENTH","type":"ArrayExpression","value":"[4,\"1 3 5 7\"]"}},"description":"Seventh chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[4,\"1 3 5 7\"]","defaultvaluetype":"array","readonly":true,"name":"SEVENTH","longname":"Constants.ChordStructures.SEVENTH","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.SEVENTH","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.SEVENTH"},{"comment":"/**\n * Sixth chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6443,6467],"filename":"chords.js","lineno":333,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010656","name":"SIXTH","type":"ArrayExpression","value":"[4,\"1 3 5 6\"]"}},"description":"Sixth chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[4,\"1 3 5 6\"]","defaultvaluetype":"array","readonly":true,"name":"SIXTH","longname":"Constants.ChordStructures.SIXTH","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.SIXTH","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.SIXTH"},{"comment":"/**\n * Suspended chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6295,6328],"filename":"chords.js","lineno":324,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010648","name":"SUS","type":"ArrayExpression","value":"[3,\"[\\\"1 2 5\\\",\\\"1 4 5\\\"]\"]"}},"description":"Suspended chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[3,\"[\\\"1 2 5\\\",\\\"1 4 5\\\"]\"]","defaultvaluetype":"array","readonly":true,"name":"SUS","longname":"Constants.ChordStructures.SUS","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.SUS","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.SUS"},{"comment":"/**\n * Thirteenth chords\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[7021,7055],"filename":"chords.js","lineno":369,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010680","name":"THIRTEENTH","type":"ArrayExpression","value":"[6,\"1 3 5 7 9 13\"]"}},"description":"Thirteenth chords","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[6,\"1 3 5 7 9 13\"]","defaultvaluetype":"array","readonly":true,"name":"THIRTEENTH","longname":"Constants.ChordStructures.THIRTEENTH","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.THIRTEENTH","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.THIRTEENTH"},{"comment":"/**\n * Triads\n * @type {string}\n * @memberof Constants.ChordStructures\n * @default\n * @readonly\n */","meta":{"range":[6154,6176],"filename":"chords.js","lineno":315,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100010642","name":"TRIAD","type":"ArrayExpression","value":"[3,\"1 3 5\"]"}},"description":"Triads","type":{"names":["string"]},"memberof":"Constants.ChordStructures","defaultvalue":"[3,\"1 3 5\"]","defaultvaluetype":"array","readonly":true,"name":"TRIAD","longname":"Constants.ChordStructures.TRIAD","kind":"constant","scope":"static","params":[],"$longname":"Constants.ChordStructures.TRIAD","$kind":"constant","$docmaLink":"api/#Constants.ChordStructures.TRIAD"}]},{"comment":"/**\n * Notes\n * @namespace Note\n * @memberof Constants\n */","meta":{"filename":"note.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Notes","kind":"namespace","name":"Note","memberof":"Constants","scope":"static","longname":"Constants.Note","$longname":"Constants.Note","$kind":"namespace","$docmaLink":"api/#Constants.Note","$members":[{"comment":"/**\n * Diatonic notes\n * @type {Array<String>}\n * @memberof Constants.Note\n * @default\n * @readonly\n */","meta":{"range":[898,952],"filename":"note.js","lineno":44,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011043","name":"DIATONIC_NOTES","type":"ArrayExpression","value":"[\"C\",\"D\",\"E\",\"F\",\"G\",\"A\",\"B\"]"}},"description":"Diatonic notes","type":{"names":["Array.<String>"]},"memberof":"Constants.Note","defaultvalue":"[\"C\",\"D\",\"E\",\"F\",\"G\",\"A\",\"B\"]","defaultvaluetype":"array","readonly":true,"name":"DIATONIC_NOTES","longname":"Constants.Note.DIATONIC_NOTES","kind":"constant","scope":"static","params":[],"$longname":"Constants.Note.DIATONIC_NOTES","$kind":"constant","$docmaLink":"api/#Constants.Note.DIATONIC_NOTES"},{"comment":"/**\n * Enharmonic pairs\n * @type {Array<String>}\n * @memberof Constants.Note\n * @default\n * @readonly\n */","meta":{"range":[724,785],"filename":"note.js","lineno":35,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011034","name":"ENHARMONICS","type":"ArrayExpression","value":"[\"C#|Db\",\"D#|Eb\",\"F#|Gb\",\"G#|Ab\",\"A#|Bb\"]"}},"description":"Enharmonic pairs","type":{"names":["Array.<String>"]},"memberof":"Constants.Note","defaultvalue":"[\"C#|Db\",\"D#|Eb\",\"F#|Gb\",\"G#|Ab\",\"A#|Bb\"]","defaultvaluetype":"array","readonly":true,"name":"ENHARMONICS","longname":"Constants.Note.ENHARMONICS","kind":"constant","scope":"static","params":[],"$longname":"Constants.Note.ENHARMONICS","$kind":"constant","$docmaLink":"api/#Constants.Note.ENHARMONICS"},{"comment":"/**\n * Notes with flats\n * @type {Array<String>}\n * @memberof Constants.Note\n * @default\n * @readonly\n */","meta":{"range":[534,609],"filename":"note.js","lineno":26,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011018","name":"FLATS","type":"ArrayExpression","value":"[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"]"}},"description":"Notes with flats","type":{"names":["Array.<String>"]},"memberof":"Constants.Note","defaultvalue":"[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"]","defaultvaluetype":"array","readonly":true,"name":"FLATS","longname":"Constants.Note.FLATS","kind":"constant","scope":"static","params":[],"$longname":"Constants.Note.FLATS","$kind":"constant","$docmaLink":"api/#Constants.Note.FLATS"},{"comment":"/**\n * Notes with sharps\n * @type {Array<String>}\n * @memberof Constants.Note\n * @default\n * @readonly\n */","meta":{"range":[343,419],"filename":"note.js","lineno":17,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011002","name":"SHARPS","type":"ArrayExpression","value":"[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"]"}},"description":"Notes with sharps","type":{"names":["Array.<String>"]},"memberof":"Constants.Note","defaultvalue":"[\"C\",\"C#\",\"D\",\"D#\",\"E\",\"F\",\"F#\",\"G\",\"G#\",\"A\",\"A#\",\"B\"]","defaultvaluetype":"array","readonly":true,"name":"SHARPS","longname":"Constants.Note.SHARPS","kind":"constant","scope":"static","params":[],"$longname":"Constants.Note.SHARPS","$kind":"constant","$docmaLink":"api/#Constants.Note.SHARPS"}]},{"comment":"/**\n * Scales\n * @memberof Constants\n * @namespace Constants.Scales\n */","meta":{"filename":"scales.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Scales","memberof":"Constants","kind":"namespace","name":"Scales","longname":"Constants.Scales","scope":"static","$longname":"Constants.Scales","$kind":"namespace","$docmaLink":"api/#Constants.Scales","$members":[{"comment":"/**\n* Aeolian Mode - VI\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1173,1205],"filename":"scales.js","lineno":71,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011093","name":"AEOLIAN","type":"Literal","value":"1P 2M 3m 4P 5P 6m 7m"}},"description":"Aeolian Mode - VI","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3m 4P 5P 6m 7m","readonly":true,"name":"AEOLIAN","longname":"Constants.Scales.AEOLIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.AEOLIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.AEOLIAN"},{"comment":"/**\n* Altered - Diminished 5th and minor 6\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[2283,2315],"filename":"scales.js","lineno":143,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011125","name":"ALTERED","type":"Literal","value":"1P 2m 3m 3M 5d 6m 7m"}},"description":"Altered - Diminished 5th and minor 6","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2m 3m 3M 5d 6m 7m","readonly":true,"name":"ALTERED","longname":"Constants.Scales.ALTERED","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.ALTERED","$kind":"constant","$docmaLink":"api/#Constants.Scales.ALTERED"},{"comment":"/**\n * Chromatic scale\n * @type {string}\n * @memberof Constants.Scales\n * @default\n * @readonly\n */","meta":{"range":[351,406],"filename":"scales.js","lineno":17,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011069","name":"CHROMATIC_SCALE","type":"Literal","value":"1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M"}},"description":"Chromatic scale","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2m 2M 3m 3M 4P 4A 5P 6m 6M 7m 7M","readonly":true,"name":"CHROMATIC_SCALE","longname":"Constants.Scales.CHROMATIC_SCALE","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.CHROMATIC_SCALE","$kind":"constant","$docmaLink":"api/#Constants.Scales.CHROMATIC_SCALE"},{"comment":"/**\n* Dorian Mode - II\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1309,1340],"filename":"scales.js","lineno":80,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011097","name":"DORIAN","type":"Literal","value":"1P 2M 3m 4P 5P 6M 7m"}},"description":"Dorian Mode - II","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3m 4P 5P 6M 7m","readonly":true,"name":"DORIAN","longname":"Constants.Scales.DORIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.DORIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.DORIAN"},{"comment":"/**\n* Egyptian\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1993,2020],"filename":"scales.js","lineno":125,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011117","name":"EGYPTIAN","type":"Literal","value":"1P 2M 4P 5P 7m"}},"description":"Egyptian","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 4P 5P 7m","readonly":true,"name":"EGYPTIAN","longname":"Constants.Scales.EGYPTIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.EGYPTIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.EGYPTIAN"},{"comment":"/**\n* Harmonic Minor\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[2417,2456],"filename":"scales.js","lineno":152,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011129","name":"HARMONIC_MINOR","type":"Literal","value":"1P 2M 3m 4P 5P 6m 7M"}},"description":"Harmonic Minor","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3m 4P 5P 6m 7M","readonly":true,"name":"HARMONIC_MINOR","longname":"Constants.Scales.HARMONIC_MINOR","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.HARMONIC_MINOR","$kind":"constant","$docmaLink":"api/#Constants.Scales.HARMONIC_MINOR"},{"comment":"/**\n* Ionian Mode - I\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[772,803],"filename":"scales.js","lineno":44,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011081","name":"IONIAN","type":"Literal","value":"1P 2M 3M 4P 5P 6M 7M"}},"description":"Ionian Mode - I","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3M 4P 5P 6M 7M","readonly":true,"name":"IONIAN","longname":"Constants.Scales.IONIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.IONIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.IONIAN"},{"comment":"/**\n* Phrygian Mode - VII\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1587,1619],"filename":"scales.js","lineno":98,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011105","name":"LOCRIAN","type":"Literal","value":"1P 2m 3m 4P 5d 6m 7m"}},"description":"Phrygian Mode - VII","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2m 3m 4P 5d 6m 7m","readonly":true,"name":"LOCRIAN","longname":"Constants.Scales.LOCRIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.LOCRIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.LOCRIAN"},{"comment":"/**\n * Lydian Mode - IV\n * @type {string}\n * @memberof Constants.Scales\n * @default\n * @readonly\n*/","meta":{"range":[515,546],"filename":"scales.js","lineno":26,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011073","name":"LYDIAN","type":"Literal","value":"1P 2M 3M 4A 5P 6M 7M"}},"description":"Lydian Mode - IV","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3M 4A 5P 6M 7M","readonly":true,"name":"LYDIAN","longname":"Constants.Scales.LYDIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.LYDIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.LYDIAN"},{"comment":"/**\n* Major\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[639,669],"filename":"scales.js","lineno":35,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011077","name":"MAJOR","type":"Literal","value":"1P 2M 3M 4P 5P 6M 7M"}},"description":"Major","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3M 4P 5P 6M 7M","readonly":true,"name":"MAJOR","longname":"Constants.Scales.MAJOR","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MAJOR","$kind":"constant","$docmaLink":"api/#Constants.Scales.MAJOR"},{"comment":"/**\n* Major Pentatonic\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1723,1758],"filename":"scales.js","lineno":107,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011109","name":"MAJOR_PENTATONIC","type":"Literal","value":"1P 2M 3M 5P 6M"}},"description":"Major Pentatonic","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3M 5P 6M","readonly":true,"name":"MAJOR_PENTATONIC","longname":"Constants.Scales.MAJOR_PENTATONIC","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MAJOR_PENTATONIC","$kind":"constant","$docmaLink":"api/#Constants.Scales.MAJOR_PENTATONIC"},{"comment":"/**\n* Melodic Minor\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[2121,2159],"filename":"scales.js","lineno":134,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011121","name":"MELODIC_MINOR","type":"Literal","value":"1P 2M 3m 4P 5P 6M 7M"}},"description":"Melodic Minor","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3m 4P 5P 6M 7M","readonly":true,"name":"MELODIC_MINOR","longname":"Constants.Scales.MELODIC_MINOR","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MELODIC_MINOR","$kind":"constant","$docmaLink":"api/#Constants.Scales.MELODIC_MINOR"},{"comment":"/**\n* Minor\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1038,1068],"filename":"scales.js","lineno":62,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011089","name":"MINOR","type":"Literal","value":"1P 2M 3m 4P 5P 6m 7m"}},"description":"Minor","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3m 4P 5P 6m 7m","readonly":true,"name":"MINOR","longname":"Constants.Scales.MINOR","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MINOR","$kind":"constant","$docmaLink":"api/#Constants.Scales.MINOR"},{"comment":"/**\n* Minor Pentatonic\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1862,1897],"filename":"scales.js","lineno":116,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011113","name":"MINOR_PENTATONIC","type":"Literal","value":"1P 3m 4P 5P 7m"}},"description":"Minor Pentatonic","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 3m 4P 5P 7m","readonly":true,"name":"MINOR_PENTATONIC","longname":"Constants.Scales.MINOR_PENTATONIC","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MINOR_PENTATONIC","$kind":"constant","$docmaLink":"api/#Constants.Scales.MINOR_PENTATONIC"},{"comment":"/**\n* Mixolydian Mode - V\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[910,945],"filename":"scales.js","lineno":53,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011085","name":"MIXOLYDIAN","type":"Literal","value":"1P 2M 3M 4P 5P 6M 7m"}},"description":"Mixolydian Mode - V","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2M 3M 4P 5P 6M 7m","readonly":true,"name":"MIXOLYDIAN","longname":"Constants.Scales.MIXOLYDIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.MIXOLYDIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.MIXOLYDIAN"},{"comment":"/**\n* Phrygian Mode - III\n* @type {string}\n* @memberof Constants.Scales\n* @default\n* @readonly\n*/","meta":{"range":[1447,1480],"filename":"scales.js","lineno":89,"columnno":6,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011101","name":"PHRYGIAN","type":"Literal","value":"1P 2m 3m 4P 5P 6m 7m"}},"description":"Phrygian Mode - III","type":{"names":["string"]},"memberof":"Constants.Scales","defaultvalue":"1P 2m 3m 4P 5P 6m 7m","readonly":true,"name":"PHRYGIAN","longname":"Constants.Scales.PHRYGIAN","kind":"constant","scope":"static","params":[],"$longname":"Constants.Scales.PHRYGIAN","$kind":"constant","$docmaLink":"api/#Constants.Scales.PHRYGIAN"}]},{"comment":"/**\n * Turn\n * @memberof Constants\n * @namespace TurnMoves\n */","meta":{"filename":"turns.js","lineno":6,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{}},"description":"Turn","memberof":"Constants","kind":"namespace","name":"TurnMoves","scope":"static","longname":"Constants.TurnMoves","$longname":"Constants.TurnMoves","$kind":"namespace","$docmaLink":"api/#Constants.TurnMoves","$members":[{"comment":"/**\n\t* Modulate down in key\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n \t* @readonly\n\t*/","meta":{"range":[487,501],"filename":"turns.js","lineno":35,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011403","name":"TURN_DOWN","type":"Literal","value":"↓"}},"description":"Modulate down in key","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"↓","readonly":true,"name":"TURN_DOWN","longname":"Constants.TurnMoves.TURN_DOWN","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_DOWN","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_DOWN"},{"comment":"/**\n\t* Randomly picks any of the other turn movements\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n\t* @readonly\n\t*/","meta":{"range":[1048,1062],"filename":"turns.js","lineno":67,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011411","name":"TURN_FREE","type":"Literal","value":"⟷"}},"description":"Randomly picks any of the other turn movements","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"⟷","readonly":true,"name":"TURN_FREE","longname":"Constants.TurnMoves.TURN_FREE","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_FREE","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_FREE"},{"comment":"/**\n\t* Stay in key during this turn\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n \t* @readonly\n\t*/","meta":{"range":[622,636],"filename":"turns.js","lineno":43,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011405","name":"TURN_KEEP","type":"Literal","value":"➜"}},"description":"Stay in key during this turn","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"➜","readonly":true,"name":"TURN_KEEP","longname":"Constants.TurnMoves.TURN_KEEP","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_KEEP","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_KEEP"},{"comment":"/**\n\t* Modulate down to another key\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n \t* @readonly\n\t*/","meta":{"range":[757,775],"filename":"turns.js","lineno":51,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011407","name":"TURN_MOD_DOWN","type":"Literal","value":"⤥"}},"description":"Modulate down to another key","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"⤥","readonly":true,"name":"TURN_MOD_DOWN","longname":"Constants.TurnMoves.TURN_MOD_DOWN","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_MOD_DOWN","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_MOD_DOWN"},{"comment":"/**\n\t* Modulate up to another key\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n \t* @readonly\n\t*/","meta":{"range":[894,910],"filename":"turns.js","lineno":59,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011409","name":"TURN_MOD_UP","type":"Literal","value":"⤤"}},"description":"Modulate up to another key","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"⤤","readonly":true,"name":"TURN_MOD_UP","longname":"Constants.TurnMoves.TURN_MOD_UP","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_MOD_UP","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_MOD_UP"},{"comment":"/**\n \t* The start of a turn\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n\t* @readonly\n\t*/","meta":{"range":[236,251],"filename":"turns.js","lineno":19,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011399","name":"TURN_START","type":"Literal","value":"▼"}},"description":"The start of a turn","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"▼","readonly":true,"name":"TURN_START","longname":"Constants.TurnMoves.TURN_START","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_START","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_START"},{"comment":"/**\n\t* Modulate up in key\n\t* @type {String}\n\t* @memberof Constants.TurnMoves\n\t* @default\n \t* @readonly\n\t*/","meta":{"range":[362,374],"filename":"turns.js","lineno":27,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/constants","code":{"id":"astnode100011401","name":"TURN_UP","type":"Literal","value":"↑"}},"description":"Modulate up in key","type":{"names":["String"]},"memberof":"Constants.TurnMoves","defaultvalue":"↑","readonly":true,"name":"TURN_UP","longname":"Constants.TurnMoves.TURN_UP","kind":"member","scope":"static","$longname":"Constants.TurnMoves.TURN_UP","$kind":"property","$docmaLink":"api/#Constants.TurnMoves.TURN_UP"}]}]},{"comment":"/** Core\n* @namespace Core\n*/","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Core","kind":"namespace","name":"Core","longname":"Core","scope":"global","$longname":"Core","$kind":"namespace","$docmaLink":"api/#Core","$members":[{"comment":"/**\n * Chord\n * @class\n * @memberof Core\n *\n * @name Chord\n * @extends HarmonyBase\n */","meta":{"filename":"Chord.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Chord","kind":"class","memberof":"Core","name":"Chord","augments":["HarmonyBase"],"scope":"static","longname":"Core.Chord","$longname":"Core.Chord","$kind":"class","$docmaLink":"api/#Core.Chord","$members":[{"comment":"/**\n\t * Finds the most suitable chord name for this chord\n\t * @function findChordName\n\t * @memberof Core.Chord\n\t * @static\n\t * @param {*} chord\n\t * @return {String} chord\n\t */","meta":{"filename":"Chord.js","lineno":265,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Finds the most suitable chord name for this chord","kind":"function","name":"findChordName","memberof":"Core.Chord","scope":"static","params":[{"type":{"names":["*"]},"name":"chord"}],"returns":[{"type":{"names":["String"]},"description":"chord"}],"longname":"Core.Chord.findChordName","$longname":"Core.Chord.findChordName","$kind":"method","$docmaLink":"api/#Core.Chord.findChordName"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasFlats\n\t* @memberof Core.Chord#\n\t*\n\t* @return {Boolean}\n\t*/","meta":{"filename":"Chord.js","lineno":79,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasFlats","memberof":"Core.Chord","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Chord#hasFlats","scope":"instance","$longname":"Core.Chord#hasFlats","$kind":"method","$docmaLink":"api/#Core.Chord#hasFlats"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasSharps\n\t* @memberof Core.Chord#\n\t*\n\t* @return {Boolean}\n\t*/","meta":{"filename":"Chord.js","lineno":90,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasSharps","memberof":"Core.Chord","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Chord#hasSharps","scope":"instance","$longname":"Core.Chord#hasSharps","$kind":"method","$docmaLink":"api/#Core.Chord#hasSharps"},{"comment":"/**\n\t* Returns the chord's name\n\t* @member {String} name\n\t* @memberof Core.Chord#\n\t*/","meta":{"filename":"Chord.js","lineno":70,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the chord's name","kind":"member","name":"name","type":{"names":["String"]},"memberof":"Core.Chord","longname":"Core.Chord#name","scope":"instance","$longname":"Core.Chord#name","$kind":"property","$docmaLink":"api/#Core.Chord#name"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Chord.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String | Object} chord - a chord name f.ex: 'Am7'\n\t * @param {Object} [chord.root] - f.ex: A\n\t * @param {Object} [chord.scale] - f.ex: Scale.DORIAN\n\t * @param {Object} [chord.structure] - f.ex: Chord.SIXTH\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t *\n\t * @example\n\t * new Chord('Am6');\n\t * new Chord({ root: 'A', type: Scale.DORIAN, structure: Chord.SIXTH  });\n\t */","meta":{"range":[1015,1725],"filename":"Chord.js","lineno":34,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100000054","name":"Chord","type":"MethodDefinition","paramnames":["chord","octaves"]},"vars":{"":null}},"description":"Creates an instance of Chord.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Object"]},"description":"a chord name f.ex: 'Am7'","name":"chord"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: A","name":"chord.root"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: Scale.DORIAN","name":"chord.scale"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: Chord.SIXTH","name":"chord.structure"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"}],"examples":["new Chord('Am6');\nnew Chord({ root: 'A', type: Scale.DORIAN, structure: Chord.SIXTH  });"],"name":"Chord","longname":"Core.Chord","scope":"static","$longname":"Core.Chord","$kind":"constructor","$docmaLink":"api/#Core.Chord"}},{"comment":"/**\n * The base class for harmonic structures\n * @class\n * @memberof Core\n *\n * @name HarmonyBase\n */","meta":{"filename":"HarmonyBase.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"The base class for harmonic structures","kind":"class","memberof":"Core","name":"HarmonyBase","scope":"static","longname":"Core.HarmonyBase","$longname":"Core.HarmonyBase","$kind":"class","$docmaLink":"api/#Core.HarmonyBase","$members":[{"comment":"/**\n\t * Assigns a new octave range - [ 3, 1 ]\n\t * @function assignOctaves\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @param {Array<Number>} octaves\n\t */","meta":{"filename":"HarmonyBase.js","lineno":141,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Assigns a new octave range - [ 3, 1 ]","kind":"function","name":"assignOctaves","memberof":"Core.HarmonyBase","params":[{"type":{"names":["Array.<Number>"]},"name":"octaves"}],"longname":"Core.HarmonyBase#assignOctaves","scope":"instance","$longname":"Core.HarmonyBase#assignOctaves","$kind":"method","$docmaLink":"api/#Core.HarmonyBase#assignOctaves"},{"comment":"/**\n\t * Gets the notes as frequencies\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":93,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as frequencies","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes as midi\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":78,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as midi","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes as string\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":61,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as string","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<Note>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":50,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<Note>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Sets the octaves and assigns them to the notes\n\t * @member {Array<Number>} octaves\n\t * @memberof Core.HarmonyBase#\n\t * @param {Array} octaves\n\t */","meta":{"filename":"HarmonyBase.js","lineno":129,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Sets the octaves and assigns them to the notes","kind":"member","name":"octaves","type":{"names":["Array.<Number>"]},"memberof":"Core.HarmonyBase","params":[{"type":{"names":["Array"]},"name":"octaves"}],"longname":"Core.HarmonyBase#octaves","scope":"instance","$longname":"Core.HarmonyBase#octaves","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#octaves"},{"comment":"/**\n\t * Gets the root note\n\t * @member root\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {String}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":39,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the root note","kind":"member","name":"root","memberof":"Core.HarmonyBase","type":{"names":["String"]},"longname":"Core.HarmonyBase#root","scope":"instance","$longname":"Core.HarmonyBase#root","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#root"},{"comment":"/**\n\t * Gets the type\n\t * @member type\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {String}\n   \t*/","meta":{"filename":"HarmonyBase.js","lineno":108,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the type","kind":"member","name":"type","memberof":"Core.HarmonyBase","type":{"names":["String"]},"longname":"Core.HarmonyBase#type","scope":"instance","$longname":"Core.HarmonyBase#type","$kind":"property","$docmaLink":"api/#Core.HarmonyBase#type"}],"$constructor":{"comment":"/**\n\t * Creates an instance of HarmonyBase.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {Note} root\n\t * @param {String} type\n\t * @param {Array<Number>} octaves [starting, number of octaves] range of octaves to map notes to\n\t * @param {string} instanceType 'scale' or 'chord'\n\t */","meta":{"range":[586,866],"filename":"HarmonyBase.js","lineno":25,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100001014","name":"HarmonyBase","type":"MethodDefinition","paramnames":["root","type","octaves","instanceType"]},"vars":{"":null}},"description":"Creates an instance of HarmonyBase.","kind":"class","memberof":"Core","params":[{"type":{"names":["Note"]},"name":"root"},{"type":{"names":["String"]},"name":"type"},{"type":{"names":["Array.<Number>"]},"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"},{"type":{"names":["string"]},"description":"'scale' or 'chord'","name":"instanceType"}],"name":"HarmonyBase","longname":"Core.HarmonyBase","scope":"static","$longname":"Core.HarmonyBase","$kind":"constructor","$docmaLink":"api/#Core.HarmonyBase"}},{"comment":"/**\n * Defines a key\n * @class\n * @memberof Core\n *\n * @name Key\n * @extends Scale\n */","meta":{"filename":"Key.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a key","kind":"class","memberof":"Core","name":"Key","augments":["Scale"],"scope":"static","longname":"Core.Key","$longname":"Core.Key","$kind":"class","$docmaLink":"api/#Core.Key","$members":[{"comment":"/**\n\t * Chord belonging to this mode\n\t * @member chord\n\t * @memberof Core.Key#\n\t *\n\t * @param {Chord.STRUCTURES} structure\n\t * @return {Chord}\n\t */","meta":{"filename":"Key.js","lineno":228,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Chord belonging to this mode","kind":"member","name":"chord","memberof":"Core.Key","params":[{"type":{"names":["Chord.STRUCTURES"]},"name":"structure"}],"returns":[{"type":{"names":["Chord"]}}],"longname":"Core.Key#chord","scope":"instance","$longname":"Core.Key#chord","$kind":"property","$docmaLink":"api/#Core.Key#chord"},{"comment":"/**\n\t * Checks if the key is a mode\n\t * @function isMode\n\t * @memberof Core.Key\n\t * @static\n\t * @param {String} mode\n\t * @return {Boolean}\n\t */","meta":{"filename":"Key.js","lineno":323,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Checks if the key is a mode","kind":"function","name":"isMode","memberof":"Core.Key","scope":"static","params":[{"type":{"names":["String"]},"name":"mode"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Key.isMode","$longname":"Core.Key.isMode","$kind":"method","$docmaLink":"api/#Core.Key.isMode"},{"comment":"/**\n\t * Get the mode position in Roman Numerals\n\t * @function modePosition\n\t * @memberof Core.Key#\n\t *\n\t * @param {Boolean} [inRomanNumber]\n\t * @return {Number|String}\n\t */","meta":{"filename":"Key.js","lineno":193,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Get the mode position in Roman Numerals","kind":"function","name":"modePosition","memberof":"Core.Key","params":[{"type":{"names":["Boolean"]},"optional":true,"name":"inRomanNumber"}],"returns":[{"type":{"names":["Number","String"]}}],"longname":"Core.Key#modePosition","scope":"instance","$longname":"Core.Key#modePosition","$kind":"method","$docmaLink":"api/#Core.Key#modePosition"},{"comment":"/**\n\t * Gets the modes of the current key\n\t * @method modes\n\t * @memberof Core.Key#\n\t *\n\t * @type {Array<Mode>}\n\t */","meta":{"filename":"Key.js","lineno":66,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the modes of the current key","kind":"function","name":"modes","memberof":"Core.Key","type":{"names":["Array.<Mode>"]},"returns":[{"type":{"names":["Array.<Mode>"]}}],"longname":"Core.Key#modes","scope":"instance","$longname":"Core.Key#modes","$kind":"method","$docmaLink":"api/#Core.Key#modes"},{"comment":"/**\n\t * Modulate key based on a direction & interval\n\t * @function modulate\n\t * @memberof Core.Key#\n\t *\n\t * @param {Symbol} direction\n\t * @param {String} [interval = '5P']\n\t */","meta":{"filename":"Key.js","lineno":83,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Modulate key based on a direction & interval","kind":"function","name":"modulate","memberof":"Core.Key","params":[{"type":{"names":["Symbol"]},"name":"direction"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'5P'","name":"interval"}],"longname":"Core.Key#modulate","scope":"instance","$longname":"Core.Key#modulate","$kind":"method","$docmaLink":"api/#Core.Key#modulate"},{"comment":"/**\n\t * Modulate key within it's relative modes based on a direction & interval\n\t * @function modulateMode\n\t * @memberof Core.Key#\n\t *\n\t * @param {Object} [opts = {}]\n\t * @param {Symbol} [opts.direction]\n\t * @param {Number} [opts.interval]\n\t */","meta":{"filename":"Key.js","lineno":116,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Modulate key within it's relative modes based on a direction & interval","kind":"function","name":"modulateMode","memberof":"Core.Key","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"opts"},{"type":{"names":["Symbol"]},"optional":true,"name":"opts.direction"},{"type":{"names":["Number"]},"optional":true,"name":"opts.interval"}],"longname":"Core.Key#modulateMode","scope":"instance","$longname":"Core.Key#modulateMode","$kind":"method","$docmaLink":"api/#Core.Key#modulateMode"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Key.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String|Note} root\n\t * @param {String} type the type of Scale to create\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t * @param {Object} [opts]\n\t * @param {Array<Number>} [opts.chordStructure] - f.ex: Chord.SIXTH\n\t */","meta":{"range":[958,1577],"filename":"Key.js","lineno":38,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100001339","name":"Key","type":"MethodDefinition","paramnames":["root","type","octaves",""]},"vars":{"":null}},"description":"Creates an instance of Key.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Note"]},"name":"root"},{"type":{"names":["String"]},"description":"the type of Scale to create","name":"type"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"f.ex: Chord.SIXTH","name":"opts.chordStructure"}],"name":"Key","longname":"Core.Key","scope":"static","$longname":"Core.Key","$kind":"constructor","$docmaLink":"api/#Core.Key"}},{"comment":"/**\n * Defines a note\n * @class\n * @memberof Core\n * @name Note\n */","meta":{"filename":"Note.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a note","kind":"class","memberof":"Core","name":"Note","scope":"static","longname":"Core.Note","$longname":"Core.Note","$kind":"class","$docmaLink":"api/#Core.Note","$members":[{"comment":"/**\n\t * Returns the distance to C as index\n\t * @member distC\n\t * @memberof Core.Note#\n\t * @example 440 // A3\n\t * @return {Number}\n\t */","meta":{"filename":"Note.js","lineno":209,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the distance to C as index","kind":"member","name":"distC","memberof":"Core.Note","examples":["440 // A3"],"returns":[{"type":{"names":["Number"]}}],"longname":"Core.Note#distC","scope":"instance","$longname":"Core.Note#distC","$kind":"property","$docmaLink":"api/#Core.Note#distC"},{"comment":"/**\n\t * Returns the enharmonic\n\t * @member e\n\t * @memberof Core.Note#\n\t * @example 'D#' => 'Eb'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":110,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic","kind":"member","name":"e","memberof":"Core.Note","examples":["'D#' => 'Eb'"],"type":{"names":["String"]},"longname":"Core.Note#e","scope":"instance","$longname":"Core.Note#e","$kind":"property","$docmaLink":"api/#Core.Note#e"},{"comment":"/**\n\t* Returns the enharmonic\n\t* @member enharmonic\n\t* @memberof Core.Note#\n\t* @example 'D#' => 'Eb'\n\t* @type {String}\n\t*/","meta":{"filename":"Note.js","lineno":125,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic","kind":"member","name":"enharmonic","memberof":"Core.Note","examples":["'D#' => 'Eb'"],"type":{"names":["String"]},"longname":"Core.Note#enharmonic","scope":"instance","$longname":"Core.Note#enharmonic","$kind":"property","$docmaLink":"api/#Core.Note#enharmonic"},{"comment":"/**\n\t * Returns the enharmonic with oct\n\t * @member eoct\n\t * @memberof Core.Note#\n\t * @example 'D#3' => 'Eb3'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":136,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic with oct","kind":"member","name":"eoct","memberof":"Core.Note","examples":["'D#3' => 'Eb3'"],"type":{"names":["String"]},"longname":"Core.Note#eoct","scope":"instance","$longname":"Core.Note#eoct","$kind":"property","$docmaLink":"api/#Core.Note#eoct"},{"comment":"/**\n\t * Returns the note frequency\n\t * @member f\n\t * @memberof Core.Note#\n\t * @example 440 // A3\n\t * @type {Number}\n\t */","meta":{"filename":"Note.js","lineno":175,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note frequency","kind":"member","name":"f","memberof":"Core.Note","examples":["440 // A3"],"type":{"names":["Number"]},"longname":"Core.Note#f","scope":"instance","$longname":"Core.Note#f","$kind":"property","$docmaLink":"api/#Core.Note#f"},{"comment":"/**\n\t* Returns the note frequency\n\t* @member freq\n\t* @memberof Core.Note#\n\t* @example 440 // A3\n\t* @type {Number}\n\t*/","meta":{"filename":"Note.js","lineno":198,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note frequency","kind":"member","name":"freq","memberof":"Core.Note","examples":["440 // A3"],"type":{"names":["Number"]},"longname":"Core.Note#freq","scope":"instance","$longname":"Core.Note#freq","$kind":"property","$docmaLink":"api/#Core.Note#freq"},{"comment":"/**\n\t * Is the note a flat\n\t * @member isFlat\n\t * @memberof Core.Note#\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":250,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"member","name":"isFlat","memberof":"Core.Note","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isFlat","scope":"instance","$longname":"Core.Note#isFlat","$kind":"property","$docmaLink":"api/#Core.Note#isFlat"},{"comment":"/**\n\t * Is it a natural note\n\t * @member isNatural\n\t * @memberof Core.Note#\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":260,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is it a natural note","kind":"member","name":"isNatural","memberof":"Core.Note","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isNatural","scope":"instance","$longname":"Core.Note#isNatural","$kind":"property","$docmaLink":"api/#Core.Note#isNatural"},{"comment":"/**\n\t * Is the note a sharp\n\t * @member isSharp\n\t * @memberof Core.Note#\n\t * @example 'Eb' => 'D'\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":270,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a sharp","kind":"member","name":"isSharp","memberof":"Core.Note","examples":["'Eb' => 'D'"],"returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isSharp","scope":"instance","$longname":"Core.Note#isSharp","$kind":"property","$docmaLink":"api/#Core.Note#isSharp"},{"comment":"/**\n\t* Returns the midi number\n\t* @member m\n\t* @memberof Core.Note#\n\t* @example 60 // C3\n\t* @type {Number}\n\t*/","meta":{"filename":"Note.js","lineno":164,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the midi number","kind":"member","name":"m","memberof":"Core.Note","examples":["60 // C3"],"type":{"names":["Number"]},"longname":"Core.Note#m","scope":"instance","$longname":"Core.Note#m","$kind":"property","$docmaLink":"api/#Core.Note#m"},{"comment":"/**\n\t * Returns the midi number\n\t * @member m\n\t * @memberof Core.Note#\n\t * @example 60 // C3\n\t * @type {Number}\n\t */","meta":{"filename":"Note.js","lineno":153,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the midi number","kind":"member","name":"m","memberof":"Core.Note","examples":["60 // C3"],"type":{"names":["Number"]},"longname":"Core.Note#m","scope":"instance","$longname":"Core.Note#m","$kind":"property","$docmaLink":"api/#Core.Note#m"},{"comment":"/**\n\t * Returns the note with octave\n\t * @member n\n\t * @memberof Core.Note#\n\t * @example 'C4'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":71,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note with octave","kind":"member","name":"n","memberof":"Core.Note","examples":["'C4'"],"type":{"names":["String"]},"longname":"Core.Note#n","scope":"instance","$longname":"Core.Note#n","$kind":"property","$docmaLink":"api/#Core.Note#n"},{"comment":"/**\n\t * Returns the next note a semitone away\n\t * @member next\n\t * @memberof Core.Note#\n\t * @example 'C' => Note('C#')\n\t * @return {Note}\n\t */","meta":{"filename":"Note.js","lineno":226,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the next note a semitone away","kind":"member","name":"next","memberof":"Core.Note","examples":["'C' => Note('C#')"],"returns":[{"type":{"names":["Note"]}}],"longname":"Core.Note#next","scope":"instance","$longname":"Core.Note#next","$kind":"property","$docmaLink":"api/#Core.Note#next"},{"comment":"/**\n\t* Returns the note without octave\n\t* @member note\n\t* @memberof Core.Note#\n\t* @example 'C'\n\t* @type {String}\n\t*/","meta":{"filename":"Note.js","lineno":95,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note without octave","kind":"member","name":"note","memberof":"Core.Note","examples":["'C'"],"type":{"names":["String"]},"longname":"Core.Note#note","scope":"instance","$longname":"Core.Note#note","$kind":"property","$docmaLink":"api/#Core.Note#note"},{"comment":"/**\n\t* Returns the previous note a semitone away\n\t* @member prev\n\t* @memberof Core.Note#\n\t* @example 'Eb' => Note('D')\n\t* @return {Note}\n\t*/","meta":{"filename":"Note.js","lineno":238,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the previous note a semitone away","kind":"member","name":"prev","memberof":"Core.Note","examples":["'Eb' => Note('D')"],"returns":[{"type":{"names":["Note"]}}],"longname":"Core.Note#prev","scope":"instance","$longname":"Core.Note#prev","$kind":"property","$docmaLink":"api/#Core.Note#prev"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Note.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String|Number} note - a note\n\t * @param {Number} midi - a midi value\n\t */","meta":{"range":[532,1471],"filename":"Note.js","lineno":25,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100002499","name":"Note","type":"MethodDefinition","paramnames":["note","midi"]},"vars":{"":null}},"description":"Creates an instance of Note.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Number"]},"description":"a note","name":"note"},{"type":{"names":["Number"]},"description":"a midi value","name":"midi"}],"name":"Note","longname":"Core.Note","scope":"static","$longname":"Core.Note","$kind":"constructor","$docmaLink":"api/#Core.Note"}},{"comment":"/**\n * Defines a Scale\n * @class\n * @memberof Core\n *\n * @name Scale\n * @extends HarmonyBase\n */","meta":{"filename":"Scale.js","lineno":8,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a Scale","kind":"class","memberof":"Core","name":"Scale","augments":["HarmonyBase"],"scope":"static","longname":"Core.Scale","$longname":"Core.Scale","$kind":"class","$docmaLink":"api/#Core.Scale","$members":[{"comment":"/**\n\t* Is the note a flat\n\t* @function hasFlats\n\t* @memberof Core.Scale#\n\t*\n\t* @return {Boolean} Returns if it's a flat\n\t*/","meta":{"filename":"Scale.js","lineno":41,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasFlats","memberof":"Core.Scale","returns":[{"type":{"names":["Boolean"]},"description":"Returns if it's a flat"}],"longname":"Core.Scale#hasFlats","scope":"instance","$longname":"Core.Scale#hasFlats","$kind":"method","$docmaLink":"api/#Core.Scale#hasFlats"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasSharps\n\t* @memberof Core.Scale#\n\t*\n\t* @return {Boolean} Returns if it's a flat\n\t*/","meta":{"filename":"Scale.js","lineno":52,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasSharps","memberof":"Core.Scale","returns":[{"type":{"names":["Boolean"]},"description":"Returns if it's a flat"}],"longname":"Core.Scale#hasSharps","scope":"instance","$longname":"Core.Scale#hasSharps","$kind":"method","$docmaLink":"api/#Core.Scale#hasSharps"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Scale.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {Note|String} note A note\n\t * @param {String} type the type of scale to create\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t */","meta":{"range":[646,943],"filename":"Scale.js","lineno":26,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100003237","name":"Scale","type":"MethodDefinition","paramnames":["note","type","octaves"]},"vars":{"":null}},"description":"Creates an instance of Scale.","kind":"class","memberof":"Core","params":[{"type":{"names":["Note","String"]},"description":"A note","name":"note"},{"type":{"names":["String"]},"description":"the type of scale to create","name":"type"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"}],"name":"Scale","longname":"Core.Scale","scope":"static","$longname":"Core.Scale","$kind":"constructor","$docmaLink":"api/#Core.Scale"}}]},{"comment":"/**\n * Functional\n * @namespace Functional\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Functional","kind":"namespace","name":"Functional","longname":"Functional","scope":"global","$longname":"Functional","$kind":"namespace","$docmaLink":"api/#Functional","$members":[{"comment":"/**\n * Creates a chord progression\n *\n * @function createChordProgression\n * @memberof Functional\n * @example\n * [{\n *\t\t\"chord\": [ 71, 74, 78 ],\n * \t\t\"chordName\": \"Bm\",\n *\t\t\"dur\": 960,\n *\t\t\"time\": 0,\n *\t},\n * \t\t\"chord\": [ 71, 74, 78 ],\n *\t\t\"chordName\": \"Bm\",\n *\t\t\"dur\": 480,\n *\t\t\"time\": 960,\n *\t}]\n *\n * @param {Array<Object>} timeline a movement's timeline\n * @param {Object} [options = {}]\n * @param {Array<string>} [options.structures = Chord.STRUCTURES] chord structures for the chords\n * @param {Function} [options.distribution = distribute.decreasing] decreasing/increasing probabilities to pick the rhythms\n * @param {number} [options.restProb = 0.0] probability of being a rest note\n * @param {number} [options.inversionProb = 0.0] probability of using a chord inversion\n * @param {Array<Array<Number>>} [options.octaves = [ [ 3, 1 ] ]] [starting, number of octaves] range of octaves to map notes to\n * @param {Array<Number>} [options.startingOctave = [ 3, 1 ]] starting octave\n * @param {number} [options.minChordNotes = 3] minimum number of notes within a chord\n * @param {string} [options.rhythmType = 'free'] 'free' or 'turn' based rhythms\n *\n * @return {Array<Object>} { time, dur, chord, chordName }\n */","meta":{"filename":"chord-progression.js","lineno":27,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Creates a chord progression","kind":"function","name":"createChordProgression","memberof":"Functional","examples":["[{\n\t\t\"chord\": [ 71, 74, 78 ],\n\t\t\"chordName\": \"Bm\",\n\t\t\"dur\": 960,\n\t\t\"time\": 0,\n\t},\n\t\t\"chord\": [ 71, 74, 78 ],\n\t\t\"chordName\": \"Bm\",\n\t\t\"dur\": 480,\n\t\t\"time\": 960,\n\t}]"],"params":[{"type":{"names":["Array.<Object>"]},"description":"a movement's timeline","name":"timeline"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"Chord.STRUCTURES","description":"chord structures for the chords","name":"options.structures"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"distribute.decreasing","description":"decreasing/increasing probabilities to pick the rhythms","name":"options.distribution"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of being a rest note","name":"options.restProb"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of using a chord inversion","name":"options.inversionProb"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"defaultvalue":"[ [ 3, 1 ] ]","description":"[starting, number of octaves] range of octaves to map notes to","name":"options.octaves"},{"type":{"names":["Array.<Number>"]},"optional":true,"defaultvalue":"[ 3, 1 ]","description":"starting octave","name":"options.startingOctave"},{"type":{"names":["number"]},"optional":true,"defaultvalue":3,"description":"minimum number of notes within a chord","name":"options.minChordNotes"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'free'","description":"'free' or 'turn' based rhythms","name":"options.rhythmType"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"{ time, dur, chord, chordName }"}],"scope":"static","longname":"Functional.createChordProgression","$longname":"Functional.createChordProgression","$kind":"method","$docmaLink":"api/#Functional.createChordProgression"},{"comment":"/**\n * Create interleaved motifs\n *\n * @function createMelodies\n * @memberof Functional\n *\n * @param {Array<Object>} timeline a movement's timeline\n * @param {Object} [options = {}]\n * @param {Array<string>} [options.rhythms = presets.mixed] notevalues to create the motifs\n * @param {Function} [options.distribution = distribute.decreasing] decreasing/increasing probabilities to pick the rhythms\n * @param {number} [options.restProb = 0.0] probability of being a rest note\n * @param {number} [options.dejaVuChance = 0.5] probability of using a previous motif\n * @param {Array<Array<Number>>} [options.octaves = [ [ 4, 1 ], [ 3, 1 ] ]] [starting, number of octaves] range of octaves to map notes to\n * @param {string} [options.rhythmType = 'free'] 'free' or 'turn' based rhythms\n * @param {Array<number>} [options.minNoteValues = [4, 8]] used in a 'turn' based rhythm\n *\n * @return {Array<Melody>}\n */","meta":{"filename":"melodies.js","lineno":40,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Create interleaved motifs","kind":"function","name":"createMelodies","memberof":"Functional","params":[{"type":{"names":["Array.<Object>"]},"description":"a movement's timeline","name":"timeline"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"presets.mixed","description":"notevalues to create the motifs","name":"options.rhythms"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"distribute.decreasing","description":"decreasing/increasing probabilities to pick the rhythms","name":"options.distribution"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of being a rest note","name":"options.restProb"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.5,"description":"probability of using a previous motif","name":"options.dejaVuChance"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"defaultvalue":"[ [ 4, 1 ], [ 3, 1 ] ]","description":"[starting, number of octaves] range of octaves to map notes to","name":"options.octaves"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'free'","description":"'free' or 'turn' based rhythms","name":"options.rhythmType"},{"type":{"names":["Array.<number>"]},"optional":true,"defaultvalue":"[4, 8]","description":"used in a 'turn' based rhythm","name":"options.minNoteValues"}],"returns":[{"type":{"names":["Array.<Melody>"]}}],"scope":"static","longname":"Functional.createMelodies","$longname":"Functional.createMelodies","$kind":"method","$docmaLink":"api/#Functional.createMelodies"},{"comment":"/**\n * Generates a motif\n *\n * @function createMotif\n * @memberof Functional\n *\n * @example createMotif(new Scale('A', Scale.MAJOR)) =>\n * [ { time: 0, note: 'A4', midi: 69, dur: '8nt' },\n *  { time: '64i', note: 'C#5', midi: 73, dur: '4n.' },\n *  { time: '352i', note: 'C#5', midi: 73, dur: '4n.' },\n *  { time: '640i', note: 'B4', midi: 71, dur: '8nt' },\n *  { time: '704i', note: 'C#5', midi: 73, dur: '8nt' } ]\n *\n * @param {Array<Note>} notes\n * @param {Array<String>} rhythm decides which duration to be used based on probabilities\n * @param {Number} startTime when to start the motif\n * @param {Boolean} noDurMapping leave time per event = startTime\n * @param {Boolean} mapToTicks map duration to ticks\n *\n * @return {Array<Motif>}\n */","meta":{"filename":"motif.js","lineno":11,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Generates a motif","kind":"function","name":"createMotif","memberof":"Functional","examples":["createMotif(new Scale('A', Scale.MAJOR)) =>\n[ { time: 0, note: 'A4', midi: 69, dur: '8nt' },\n { time: '64i', note: 'C#5', midi: 73, dur: '4n.' },\n { time: '352i', note: 'C#5', midi: 73, dur: '4n.' },\n { time: '640i', note: 'B4', midi: 71, dur: '8nt' },\n { time: '704i', note: 'C#5', midi: 73, dur: '8nt' } ]"],"params":[{"type":{"names":["Array.<Note>"]},"name":"notes"},{"type":{"names":["Array.<String>"]},"description":"decides which duration to be used based on probabilities","name":"rhythm"},{"type":{"names":["Number"]},"description":"when to start the motif","name":"startTime"},{"type":{"names":["Boolean"]},"description":"leave time per event = startTime","name":"noDurMapping"},{"type":{"names":["Boolean"]},"description":"map duration to ticks","name":"mapToTicks"}],"returns":[{"type":{"names":["Array.<Motif>"]}}],"scope":"static","longname":"Functional.createMotif","$longname":"Functional.createMotif","$kind":"method","$docmaLink":"api/#Functional.createMotif"},{"comment":"/**\n * Creates a Movement\n *\n * @function createMovement\n * @memberof Functional\n *\n * @param {Key} key starting scale\n * @param {Number} length in Transport time\n * @param {Number} turns turns\n * @param {Object} [opts]\n * @param {string} [opts.rhythm] 'euclidean' or 'turn'\n * @param {number} [opts.modProb] modulation probability\n * @param {Object} [opts.repeats] repeat inner movement parts\n * @param {Array<Array<Number>>} [opts.timeSignatures] [[4, 4], [3, 4]]\n * @return {Array<Object>}\n */","meta":{"filename":"default.js","lineno":19,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional/movement","code":{}},"description":"Creates a Movement","kind":"function","name":"createMovement","memberof":"Functional","params":[{"type":{"names":["Key"]},"description":"starting scale","name":"key"},{"type":{"names":["Number"]},"description":"in Transport time","name":"length"},{"type":{"names":["Number"]},"description":"turns","name":"turns"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["string"]},"optional":true,"description":"'euclidean' or 'turn'","name":"opts.rhythm"},{"type":{"names":["number"]},"optional":true,"description":"modulation probability","name":"opts.modProb"},{"type":{"names":["Object"]},"optional":true,"description":"repeat inner movement parts","name":"opts.repeats"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"description":"[[4, 4], [3, 4]]","name":"opts.timeSignatures"}],"returns":[{"type":{"names":["Array.<Object>"]}}],"scope":"static","longname":"Functional.createMovement","$longname":"Functional.createMovement","$kind":"method","$docmaLink":"api/#Functional.createMovement"},{"comment":"/**\n * Creates a mixture of euclidean rhythm patterns\n * @function createPercussion\n * @memberof Functional\n *\n * @param {Number} steps [ 32, 16, 8, 4 ]\n * @param {Number | Array<Number>} beatsPerPart Max numbers of beats per part or beats\n *\n * @return {Percussion} [pattern, subdivision]\n */","meta":{"filename":"percussion.js","lineno":24,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Creates a mixture of euclidean rhythm patterns","kind":"function","name":"createPercussion","memberof":"Functional","params":[{"type":{"names":["Number"]},"description":"[ 32, 16, 8, 4 ]","name":"steps"},{"type":{"names":["Number","Array.<Number>"]},"description":"Max numbers of beats per part or beats","name":"beatsPerPart"}],"returns":[{"type":{"names":["Percussion"]},"description":"[pattern, subdivision]"}],"scope":"static","longname":"Functional.createPercussion","$longname":"Functional.createPercussion","$kind":"method","$docmaLink":"api/#Functional.createPercussion"},{"comment":"/**\n * Creates a Movement out of a Turn structure\n * @function createTurnMovement\n * @memberof Functional\n *\n * @param {Key} key starting scale\n * @param {Array<String>} turns in Transport time\n * @param {Number} length in Transport time\n * @param {Object} opts\n * @param {Array<Array<Number>>} [opts.timeSignatures] [[4, 4], [3, 4]]\n * @param {Number} [opts.turns] turns\n * @param {Object} [opts.repeats] repeat inner movement parts\n * @return {Array<Turn>}\n */","meta":{"filename":"simulacra.js","lineno":47,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional/movement","code":{}},"description":"Creates a Movement out of a Turn structure","kind":"function","name":"createTurnMovement","memberof":"Functional","params":[{"type":{"names":["Key"]},"description":"starting scale","name":"key"},{"type":{"names":["Array.<String>"]},"description":"in Transport time","name":"turns"},{"type":{"names":["Number"]},"description":"in Transport time","name":"length"},{"type":{"names":["Object"]},"name":"opts"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"description":"[[4, 4], [3, 4]]","name":"opts.timeSignatures"},{"type":{"names":["Number"]},"optional":true,"description":"turns","name":"opts.turns"},{"type":{"names":["Object"]},"optional":true,"description":"repeat inner movement parts","name":"opts.repeats"}],"returns":[{"type":{"names":["Array.<Turn>"]}}],"scope":"static","longname":"Functional.createTurnMovement","$longname":"Functional.createTurnMovement","$kind":"method","$docmaLink":"api/#Functional.createTurnMovement"}]},{"comment":"/**\n * The Toolshed\n * @namespace Tools\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"The Toolshed","kind":"namespace","name":"Tools","longname":"Tools","scope":"global","$longname":"Tools","$kind":"namespace","$docmaLink":"api/#Tools","$members":[{"comment":"/**\n * Choose a random element from an array\n * @function choose\n * @memberof Tools\n *\n * @param {Array} list\n * @param {Number} n\n * @param {*} compareAgainst\n * @return {*}\n */","meta":{"filename":"choose.js","lineno":11,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Choose a random element from an array","kind":"function","name":"choose","memberof":"Tools","params":[{"type":{"names":["Array"]},"name":"list"},{"type":{"names":["Number"]},"name":"n"},{"type":{"names":["*"]},"name":"compareAgainst"}],"returns":[{"type":{"names":["*"]}}],"scope":"static","longname":"Tools.choose","$longname":"Tools.choose","$kind":"method","$docmaLink":"api/#Tools.choose"},{"comment":"/**\n * Note distance functions\n * @namespace Distance\n * @memberof Tools\n */","meta":{"filename":"distance.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Note distance functions","kind":"namespace","name":"Distance","memberof":"Tools","scope":"static","longname":"Tools.Distance","$longname":"Tools.Distance","$kind":"namespace","$docmaLink":"api/#Tools.Distance","$members":[{"comment":"/**\n * Get the interval between 2 notes\n * @function interval\n * @memberof Tools.Distance\n *\n * @param {Note} a\n * @param {Note} b\n * @example interval(C, G) // => \"5P\"\n * @return {String|null} The interval between 2 notes\n */","meta":{"filename":"distance.js","lineno":48,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Get the interval between 2 notes","kind":"function","name":"interval","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"a"},{"type":{"names":["Note"]},"name":"b"}],"examples":["interval(C, G) // => \"5P\""],"returns":[{"type":{"names":["String","null"]},"description":"The interval between 2 notes"}],"scope":"static","longname":"Tools.Distance.interval","$longname":"Tools.Distance.interval","$kind":"method","$docmaLink":"api/#Tools.Distance.interval"},{"comment":"/**\n * Position in the chromatic scale from C\n * @function position\n * @memberof Tools.Distance\n *\n * @param {Note} note\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":16,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Position in the chromatic scale from C","kind":"function","name":"position","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"note"}],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.position","$longname":"Tools.Distance.position","$kind":"method","$docmaLink":"api/#Tools.Distance.position"},{"comment":"/**\n * Distance of 2 notes in semitones\n * @function semitones\n * @memberof Tools.Distance\n *\n * @param {Note} a\n * @param {Note} b\n * @example semitones(C, D) // => 2\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":28,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Distance of 2 notes in semitones","kind":"function","name":"semitones","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"a"},{"type":{"names":["Note"]},"name":"b"}],"examples":["semitones(C, D) // => 2"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.semitones","$longname":"Tools.Distance.semitones","$kind":"method","$docmaLink":"api/#Tools.Distance.semitones"},{"comment":"/**\n * Transpose a note by an interval\n * @function transposeDown\n * @memberof Tools.Distance\n *\n * @param {Note} note\n * @param {String} int interval\n * @example transposeDown(C, \"5P\") // => \"F\"\n * @return {String|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":114,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Transpose a note by an interval","kind":"function","name":"transposeDown","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"note"},{"type":{"names":["String"]},"description":"interval","name":"int"}],"examples":["transposeDown(C, \"5P\") // => \"F\""],"returns":[{"type":{"names":["String","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.transposeDown","$longname":"Tools.Distance.transposeDown","$kind":"method","$docmaLink":"api/#Tools.Distance.transposeDown"},{"comment":"/**\n * Transpose a note by an interval\n * @function transposeUp\n * @memberof Tools.Distance\n *\n * @param {Note | string} note\n * @param {String} int interval\n * @example transpose(C, \"5P\") // => \"G\"\n * @return {String|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":101,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Transpose a note by an interval","kind":"function","name":"transposeUp","memberof":"Tools.Distance","params":[{"type":{"names":["Note","string"]},"name":"note"},{"type":{"names":["String"]},"description":"interval","name":"int"}],"examples":["transpose(C, \"5P\") // => \"G\""],"returns":[{"type":{"names":["String","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.transposeUp","$longname":"Tools.Distance.transposeUp","$kind":"method","$docmaLink":"api/#Tools.Distance.transposeUp"}]},{"comment":"/**\n * Euclidean Rhythm tool\n * @namespace Euclidean\n * @memberof Tools\n */","meta":{"filename":"euclidean.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Euclidean Rhythm tool","kind":"namespace","name":"Euclidean","memberof":"Tools","scope":"static","longname":"Tools.Euclidean","$longname":"Tools.Euclidean","$kind":"namespace","$docmaLink":"api/#Tools.Euclidean","$members":[{"comment":"/**\n * Create an Euclidean rhythm based on Bresenham's line algorithm\n * @function create\n * @memberof Tools.Euclidean\n *\n * @param {Number} pulses larger number\n * @param {Number} beats smaller number\n * @return {Array}\n */","meta":{"filename":"euclidean.js","lineno":13,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Create an Euclidean rhythm based on Bresenham's line algorithm","kind":"function","name":"create","memberof":"Tools.Euclidean","params":[{"type":{"names":["Number"]},"description":"larger number","name":"pulses"},{"type":{"names":["Number"]},"description":"smaller number","name":"beats"}],"returns":[{"type":{"names":["Array"]}}],"scope":"static","longname":"Tools.Euclidean.create","$longname":"Tools.Euclidean.create","$kind":"method","$docmaLink":"api/#Tools.Euclidean.create"},{"comment":"/**\n * Rotates an euclidean pattern\n * @function rotate\n * @memberof Tools.Euclidean\n *\n * @param {Array} pattern\n * @return {Array}\n */","meta":{"filename":"euclidean.js","lineno":38,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Rotates an euclidean pattern","kind":"function","name":"rotate","memberof":"Tools.Euclidean","params":[{"type":{"names":["Array"]},"name":"pattern"}],"returns":[{"type":{"names":["Array"]}}],"scope":"static","longname":"Tools.Euclidean.rotate","$longname":"Tools.Euclidean.rotate","$kind":"method","$docmaLink":"api/#Tools.Euclidean.rotate"}]},{"comment":"/**\n * Approaches:\n * * Based on a list of notes, find possible compatible keys.\n * * The comparison is done between matching intervals. Categorized by the most notes in common to the least.\n *\n * @function friendly\n * @memberof Tools\n *\n * @param {Array<String>} notes\n * @param {Array<String>} [rankedScales]\n * @return {Array<Object>}\n */","meta":{"filename":"friendly.js","lineno":144,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Approaches:\n* Based on a list of notes, find possible compatible keys.\n* The comparison is done between matching intervals. Categorized by the most notes in common to the least.","kind":"function","name":"friendly","memberof":"Tools","params":[{"type":{"names":["Array.<String>"]},"name":"notes"},{"type":{"names":["Array.<String>"]},"optional":true,"name":"rankedScales"}],"returns":[{"type":{"names":["Array.<Object>"]}}],"scope":"static","longname":"Tools.friendly","$longname":"Tools.friendly","$kind":"method","$docmaLink":"api/#Tools.friendly"},{"comment":"/**\n * Intervals\n * @namespace Interval\n * @memberof Tools\n */","meta":{"filename":"interval.js","lineno":3,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Intervals","kind":"namespace","name":"Interval","memberof":"Tools","scope":"static","longname":"Tools.Interval","$longname":"Tools.Interval","$kind":"namespace","$docmaLink":"api/#Tools.Interval","$members":[{"comment":"/**\n * Adds two intervals together\n * @function add\n * @memberof Tools.Interval\n *\n * @param {String} a\n * @param {String} b\n *\n * @example\n * add(\"3M\", \"3M\") => 6m\n *\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"interval.js","lineno":68,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Adds two intervals together","kind":"function","name":"add","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"a"},{"type":{"names":["String"]},"name":"b"}],"examples":["add(\"3M\", \"3M\") => 6m"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Interval.add","$longname":"Tools.Interval.add","$kind":"method","$docmaLink":"api/#Tools.Interval.add"},{"comment":"/**\n * Gets one or several intervals from a number of semitones\n * @function interval\n * @memberof Tools.Interval\n *\n * @param {Number} semitones\n * @return {Array<String>|null}\n */","meta":{"filename":"interval.js","lineno":9,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Gets one or several intervals from a number of semitones","kind":"function","name":"interval","memberof":"Tools.Interval","params":[{"type":{"names":["Number"]},"name":"semitones"}],"returns":[{"type":{"names":["Array.<String>","null"]}}],"scope":"static","longname":"Tools.Interval.interval","$longname":"Tools.Interval.interval","$kind":"method","$docmaLink":"api/#Tools.Interval.interval"},{"comment":"/**\n * Inverts the given interval\n * @function invert\n * @memberof Tools.Interval\n *\n * @param {String} interv\n * @return {String|null}\n */","meta":{"filename":"interval.js","lineno":50,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Inverts the given interval","kind":"function","name":"invert","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"interv"}],"returns":[{"type":{"names":["String","null"]}}],"scope":"static","longname":"Tools.Interval.invert","$longname":"Tools.Interval.invert","$kind":"method","$docmaLink":"api/#Tools.Interval.invert"},{"comment":"/**\n * Gets the semitones of an interval\n * @function semitones\n * @memberof Tools.Interval\n *\n * @param {String} interv\n * @return {Number|null}\n */","meta":{"filename":"interval.js","lineno":34,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Gets the semitones of an interval","kind":"function","name":"semitones","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"interv"}],"returns":[{"type":{"names":["Number","null"]}}],"scope":"static","longname":"Tools.Interval.semitones","$longname":"Tools.Interval.semitones","$kind":"method","$docmaLink":"api/#Tools.Interval.semitones"},{"comment":"/**\n * Subtracts two intervals together\n * @function subtract\n * @memberof Tools.Interval\n *\n * @param {String} a\n * @param {String} b\n *\n * @example\n * subtract(\"9m\", \"3m\") => 7m\n *\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"interval.js","lineno":96,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Subtracts two intervals together","kind":"function","name":"subtract","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"a"},{"type":{"names":["String"]},"name":"b"}],"examples":["subtract(\"9m\", \"3m\") => 7m"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Interval.subtract","$longname":"Tools.Interval.subtract","$kind":"method","$docmaLink":"api/#Tools.Interval.subtract"}]},{"comment":"/**\n * MIDI tools\n * @namespace Midi\n * @memberof Tools\n */","meta":{"filename":"midi.js","lineno":6,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"MIDI tools","kind":"namespace","name":"Midi","memberof":"Tools","scope":"static","longname":"Tools.Midi","$longname":"Tools.Midi","$kind":"namespace","$docmaLink":"api/#Tools.Midi","$members":[{"comment":"/**\n * Find the nearest chord\n * @function findNearest\n * @memberof Tools.Midi\n *\n * @param {Array<Number>} baseChord\n * @param {Array<String>} chord\n * @param {Boolean} hasFlats\n *\n * @return {Array<Number>} midi note\n */","meta":{"filename":"midi.js","lineno":50,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Find the nearest chord","kind":"function","name":"findNearest","memberof":"Tools.Midi","params":[{"type":{"names":["Array.<Number>"]},"name":"baseChord"},{"type":{"names":["Array.<String>"]},"name":"chord"},{"type":{"names":["Boolean"]},"name":"hasFlats"}],"returns":[{"type":{"names":["Array.<Number>"]},"description":"midi note"}],"scope":"static","longname":"Tools.Midi.findNearest","$longname":"Tools.Midi.findNearest","$kind":"method","$docmaLink":"api/#Tools.Midi.findNearest"},{"comment":"/**\n * Find the nearest MIDI note\n *\n * @function findNearest\n * @memberof Tools.Midi\n *\n * @param {Number} base\n * @param {String} note\n *\n * @return {Number} midi note\n */","meta":{"filename":"midi.js","lineno":12,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Find the nearest MIDI note","kind":"function","name":"findNearest","memberof":"Tools.Midi","params":[{"type":{"names":["Number"]},"name":"base"},{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["Number"]},"description":"midi note"}],"scope":"static","longname":"Tools.Midi.findNearest","$longname":"Tools.Midi.findNearest","$kind":"method","$docmaLink":"api/#Tools.Midi.findNearest"}]},{"comment":"/**\n * Rotates an array N number of times\n * @function rotate\n * @memberof Tools\n *\n * @param {Array<*>} list\n * @param {number} [nrOfTimes=1]\n * @return {Array<*>}\n */","meta":{"filename":"rotate.js","lineno":3,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Rotates an array N number of times","kind":"function","name":"rotate","memberof":"Tools","params":[{"type":{"names":["Array.<*>"]},"name":"list"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"name":"nrOfTimes"}],"returns":[{"type":{"names":["Array.<*>"]}}],"scope":"static","longname":"Tools.rotate","$longname":"Tools.rotate","$kind":"method","$docmaLink":"api/#Tools.rotate"},{"comment":"/**\n * Shuffles an array N number of times\n * @function shuffle\n * @memberof Tools\n *\n * @param {Array<*>} list\n * @param {number} [nrOfTimes=3]\n * @return {Array<*>}\n */","meta":{"filename":"shuffle.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Shuffles an array N number of times","kind":"function","name":"shuffle","memberof":"Tools","params":[{"type":{"names":["Array.<*>"]},"name":"list"},{"type":{"names":["number"]},"optional":true,"defaultvalue":3,"name":"nrOfTimes"}],"returns":[{"type":{"names":["Array.<*>"]}}],"scope":"static","longname":"Tools.shuffle","$longname":"Tools.shuffle","$kind":"method","$docmaLink":"api/#Tools.shuffle"},{"comment":"/**\n * Time tools\n * @namespace Time\n * @memberof Tools\n */","meta":{"filename":"time.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Time tools","kind":"namespace","name":"Time","memberof":"Tools","scope":"static","longname":"Tools.Time","$longname":"Tools.Time","$kind":"namespace","$docmaLink":"api/#Tools.Time","$members":[{"comment":"/**\n * Creates a timeline by assigning the duration to each event's time\n * @function mapDurations\n * @memberof Tools.Time\n *\n * @example mapDurations(pattern) =>\n * [ { time: 0, dur: 8nt },\n * { time: 0, dur: 4nd },\n * { time: 0, dur: 4nd },\n * { time: 0, dur: 8nt },\n * { time: 0, dur: 8nt } ]\n *\n * @param {Array<Object>} pattern\n * @param {Boolean} mapToTicks\n * @return {Array<Object>} pattern\n */","meta":{"filename":"time.js","lineno":102,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Creates a timeline by assigning the duration to each event's time","kind":"function","name":"mapDurations","memberof":"Tools.Time","examples":["mapDurations(pattern) =>\n[ { time: 0, dur: 8nt },\n{ time: 0, dur: 4nd },\n{ time: 0, dur: 4nd },\n{ time: 0, dur: 8nt },\n{ time: 0, dur: 8nt } ]"],"params":[{"type":{"names":["Array.<Object>"]},"name":"pattern"},{"type":{"names":["Boolean"]},"name":"mapToTicks"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"pattern"}],"scope":"static","longname":"Tools.Time.mapDurations","$longname":"Tools.Time.mapDurations","$kind":"method","$docmaLink":"api/#Tools.Time.mapDurations"},{"comment":"/**\n * Converts ticks to transport notation\n *\n * @function ticksToTransport\n * @memberof Tools.Time\n *\n * @param {Number} ticks\n * @param {Object} [opts = {}]\n * @param {Array<Number>} [opts.timeSignature = [ 4, 4 ]]\n * @param {Boolean} [opts.positionMode = false]\n * @return {String}\n */","meta":{"filename":"time.js","lineno":53,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Converts ticks to transport notation","kind":"function","name":"ticksToTransport","memberof":"Tools.Time","params":[{"type":{"names":["Number"]},"name":"ticks"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"opts"},{"type":{"names":["Array.<Number>"]},"optional":true,"defaultvalue":"[ 4, 4 ]","name":"opts.timeSignature"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"name":"opts.positionMode"}],"returns":[{"type":{"names":["String"]}}],"scope":"static","longname":"Tools.Time.ticksToTransport","$longname":"Tools.Time.ticksToTransport","$kind":"method","$docmaLink":"api/#Tools.Time.ticksToTransport"},{"comment":"/**\n * BARS : QUARTERS : BEATS\n *\n * @function transportToTicks\n * @memberof Tools.Time\n *\n * @param {String} time '2.3.1'\n * @param {boolean} [positionMode=false]\n * @return {Number}\n */","meta":{"filename":"time.js","lineno":29,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"BARS : QUARTERS : BEATS","kind":"function","name":"transportToTicks","memberof":"Tools.Time","params":[{"type":{"names":["String"]},"description":"'2.3.1'","name":"time"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"positionMode"}],"returns":[{"type":{"names":["Number"]}}],"scope":"static","longname":"Tools.Time.transportToTicks","$longname":"Tools.Time.transportToTicks","$kind":"method","$docmaLink":"api/#Tools.Time.transportToTicks"}]}]},{"comment":"/**\n * Namepsace for all Types\n * @namespace Types\n */","meta":{"filename":"types.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Namepsace for all Types","kind":"namespace","name":"Types","longname":"Types","scope":"global","$longname":"Types","$kind":"namespace","$docmaLink":"api/#Types","$members":[{"comment":"/**\n * Melody Type\n * @typedef {Object} Melody\n * @memberof Types\n * @property {Number} dur duration in ticks\n * @property {Number} midi midi note\n * @property {String} note note as string\n * @property {Number} time transport time in ticks\n * @example\n * {\n *   \"dur\": 480,\n *   \"midi\": 90,\n *   \"note\": \"F#5\",\n *   \"time\": 0,\n * }\n */","meta":{"filename":"melodies.js","lineno":23,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Melody Type","kind":"typedef","name":"Melody","type":{"names":["Object"]},"memberof":"Types","properties":[{"type":{"names":["Number"]},"description":"duration in ticks","name":"dur"},{"type":{"names":["Number"]},"description":"midi note","name":"midi"},{"type":{"names":["String"]},"description":"note as string","name":"note"},{"type":{"names":["Number"]},"description":"transport time in ticks","name":"time"}],"examples":["{\n  \"dur\": 480,\n  \"midi\": 90,\n  \"note\": \"F#5\",\n  \"time\": 0,\n}"],"scope":"static","longname":"Types.Melody","$longname":"Types.Melody","$kind":"typedef","$docmaLink":"api/#Types.Melody"},{"comment":"/**\n * Percussion Type\n * @typedef {Object} Percussion\n * @memberof Types\n * @property {Array<String>} pattern combination of hits and rests\n * @property {String} subdivision in note value\n * @example\n * {\n *\tpattern: [ 'x', '-', 'x', '-' ],\n *\tsubdivision: '4n',\n * }\n */","meta":{"filename":"percussion.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Percussion Type","kind":"typedef","name":"Percussion","type":{"names":["Object"]},"memberof":"Types","properties":[{"type":{"names":["Array.<String>"]},"description":"combination of hits and rests","name":"pattern"},{"type":{"names":["String"]},"description":"in note value","name":"subdivision"}],"examples":["{\n\tpattern: [ 'x', '-', 'x', '-' ],\n\tsubdivision: '4n',\n}"],"scope":"static","longname":"Types.Percussion","$longname":"Types.Percussion","$kind":"typedef","$docmaLink":"api/#Types.Percussion"}]},{"comment":"/**\n * Generic Utilities\n * @namespace Utils\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Generic Utilities","kind":"namespace","name":"Utils","longname":"Utils","scope":"global","$longname":"Utils","$kind":"namespace","$docmaLink":"api/#Utils","$members":[{"comment":"/**\n * Assign octaves to the notes passed\n * @function assignOctaves\n * @memberof Utils\n *\n * @param {Array<Scale|Chord>} notes\n * @param {Array<Number>} octaves which octaves to map to\n * @param {Object} opts\n * @param {'scale'|'chord'} opts.type which type of the notes array is it\n * @param {boolean} opts.hasFlats if the notes should be flats or sharps\n * @example\n * \t\tassignOctaves(scale.notes, [ 3, 2 ])\n * \t\tassignOctaves(chord.notes, [ 4, 2 ], 'chord')\n *\n * @return {Array<Note>} Array of the Key notes mapped to octaves\n */","meta":{"filename":"octaves.js","lineno":21,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Assign octaves to the notes passed","kind":"function","name":"assignOctaves","memberof":"Utils","params":[{"type":{"names":["Array.<(Scale|Chord)>"]},"name":"notes"},{"type":{"names":["Array.<Number>"]},"description":"which octaves to map to","name":"octaves"},{"type":{"names":["Object"]},"name":"opts"},{"type":{"names":["'scale'","'chord'"]},"description":"which type of the notes array is it","name":"opts.type"},{"type":{"names":["boolean"]},"description":"if the notes should be flats or sharps","name":"opts.hasFlats"}],"examples":["assignOctaves(scale.notes, [ 3, 2 ])\n\t\tassignOctaves(chord.notes, [ 4, 2 ], 'chord')"],"returns":[{"type":{"names":["Array.<Note>"]},"description":"Array of the Key notes mapped to octaves"}],"scope":"static","longname":"Utils.assignOctaves","$longname":"Utils.assignOctaves","$kind":"method","$docmaLink":"api/#Utils.assignOctaves"},{"comment":"/**\n * Backtracking algorithm for finding all possible combination for a specific sum.\n * @memberof Utils\n * @function combinationSum\n *\n * @param {Number} target\n * @param {Number} maxOnes\n *\n * @return {Array<String>}\n */","meta":{"filename":"combinations.js","lineno":72,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Backtracking algorithm for finding all possible combination for a specific sum.","memberof":"Utils","kind":"function","name":"combinationSum","params":[{"type":{"names":["Number"]},"name":"target"},{"type":{"names":["Number"]},"name":"maxOnes"}],"returns":[{"type":{"names":["Array.<String>"]}}],"scope":"static","longname":"Utils.combinationSum","$longname":"Utils.combinationSum","$kind":"method","$docmaLink":"api/#Utils.combinationSum"},{"comment":"/**\n * Deconstruct Chord from a String into a Object\n *\n * @function deconstructName\n * @memberof Utils\n *\n * @param {String} chordName\n * @return {Object}\n */","meta":{"filename":"chord.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Deconstruct Chord from a String into a Object","kind":"function","name":"deconstructName","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"chordName"}],"returns":[{"type":{"names":["Object"]}}],"scope":"static","longname":"Utils.deconstructName","$longname":"Utils.deconstructName","$kind":"method","$docmaLink":"api/#Utils.deconstructName"},{"comment":"/**\n * Maps an array of notes into a specified type\n *\n *\n * @function mapNotes\n * @memberof Utils\n *\n * @param {Array<Note>} notes\n * @param {NoteType} type\n * @return {Array<NoteType>} Notes mapped to a type\n */","meta":{"filename":"map.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Maps an array of notes into a specified type","kind":"function","name":"mapNotes","memberof":"Utils","params":[{"type":{"names":["Array.<Note>"]},"name":"notes"},{"type":{"names":["NoteType"]},"name":"type"}],"returns":[{"type":{"names":["Array.<NoteType>"]},"description":"Notes mapped to a type"}],"scope":"static","longname":"Utils.mapNotes","$longname":"Utils.mapNotes","$kind":"method","$docmaLink":"api/#Utils.mapNotes"},{"comment":"/**\n * Returns a note without the accidental\n * @function natural\n * @memberof Utils\n *\n * @param {String|Note} note\n * @return {String} Natural note\n */","meta":{"filename":"note.js","lineno":19,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Returns a note without the accidental","kind":"function","name":"natural","memberof":"Utils","params":[{"type":{"names":["String","Note"]},"name":"note"}],"returns":[{"type":{"names":["String"]},"description":"Natural note"}],"scope":"static","longname":"Utils.natural","$longname":"Utils.natural","$kind":"method","$docmaLink":"api/#Utils.natural"},{"comment":"/**\n * Custom Error\n * @class\n * @memberof Utils\n *\n * @name PlayaError\n * @extends {Error}\n */","meta":{"filename":"error.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Custom Error","kind":"class","memberof":"Utils","name":"PlayaError","augments":["Error"],"scope":"static","longname":"Utils.PlayaError","$longname":"Utils.PlayaError","$kind":"class","$docmaLink":"api/#Utils.PlayaError","$constructor":{"comment":"/**\n\t * Creates an instance of PlayaError.\n\t * @constructor\n\t * @memberof Utils\n\t * @param {String} name\n\t * @param {String} [message]\n\t * @param {Object} Object { error, ...context }\n\t */","meta":{"range":[320,593],"filename":"error.js","lineno":18,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{"id":"astnode100009491","name":"PlayaError","type":"MethodDefinition","paramnames":["name","message",""]},"vars":{"":null}},"description":"Creates an instance of PlayaError.","kind":"class","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"name"},{"type":{"names":["String"]},"optional":true,"name":"message"},{"type":{"names":["Object"]},"description":"{ error, ...context }","name":"Object"}],"name":"PlayaError","longname":"Utils.PlayaError","scope":"static","$longname":"Utils.PlayaError","$kind":"constructor","$docmaLink":"api/#Utils.PlayaError"}},{"comment":"/**\n * Strips the octave from the note\n *\n * @function stripOctave\n * @memberof Utils\n *\n * @param {String} note\n * @return {String} Natural note\n */","meta":{"filename":"note.js","lineno":35,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Strips the octave from the note","kind":"function","name":"stripOctave","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["String"]},"description":"Natural note"}],"scope":"static","longname":"Utils.stripOctave","$longname":"Utils.stripOctave","$kind":"method","$docmaLink":"api/#Utils.stripOctave"},{"comment":"/**\n * Returns a note's accidental [# | b]\n *\n * @function whichAccident\n * @memberof Utils\n *\n * @param {String} note\n * @return {String}\n */","meta":{"filename":"note.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Returns a note's accidental [# | b]","kind":"function","name":"whichAccident","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["String"]}}],"scope":"static","longname":"Utils.whichAccident","$longname":"Utils.whichAccident","$kind":"method","$docmaLink":"api/#Utils.whichAccident"},{"comment":"/**\n * Loops till the condition seizes to be true\n *\n * @function whilst\n * @memberof Utils\n *\n * @param {Function} fn\n * @param {Function} condition\n * @param {Object.Number} [maxLoops = 1000]\n */","meta":{"filename":"whilst.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Loops till the condition seizes to be true","kind":"function","name":"whilst","memberof":"Utils","params":[{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["function"]},"name":"condition"},{"type":{"names":["Object.Number"]},"optional":true,"defaultvalue":1000,"name":"maxLoops"}],"scope":"static","longname":"Utils.whilst","$longname":"Utils.whilst","$kind":"method","$docmaLink":"api/#Utils.whilst"}]}],"symbols":["Constants","Constants.Chords","Constants.Chords.AUG_CHORD","Constants.Chords.DIM_CHORD","Constants.Chords.ELEVEN_CHORD","Constants.Chords.MAJOR_CHORD","Constants.Chords.MAJOR_ELEVEN_CHORD","Constants.Chords.MAJOR_NINE_CHORD","Constants.Chords.MAJOR_SEVEN_CHORD","Constants.Chords.MAJOR_SIX_ADD_NINE_CHORD","Constants.Chords.MAJOR_SIX_CHORD","Constants.Chords.MAJOR_THIRTEEN_CHORD","Constants.Chords.MINOR_CHORD","Constants.Chords.MINOR_ELEVEN_CHORD","Constants.Chords.MINOR_MAJOR_SIX_CHORD","Constants.Chords.MINOR_NINE_CHORD","Constants.Chords.MINOR_SEVEN_CHORD","Constants.Chords.MINOR_SEVEN_FLAT_FIVE_CHORD","Constants.Chords.MINOR_SIX_ADD_NINE_CHORD","Constants.Chords.MINOR_SIX_CHORD","Constants.Chords.MINOR_THIRTEEN_CHORD","Constants.Chords.NINE_CHORD","Constants.Chords.P5_CHORD","Constants.Chords.SEVEN_CHORD","Constants.Chords.SUS2_CHORD","Constants.Chords.SUS4_CHORD","Constants.Chords.THIRTEEN_CHORD","Constants.ChordStructures","Constants.ChordStructures.ELEVENTH","Constants.ChordStructures.NINTH","Constants.ChordStructures.SEVENTH","Constants.ChordStructures.SIXTH","Constants.ChordStructures.SUS","Constants.ChordStructures.THIRTEENTH","Constants.ChordStructures.TRIAD","Constants.Note","Constants.Note.DIATONIC_NOTES","Constants.Note.ENHARMONICS","Constants.Note.FLATS","Constants.Note.SHARPS","Constants.Scales","Constants.Scales.AEOLIAN","Constants.Scales.ALTERED","Constants.Scales.CHROMATIC_SCALE","Constants.Scales.DORIAN","Constants.Scales.EGYPTIAN","Constants.Scales.HARMONIC_MINOR","Constants.Scales.IONIAN","Constants.Scales.LOCRIAN","Constants.Scales.LYDIAN","Constants.Scales.MAJOR","Constants.Scales.MAJOR_PENTATONIC","Constants.Scales.MELODIC_MINOR","Constants.Scales.MINOR","Constants.Scales.MINOR_PENTATONIC","Constants.Scales.MIXOLYDIAN","Constants.Scales.PHRYGIAN","Constants.TurnMoves","Constants.TurnMoves.TURN_DOWN","Constants.TurnMoves.TURN_FREE","Constants.TurnMoves.TURN_KEEP","Constants.TurnMoves.TURN_MOD_DOWN","Constants.TurnMoves.TURN_MOD_UP","Constants.TurnMoves.TURN_START","Constants.TurnMoves.TURN_UP","Core","Core.Chord","Core.Chord.findChordName","Core.Chord#hasFlats","Core.Chord#hasSharps","Core.Chord#name","Core.HarmonyBase","Core.HarmonyBase#assignOctaves","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#octaves","Core.HarmonyBase#root","Core.HarmonyBase#type","Core.Key","Core.Key#chord","Core.Key.isMode","Core.Key#modePosition","Core.Key#modes","Core.Key#modulate","Core.Key#modulateMode","Core.Note","Core.Note#distC","Core.Note#e","Core.Note#enharmonic","Core.Note#eoct","Core.Note#f","Core.Note#freq","Core.Note#isFlat","Core.Note#isNatural","Core.Note#isSharp","Core.Note#m","Core.Note#m","Core.Note#n","Core.Note#next","Core.Note#note","Core.Note#prev","Core.Scale","Core.Scale#hasFlats","Core.Scale#hasSharps","Functional","Functional.createChordProgression","Functional.createMelodies","Functional.createMotif","Functional.createMovement","Functional.createPercussion","Functional.createTurnMovement","Tools","Tools.choose","Tools.Distance","Tools.Distance.interval","Tools.Distance.position","Tools.Distance.semitones","Tools.Distance.transposeDown","Tools.Distance.transposeUp","Tools.Euclidean","Tools.Euclidean.create","Tools.Euclidean.rotate","Tools.friendly","Tools.Interval","Tools.Interval.add","Tools.Interval.interval","Tools.Interval.invert","Tools.Interval.semitones","Tools.Interval.subtract","Tools.Midi","Tools.Midi.findNearest","Tools.Midi.findNearest","Tools.rotate","Tools.shuffle","Tools.Time","Tools.Time.mapDurations","Tools.Time.ticksToTransport","Tools.Time.transportToTicks","Types","Types.Melody","Types.Percussion","Utils","Utils.assignOctaves","Utils.combinationSum","Utils.deconstructName","Utils.mapNotes","Utils.natural","Utils.PlayaError","Utils.stripOctave","Utils.whichAccident","Utils.whilst"]},"Core":{"documentation":[{"comment":"/** Core\n* @namespace Core\n*/","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Core","kind":"namespace","name":"Core","longname":"Core","scope":"global","$longname":"Core","$kind":"namespace","$docmaLink":"api/Core/#Core","$members":[{"comment":"/**\n * Chord\n * @class\n * @memberof Core\n *\n * @name Chord\n * @extends HarmonyBase\n */","meta":{"filename":"Chord.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Chord","kind":"class","memberof":"Core","name":"Chord","augments":["HarmonyBase"],"scope":"static","longname":"Core.Chord","$longname":"Core.Chord","$kind":"class","$docmaLink":"api/Core/#Core.Chord","$members":[{"comment":"/**\n\t * Finds the most suitable chord name for this chord\n\t * @function findChordName\n\t * @memberof Core.Chord\n\t * @static\n\t * @param {*} chord\n\t * @return {String} chord\n\t */","meta":{"filename":"Chord.js","lineno":265,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Finds the most suitable chord name for this chord","kind":"function","name":"findChordName","memberof":"Core.Chord","scope":"static","params":[{"type":{"names":["*"]},"name":"chord"}],"returns":[{"type":{"names":["String"]},"description":"chord"}],"longname":"Core.Chord.findChordName","$longname":"Core.Chord.findChordName","$kind":"method","$docmaLink":"api/Core/#Core.Chord.findChordName"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasFlats\n\t* @memberof Core.Chord#\n\t*\n\t* @return {Boolean}\n\t*/","meta":{"filename":"Chord.js","lineno":79,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasFlats","memberof":"Core.Chord","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Chord#hasFlats","scope":"instance","$longname":"Core.Chord#hasFlats","$kind":"method","$docmaLink":"api/Core/#Core.Chord#hasFlats"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasSharps\n\t* @memberof Core.Chord#\n\t*\n\t* @return {Boolean}\n\t*/","meta":{"filename":"Chord.js","lineno":90,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasSharps","memberof":"Core.Chord","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Chord#hasSharps","scope":"instance","$longname":"Core.Chord#hasSharps","$kind":"method","$docmaLink":"api/Core/#Core.Chord#hasSharps"},{"comment":"/**\n\t* Returns the chord's name\n\t* @member {String} name\n\t* @memberof Core.Chord#\n\t*/","meta":{"filename":"Chord.js","lineno":70,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the chord's name","kind":"member","name":"name","type":{"names":["String"]},"memberof":"Core.Chord","longname":"Core.Chord#name","scope":"instance","$longname":"Core.Chord#name","$kind":"property","$docmaLink":"api/Core/#Core.Chord#name"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Chord.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String | Object} chord - a chord name f.ex: 'Am7'\n\t * @param {Object} [chord.root] - f.ex: A\n\t * @param {Object} [chord.scale] - f.ex: Scale.DORIAN\n\t * @param {Object} [chord.structure] - f.ex: Chord.SIXTH\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t *\n\t * @example\n\t * new Chord('Am6');\n\t * new Chord({ root: 'A', type: Scale.DORIAN, structure: Chord.SIXTH  });\n\t */","meta":{"range":[1015,1725],"filename":"Chord.js","lineno":34,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100000054","name":"Chord","type":"MethodDefinition","paramnames":["chord","octaves"]},"vars":{"":null}},"description":"Creates an instance of Chord.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Object"]},"description":"a chord name f.ex: 'Am7'","name":"chord"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: A","name":"chord.root"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: Scale.DORIAN","name":"chord.scale"},{"type":{"names":["Object"]},"optional":true,"description":"f.ex: Chord.SIXTH","name":"chord.structure"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"}],"examples":["new Chord('Am6');\nnew Chord({ root: 'A', type: Scale.DORIAN, structure: Chord.SIXTH  });"],"name":"Chord","longname":"Core.Chord","scope":"static","$longname":"Core.Chord","$kind":"constructor","$docmaLink":"api/Core/#Core.Chord"}},{"comment":"/**\n * The base class for harmonic structures\n * @class\n * @memberof Core\n *\n * @name HarmonyBase\n */","meta":{"filename":"HarmonyBase.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"The base class for harmonic structures","kind":"class","memberof":"Core","name":"HarmonyBase","scope":"static","longname":"Core.HarmonyBase","$longname":"Core.HarmonyBase","$kind":"class","$docmaLink":"api/Core/#Core.HarmonyBase","$members":[{"comment":"/**\n\t * Assigns a new octave range - [ 3, 1 ]\n\t * @function assignOctaves\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @param {Array<Number>} octaves\n\t */","meta":{"filename":"HarmonyBase.js","lineno":141,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Assigns a new octave range - [ 3, 1 ]","kind":"function","name":"assignOctaves","memberof":"Core.HarmonyBase","params":[{"type":{"names":["Array.<Number>"]},"name":"octaves"}],"longname":"Core.HarmonyBase#assignOctaves","scope":"instance","$longname":"Core.HarmonyBase#assignOctaves","$kind":"method","$docmaLink":"api/Core/#Core.HarmonyBase#assignOctaves"},{"comment":"/**\n\t * Gets the notes as frequencies\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":93,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as frequencies","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes as midi\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":78,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as midi","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes as string\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<NoteType.STR>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":61,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes as string","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<NoteType.STR>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Gets the notes\n\t * @member notes\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {Array<Note>}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":50,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the notes","kind":"member","name":"notes","memberof":"Core.HarmonyBase","type":{"names":["Array.<Note>"]},"longname":"Core.HarmonyBase#notes","scope":"instance","$longname":"Core.HarmonyBase#notes","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#notes"},{"comment":"/**\n\t * Sets the octaves and assigns them to the notes\n\t * @member {Array<Number>} octaves\n\t * @memberof Core.HarmonyBase#\n\t * @param {Array} octaves\n\t */","meta":{"filename":"HarmonyBase.js","lineno":129,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Sets the octaves and assigns them to the notes","kind":"member","name":"octaves","type":{"names":["Array.<Number>"]},"memberof":"Core.HarmonyBase","params":[{"type":{"names":["Array"]},"name":"octaves"}],"longname":"Core.HarmonyBase#octaves","scope":"instance","$longname":"Core.HarmonyBase#octaves","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#octaves"},{"comment":"/**\n\t * Gets the root note\n\t * @member root\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {String}\n\t */","meta":{"filename":"HarmonyBase.js","lineno":39,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the root note","kind":"member","name":"root","memberof":"Core.HarmonyBase","type":{"names":["String"]},"longname":"Core.HarmonyBase#root","scope":"instance","$longname":"Core.HarmonyBase#root","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#root"},{"comment":"/**\n\t * Gets the type\n\t * @member type\n\t * @memberof Core.HarmonyBase#\n\t *\n\t * @type {String}\n   \t*/","meta":{"filename":"HarmonyBase.js","lineno":108,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the type","kind":"member","name":"type","memberof":"Core.HarmonyBase","type":{"names":["String"]},"longname":"Core.HarmonyBase#type","scope":"instance","$longname":"Core.HarmonyBase#type","$kind":"property","$docmaLink":"api/Core/#Core.HarmonyBase#type"}],"$constructor":{"comment":"/**\n\t * Creates an instance of HarmonyBase.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {Note} root\n\t * @param {String} type\n\t * @param {Array<Number>} octaves [starting, number of octaves] range of octaves to map notes to\n\t * @param {string} instanceType 'scale' or 'chord'\n\t */","meta":{"range":[586,866],"filename":"HarmonyBase.js","lineno":25,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100001014","name":"HarmonyBase","type":"MethodDefinition","paramnames":["root","type","octaves","instanceType"]},"vars":{"":null}},"description":"Creates an instance of HarmonyBase.","kind":"class","memberof":"Core","params":[{"type":{"names":["Note"]},"name":"root"},{"type":{"names":["String"]},"name":"type"},{"type":{"names":["Array.<Number>"]},"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"},{"type":{"names":["string"]},"description":"'scale' or 'chord'","name":"instanceType"}],"name":"HarmonyBase","longname":"Core.HarmonyBase","scope":"static","$longname":"Core.HarmonyBase","$kind":"constructor","$docmaLink":"api/Core/#Core.HarmonyBase"}},{"comment":"/**\n * Defines a key\n * @class\n * @memberof Core\n *\n * @name Key\n * @extends Scale\n */","meta":{"filename":"Key.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a key","kind":"class","memberof":"Core","name":"Key","augments":["Scale"],"scope":"static","longname":"Core.Key","$longname":"Core.Key","$kind":"class","$docmaLink":"api/Core/#Core.Key","$members":[{"comment":"/**\n\t * Chord belonging to this mode\n\t * @member chord\n\t * @memberof Core.Key#\n\t *\n\t * @param {Chord.STRUCTURES} structure\n\t * @return {Chord}\n\t */","meta":{"filename":"Key.js","lineno":228,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Chord belonging to this mode","kind":"member","name":"chord","memberof":"Core.Key","params":[{"type":{"names":["Chord.STRUCTURES"]},"name":"structure"}],"returns":[{"type":{"names":["Chord"]}}],"longname":"Core.Key#chord","scope":"instance","$longname":"Core.Key#chord","$kind":"property","$docmaLink":"api/Core/#Core.Key#chord"},{"comment":"/**\n\t * Checks if the key is a mode\n\t * @function isMode\n\t * @memberof Core.Key\n\t * @static\n\t * @param {String} mode\n\t * @return {Boolean}\n\t */","meta":{"filename":"Key.js","lineno":323,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Checks if the key is a mode","kind":"function","name":"isMode","memberof":"Core.Key","scope":"static","params":[{"type":{"names":["String"]},"name":"mode"}],"returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Key.isMode","$longname":"Core.Key.isMode","$kind":"method","$docmaLink":"api/Core/#Core.Key.isMode"},{"comment":"/**\n\t * Get the mode position in Roman Numerals\n\t * @function modePosition\n\t * @memberof Core.Key#\n\t *\n\t * @param {Boolean} [inRomanNumber]\n\t * @return {Number|String}\n\t */","meta":{"filename":"Key.js","lineno":193,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Get the mode position in Roman Numerals","kind":"function","name":"modePosition","memberof":"Core.Key","params":[{"type":{"names":["Boolean"]},"optional":true,"name":"inRomanNumber"}],"returns":[{"type":{"names":["Number","String"]}}],"longname":"Core.Key#modePosition","scope":"instance","$longname":"Core.Key#modePosition","$kind":"method","$docmaLink":"api/Core/#Core.Key#modePosition"},{"comment":"/**\n\t * Gets the modes of the current key\n\t * @method modes\n\t * @memberof Core.Key#\n\t *\n\t * @type {Array<Mode>}\n\t */","meta":{"filename":"Key.js","lineno":66,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Gets the modes of the current key","kind":"function","name":"modes","memberof":"Core.Key","type":{"names":["Array.<Mode>"]},"returns":[{"type":{"names":["Array.<Mode>"]}}],"longname":"Core.Key#modes","scope":"instance","$longname":"Core.Key#modes","$kind":"method","$docmaLink":"api/Core/#Core.Key#modes"},{"comment":"/**\n\t * Modulate key based on a direction & interval\n\t * @function modulate\n\t * @memberof Core.Key#\n\t *\n\t * @param {Symbol} direction\n\t * @param {String} [interval = '5P']\n\t */","meta":{"filename":"Key.js","lineno":83,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Modulate key based on a direction & interval","kind":"function","name":"modulate","memberof":"Core.Key","params":[{"type":{"names":["Symbol"]},"name":"direction"},{"type":{"names":["String"]},"optional":true,"defaultvalue":"'5P'","name":"interval"}],"longname":"Core.Key#modulate","scope":"instance","$longname":"Core.Key#modulate","$kind":"method","$docmaLink":"api/Core/#Core.Key#modulate"},{"comment":"/**\n\t * Modulate key within it's relative modes based on a direction & interval\n\t * @function modulateMode\n\t * @memberof Core.Key#\n\t *\n\t * @param {Object} [opts = {}]\n\t * @param {Symbol} [opts.direction]\n\t * @param {Number} [opts.interval]\n\t */","meta":{"filename":"Key.js","lineno":116,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Modulate key within it's relative modes based on a direction & interval","kind":"function","name":"modulateMode","memberof":"Core.Key","params":[{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"opts"},{"type":{"names":["Symbol"]},"optional":true,"name":"opts.direction"},{"type":{"names":["Number"]},"optional":true,"name":"opts.interval"}],"longname":"Core.Key#modulateMode","scope":"instance","$longname":"Core.Key#modulateMode","$kind":"method","$docmaLink":"api/Core/#Core.Key#modulateMode"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Key.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String|Note} root\n\t * @param {String} type the type of Scale to create\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t * @param {Object} [opts]\n\t * @param {Array<Number>} [opts.chordStructure] - f.ex: Chord.SIXTH\n\t */","meta":{"range":[958,1577],"filename":"Key.js","lineno":38,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100001339","name":"Key","type":"MethodDefinition","paramnames":["root","type","octaves",""]},"vars":{"":null}},"description":"Creates an instance of Key.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Note"]},"name":"root"},{"type":{"names":["String"]},"description":"the type of Scale to create","name":"type"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"},{"type":{"names":["Object"]},"optional":true,"name":"opts"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"f.ex: Chord.SIXTH","name":"opts.chordStructure"}],"name":"Key","longname":"Core.Key","scope":"static","$longname":"Core.Key","$kind":"constructor","$docmaLink":"api/Core/#Core.Key"}},{"comment":"/**\n * Defines a note\n * @class\n * @memberof Core\n * @name Note\n */","meta":{"filename":"Note.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a note","kind":"class","memberof":"Core","name":"Note","scope":"static","longname":"Core.Note","$longname":"Core.Note","$kind":"class","$docmaLink":"api/Core/#Core.Note","$members":[{"comment":"/**\n\t * Returns the distance to C as index\n\t * @member distC\n\t * @memberof Core.Note#\n\t * @example 440 // A3\n\t * @return {Number}\n\t */","meta":{"filename":"Note.js","lineno":209,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the distance to C as index","kind":"member","name":"distC","memberof":"Core.Note","examples":["440 // A3"],"returns":[{"type":{"names":["Number"]}}],"longname":"Core.Note#distC","scope":"instance","$longname":"Core.Note#distC","$kind":"property","$docmaLink":"api/Core/#Core.Note#distC"},{"comment":"/**\n\t * Returns the enharmonic\n\t * @member e\n\t * @memberof Core.Note#\n\t * @example 'D#' => 'Eb'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":110,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic","kind":"member","name":"e","memberof":"Core.Note","examples":["'D#' => 'Eb'"],"type":{"names":["String"]},"longname":"Core.Note#e","scope":"instance","$longname":"Core.Note#e","$kind":"property","$docmaLink":"api/Core/#Core.Note#e"},{"comment":"/**\n\t* Returns the enharmonic\n\t* @member enharmonic\n\t* @memberof Core.Note#\n\t* @example 'D#' => 'Eb'\n\t* @type {String}\n\t*/","meta":{"filename":"Note.js","lineno":125,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic","kind":"member","name":"enharmonic","memberof":"Core.Note","examples":["'D#' => 'Eb'"],"type":{"names":["String"]},"longname":"Core.Note#enharmonic","scope":"instance","$longname":"Core.Note#enharmonic","$kind":"property","$docmaLink":"api/Core/#Core.Note#enharmonic"},{"comment":"/**\n\t * Returns the enharmonic with oct\n\t * @member eoct\n\t * @memberof Core.Note#\n\t * @example 'D#3' => 'Eb3'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":136,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the enharmonic with oct","kind":"member","name":"eoct","memberof":"Core.Note","examples":["'D#3' => 'Eb3'"],"type":{"names":["String"]},"longname":"Core.Note#eoct","scope":"instance","$longname":"Core.Note#eoct","$kind":"property","$docmaLink":"api/Core/#Core.Note#eoct"},{"comment":"/**\n\t * Returns the note frequency\n\t * @member f\n\t * @memberof Core.Note#\n\t * @example 440 // A3\n\t * @type {Number}\n\t */","meta":{"filename":"Note.js","lineno":175,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note frequency","kind":"member","name":"f","memberof":"Core.Note","examples":["440 // A3"],"type":{"names":["Number"]},"longname":"Core.Note#f","scope":"instance","$longname":"Core.Note#f","$kind":"property","$docmaLink":"api/Core/#Core.Note#f"},{"comment":"/**\n\t* Returns the note frequency\n\t* @member freq\n\t* @memberof Core.Note#\n\t* @example 440 // A3\n\t* @type {Number}\n\t*/","meta":{"filename":"Note.js","lineno":198,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note frequency","kind":"member","name":"freq","memberof":"Core.Note","examples":["440 // A3"],"type":{"names":["Number"]},"longname":"Core.Note#freq","scope":"instance","$longname":"Core.Note#freq","$kind":"property","$docmaLink":"api/Core/#Core.Note#freq"},{"comment":"/**\n\t * Is the note a flat\n\t * @member isFlat\n\t * @memberof Core.Note#\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":250,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"member","name":"isFlat","memberof":"Core.Note","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isFlat","scope":"instance","$longname":"Core.Note#isFlat","$kind":"property","$docmaLink":"api/Core/#Core.Note#isFlat"},{"comment":"/**\n\t * Is it a natural note\n\t * @member isNatural\n\t * @memberof Core.Note#\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":260,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is it a natural note","kind":"member","name":"isNatural","memberof":"Core.Note","returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isNatural","scope":"instance","$longname":"Core.Note#isNatural","$kind":"property","$docmaLink":"api/Core/#Core.Note#isNatural"},{"comment":"/**\n\t * Is the note a sharp\n\t * @member isSharp\n\t * @memberof Core.Note#\n\t * @example 'Eb' => 'D'\n\t * @return {Boolean}\n\t */","meta":{"filename":"Note.js","lineno":270,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a sharp","kind":"member","name":"isSharp","memberof":"Core.Note","examples":["'Eb' => 'D'"],"returns":[{"type":{"names":["Boolean"]}}],"longname":"Core.Note#isSharp","scope":"instance","$longname":"Core.Note#isSharp","$kind":"property","$docmaLink":"api/Core/#Core.Note#isSharp"},{"comment":"/**\n\t* Returns the midi number\n\t* @member m\n\t* @memberof Core.Note#\n\t* @example 60 // C3\n\t* @type {Number}\n\t*/","meta":{"filename":"Note.js","lineno":164,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the midi number","kind":"member","name":"m","memberof":"Core.Note","examples":["60 // C3"],"type":{"names":["Number"]},"longname":"Core.Note#m","scope":"instance","$longname":"Core.Note#m","$kind":"property","$docmaLink":"api/Core/#Core.Note#m"},{"comment":"/**\n\t * Returns the midi number\n\t * @member m\n\t * @memberof Core.Note#\n\t * @example 60 // C3\n\t * @type {Number}\n\t */","meta":{"filename":"Note.js","lineno":153,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the midi number","kind":"member","name":"m","memberof":"Core.Note","examples":["60 // C3"],"type":{"names":["Number"]},"longname":"Core.Note#m","scope":"instance","$longname":"Core.Note#m","$kind":"property","$docmaLink":"api/Core/#Core.Note#m"},{"comment":"/**\n\t * Returns the note with octave\n\t * @member n\n\t * @memberof Core.Note#\n\t * @example 'C4'\n\t * @type {String}\n\t */","meta":{"filename":"Note.js","lineno":71,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note with octave","kind":"member","name":"n","memberof":"Core.Note","examples":["'C4'"],"type":{"names":["String"]},"longname":"Core.Note#n","scope":"instance","$longname":"Core.Note#n","$kind":"property","$docmaLink":"api/Core/#Core.Note#n"},{"comment":"/**\n\t * Returns the next note a semitone away\n\t * @member next\n\t * @memberof Core.Note#\n\t * @example 'C' => Note('C#')\n\t * @return {Note}\n\t */","meta":{"filename":"Note.js","lineno":226,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the next note a semitone away","kind":"member","name":"next","memberof":"Core.Note","examples":["'C' => Note('C#')"],"returns":[{"type":{"names":["Note"]}}],"longname":"Core.Note#next","scope":"instance","$longname":"Core.Note#next","$kind":"property","$docmaLink":"api/Core/#Core.Note#next"},{"comment":"/**\n\t* Returns the note without octave\n\t* @member note\n\t* @memberof Core.Note#\n\t* @example 'C'\n\t* @type {String}\n\t*/","meta":{"filename":"Note.js","lineno":95,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the note without octave","kind":"member","name":"note","memberof":"Core.Note","examples":["'C'"],"type":{"names":["String"]},"longname":"Core.Note#note","scope":"instance","$longname":"Core.Note#note","$kind":"property","$docmaLink":"api/Core/#Core.Note#note"},{"comment":"/**\n\t* Returns the previous note a semitone away\n\t* @member prev\n\t* @memberof Core.Note#\n\t* @example 'Eb' => Note('D')\n\t* @return {Note}\n\t*/","meta":{"filename":"Note.js","lineno":238,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Returns the previous note a semitone away","kind":"member","name":"prev","memberof":"Core.Note","examples":["'Eb' => Note('D')"],"returns":[{"type":{"names":["Note"]}}],"longname":"Core.Note#prev","scope":"instance","$longname":"Core.Note#prev","$kind":"property","$docmaLink":"api/Core/#Core.Note#prev"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Note.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {String|Number} note - a note\n\t * @param {Number} midi - a midi value\n\t */","meta":{"range":[532,1471],"filename":"Note.js","lineno":25,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100002499","name":"Note","type":"MethodDefinition","paramnames":["note","midi"]},"vars":{"":null}},"description":"Creates an instance of Note.","kind":"class","memberof":"Core","params":[{"type":{"names":["String","Number"]},"description":"a note","name":"note"},{"type":{"names":["Number"]},"description":"a midi value","name":"midi"}],"name":"Note","longname":"Core.Note","scope":"static","$longname":"Core.Note","$kind":"constructor","$docmaLink":"api/Core/#Core.Note"}},{"comment":"/**\n * Defines a Scale\n * @class\n * @memberof Core\n *\n * @name Scale\n * @extends HarmonyBase\n */","meta":{"filename":"Scale.js","lineno":8,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Defines a Scale","kind":"class","memberof":"Core","name":"Scale","augments":["HarmonyBase"],"scope":"static","longname":"Core.Scale","$longname":"Core.Scale","$kind":"class","$docmaLink":"api/Core/#Core.Scale","$members":[{"comment":"/**\n\t* Is the note a flat\n\t* @function hasFlats\n\t* @memberof Core.Scale#\n\t*\n\t* @return {Boolean} Returns if it's a flat\n\t*/","meta":{"filename":"Scale.js","lineno":41,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasFlats","memberof":"Core.Scale","returns":[{"type":{"names":["Boolean"]},"description":"Returns if it's a flat"}],"longname":"Core.Scale#hasFlats","scope":"instance","$longname":"Core.Scale#hasFlats","$kind":"method","$docmaLink":"api/Core/#Core.Scale#hasFlats"},{"comment":"/**\n\t* Is the note a flat\n\t* @function hasSharps\n\t* @memberof Core.Scale#\n\t*\n\t* @return {Boolean} Returns if it's a flat\n\t*/","meta":{"filename":"Scale.js","lineno":52,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Is the note a flat","kind":"function","name":"hasSharps","memberof":"Core.Scale","returns":[{"type":{"names":["Boolean"]},"description":"Returns if it's a flat"}],"longname":"Core.Scale#hasSharps","scope":"instance","$longname":"Core.Scale#hasSharps","$kind":"method","$docmaLink":"api/Core/#Core.Scale#hasSharps"}],"$constructor":{"comment":"/**\n\t * Creates an instance of Scale.\n\t * @constructor\n\t * @memberof Core\n\t *\n\t * @param {Note|String} note A note\n\t * @param {String} type the type of scale to create\n\t * @param {Array<Number>} [octaves] [starting, number of octaves] range of octaves to map notes to\n\t */","meta":{"range":[646,943],"filename":"Scale.js","lineno":26,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{"id":"astnode100003237","name":"Scale","type":"MethodDefinition","paramnames":["note","type","octaves"]},"vars":{"":null}},"description":"Creates an instance of Scale.","kind":"class","memberof":"Core","params":[{"type":{"names":["Note","String"]},"description":"A note","name":"note"},{"type":{"names":["String"]},"description":"the type of scale to create","name":"type"},{"type":{"names":["Array.<Number>"]},"optional":true,"description":"[starting, number of octaves] range of octaves to map notes to","name":"octaves"}],"name":"Scale","longname":"Core.Scale","scope":"static","$longname":"Core.Scale","$kind":"constructor","$docmaLink":"api/Core/#Core.Scale"}}]},{"comment":"/**\n * Namepsace for all Types\n * @namespace Types\n */","meta":{"filename":"types.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/core","code":{}},"description":"Namepsace for all Types","kind":"namespace","name":"Types","longname":"Types","scope":"global","$longname":"Types","$kind":"namespace","$docmaLink":"api/Core/#Types"}],"symbols":["Core","Core.Chord","Core.Chord.findChordName","Core.Chord#hasFlats","Core.Chord#hasSharps","Core.Chord#name","Core.HarmonyBase","Core.HarmonyBase#assignOctaves","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#notes","Core.HarmonyBase#octaves","Core.HarmonyBase#root","Core.HarmonyBase#type","Core.Key","Core.Key#chord","Core.Key.isMode","Core.Key#modePosition","Core.Key#modes","Core.Key#modulate","Core.Key#modulateMode","Core.Note","Core.Note#distC","Core.Note#e","Core.Note#enharmonic","Core.Note#eoct","Core.Note#f","Core.Note#freq","Core.Note#isFlat","Core.Note#isNatural","Core.Note#isSharp","Core.Note#m","Core.Note#m","Core.Note#n","Core.Note#next","Core.Note#note","Core.Note#prev","Core.Scale","Core.Scale#hasFlats","Core.Scale#hasSharps","Types"]},"Functional":{"documentation":[{"comment":"/**\n * Functional\n * @namespace Functional\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Functional","kind":"namespace","name":"Functional","longname":"Functional","scope":"global","$longname":"Functional","$kind":"namespace","$docmaLink":"api/Functional/#Functional","$members":[{"comment":"/**\n * Creates a chord progression\n *\n * @function createChordProgression\n * @memberof Functional\n * @example\n * [{\n *\t\t\"chord\": [ 71, 74, 78 ],\n * \t\t\"chordName\": \"Bm\",\n *\t\t\"dur\": 960,\n *\t\t\"time\": 0,\n *\t},\n * \t\t\"chord\": [ 71, 74, 78 ],\n *\t\t\"chordName\": \"Bm\",\n *\t\t\"dur\": 480,\n *\t\t\"time\": 960,\n *\t}]\n *\n * @param {Array<Object>} timeline a movement's timeline\n * @param {Object} [options = {}]\n * @param {Array<string>} [options.structures = Chord.STRUCTURES] chord structures for the chords\n * @param {Function} [options.distribution = distribute.decreasing] decreasing/increasing probabilities to pick the rhythms\n * @param {number} [options.restProb = 0.0] probability of being a rest note\n * @param {number} [options.inversionProb = 0.0] probability of using a chord inversion\n * @param {Array<Array<Number>>} [options.octaves = [ [ 3, 1 ] ]] [starting, number of octaves] range of octaves to map notes to\n * @param {Array<Number>} [options.startingOctave = [ 3, 1 ]] starting octave\n * @param {number} [options.minChordNotes = 3] minimum number of notes within a chord\n * @param {string} [options.rhythmType = 'free'] 'free' or 'turn' based rhythms\n *\n * @return {Array<Object>} { time, dur, chord, chordName }\n */","meta":{"filename":"chord-progression.js","lineno":27,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Creates a chord progression","kind":"function","name":"createChordProgression","memberof":"Functional","examples":["[{\n\t\t\"chord\": [ 71, 74, 78 ],\n\t\t\"chordName\": \"Bm\",\n\t\t\"dur\": 960,\n\t\t\"time\": 0,\n\t},\n\t\t\"chord\": [ 71, 74, 78 ],\n\t\t\"chordName\": \"Bm\",\n\t\t\"dur\": 480,\n\t\t\"time\": 960,\n\t}]"],"params":[{"type":{"names":["Array.<Object>"]},"description":"a movement's timeline","name":"timeline"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"Chord.STRUCTURES","description":"chord structures for the chords","name":"options.structures"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"distribute.decreasing","description":"decreasing/increasing probabilities to pick the rhythms","name":"options.distribution"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of being a rest note","name":"options.restProb"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of using a chord inversion","name":"options.inversionProb"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"defaultvalue":"[ [ 3, 1 ] ]","description":"[starting, number of octaves] range of octaves to map notes to","name":"options.octaves"},{"type":{"names":["Array.<Number>"]},"optional":true,"defaultvalue":"[ 3, 1 ]","description":"starting octave","name":"options.startingOctave"},{"type":{"names":["number"]},"optional":true,"defaultvalue":3,"description":"minimum number of notes within a chord","name":"options.minChordNotes"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'free'","description":"'free' or 'turn' based rhythms","name":"options.rhythmType"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"{ time, dur, chord, chordName }"}],"scope":"static","longname":"Functional.createChordProgression","$longname":"Functional.createChordProgression","$kind":"method","$docmaLink":"api/Functional/#Functional.createChordProgression"},{"comment":"/**\n * Create interleaved motifs\n *\n * @function createMelodies\n * @memberof Functional\n *\n * @param {Array<Object>} timeline a movement's timeline\n * @param {Object} [options = {}]\n * @param {Array<string>} [options.rhythms = presets.mixed] notevalues to create the motifs\n * @param {Function} [options.distribution = distribute.decreasing] decreasing/increasing probabilities to pick the rhythms\n * @param {number} [options.restProb = 0.0] probability of being a rest note\n * @param {number} [options.dejaVuChance = 0.5] probability of using a previous motif\n * @param {Array<Array<Number>>} [options.octaves = [ [ 4, 1 ], [ 3, 1 ] ]] [starting, number of octaves] range of octaves to map notes to\n * @param {string} [options.rhythmType = 'free'] 'free' or 'turn' based rhythms\n * @param {Array<number>} [options.minNoteValues = [4, 8]] used in a 'turn' based rhythm\n *\n * @return {Array<Melody>}\n */","meta":{"filename":"melodies.js","lineno":40,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Create interleaved motifs","kind":"function","name":"createMelodies","memberof":"Functional","params":[{"type":{"names":["Array.<Object>"]},"description":"a movement's timeline","name":"timeline"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"options"},{"type":{"names":["Array.<string>"]},"optional":true,"defaultvalue":"presets.mixed","description":"notevalues to create the motifs","name":"options.rhythms"},{"type":{"names":["function"]},"optional":true,"defaultvalue":"distribute.decreasing","description":"decreasing/increasing probabilities to pick the rhythms","name":"options.distribution"},{"type":{"names":["number"]},"optional":true,"defaultvalue":"0.0","description":"probability of being a rest note","name":"options.restProb"},{"type":{"names":["number"]},"optional":true,"defaultvalue":0.5,"description":"probability of using a previous motif","name":"options.dejaVuChance"},{"type":{"names":["Array.<Array.<Number>>"]},"optional":true,"defaultvalue":"[ [ 4, 1 ], [ 3, 1 ] ]","description":"[starting, number of octaves] range of octaves to map notes to","name":"options.octaves"},{"type":{"names":["string"]},"optional":true,"defaultvalue":"'free'","description":"'free' or 'turn' based rhythms","name":"options.rhythmType"},{"type":{"names":["Array.<number>"]},"optional":true,"defaultvalue":"[4, 8]","description":"used in a 'turn' based rhythm","name":"options.minNoteValues"}],"returns":[{"type":{"names":["Array.<Melody>"]}}],"scope":"static","longname":"Functional.createMelodies","$longname":"Functional.createMelodies","$kind":"method","$docmaLink":"api/Functional/#Functional.createMelodies"},{"comment":"/**\n * Generates a motif\n *\n * @function createMotif\n * @memberof Functional\n *\n * @example createMotif(new Scale('A', Scale.MAJOR)) =>\n * [ { time: 0, note: 'A4', midi: 69, dur: '8nt' },\n *  { time: '64i', note: 'C#5', midi: 73, dur: '4n.' },\n *  { time: '352i', note: 'C#5', midi: 73, dur: '4n.' },\n *  { time: '640i', note: 'B4', midi: 71, dur: '8nt' },\n *  { time: '704i', note: 'C#5', midi: 73, dur: '8nt' } ]\n *\n * @param {Array<Note>} notes\n * @param {Array<String>} rhythm decides which duration to be used based on probabilities\n * @param {Number} startTime when to start the motif\n * @param {Boolean} noDurMapping leave time per event = startTime\n * @param {Boolean} mapToTicks map duration to ticks\n *\n * @return {Array<Motif>}\n */","meta":{"filename":"motif.js","lineno":11,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Generates a motif","kind":"function","name":"createMotif","memberof":"Functional","examples":["createMotif(new Scale('A', Scale.MAJOR)) =>\n[ { time: 0, note: 'A4', midi: 69, dur: '8nt' },\n { time: '64i', note: 'C#5', midi: 73, dur: '4n.' },\n { time: '352i', note: 'C#5', midi: 73, dur: '4n.' },\n { time: '640i', note: 'B4', midi: 71, dur: '8nt' },\n { time: '704i', note: 'C#5', midi: 73, dur: '8nt' } ]"],"params":[{"type":{"names":["Array.<Note>"]},"name":"notes"},{"type":{"names":["Array.<String>"]},"description":"decides which duration to be used based on probabilities","name":"rhythm"},{"type":{"names":["Number"]},"description":"when to start the motif","name":"startTime"},{"type":{"names":["Boolean"]},"description":"leave time per event = startTime","name":"noDurMapping"},{"type":{"names":["Boolean"]},"description":"map duration to ticks","name":"mapToTicks"}],"returns":[{"type":{"names":["Array.<Motif>"]}}],"scope":"static","longname":"Functional.createMotif","$longname":"Functional.createMotif","$kind":"method","$docmaLink":"api/Functional/#Functional.createMotif"},{"comment":"/**\n * Creates a mixture of euclidean rhythm patterns\n * @function createPercussion\n * @memberof Functional\n *\n * @param {Number} steps [ 32, 16, 8, 4 ]\n * @param {Number | Array<Number>} beatsPerPart Max numbers of beats per part or beats\n *\n * @return {Percussion} [pattern, subdivision]\n */","meta":{"filename":"percussion.js","lineno":24,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Creates a mixture of euclidean rhythm patterns","kind":"function","name":"createPercussion","memberof":"Functional","params":[{"type":{"names":["Number"]},"description":"[ 32, 16, 8, 4 ]","name":"steps"},{"type":{"names":["Number","Array.<Number>"]},"description":"Max numbers of beats per part or beats","name":"beatsPerPart"}],"returns":[{"type":{"names":["Percussion"]},"description":"[pattern, subdivision]"}],"scope":"static","longname":"Functional.createPercussion","$longname":"Functional.createPercussion","$kind":"method","$docmaLink":"api/Functional/#Functional.createPercussion"}]},{"comment":"/**\n * Melody Type\n * @typedef {Object} Melody\n * @memberof Types\n * @property {Number} dur duration in ticks\n * @property {Number} midi midi note\n * @property {String} note note as string\n * @property {Number} time transport time in ticks\n * @example\n * {\n *   \"dur\": 480,\n *   \"midi\": 90,\n *   \"note\": \"F#5\",\n *   \"time\": 0,\n * }\n */","meta":{"filename":"melodies.js","lineno":23,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Melody Type","kind":"typedef","name":"Melody","type":{"names":["Object"]},"memberof":"Types","properties":[{"type":{"names":["Number"]},"description":"duration in ticks","name":"dur"},{"type":{"names":["Number"]},"description":"midi note","name":"midi"},{"type":{"names":["String"]},"description":"note as string","name":"note"},{"type":{"names":["Number"]},"description":"transport time in ticks","name":"time"}],"examples":["{\n  \"dur\": 480,\n  \"midi\": 90,\n  \"note\": \"F#5\",\n  \"time\": 0,\n}"],"scope":"static","longname":"Types.Melody","$longname":"Types.Melody","$kind":"typedef","$docmaLink":"api/Functional/#Types.Melody"},{"comment":"/**\n * Percussion Type\n * @typedef {Object} Percussion\n * @memberof Types\n * @property {Array<String>} pattern combination of hits and rests\n * @property {String} subdivision in note value\n * @example\n * {\n *\tpattern: [ 'x', '-', 'x', '-' ],\n *\tsubdivision: '4n',\n * }\n */","meta":{"filename":"percussion.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/functional","code":{}},"description":"Percussion Type","kind":"typedef","name":"Percussion","type":{"names":["Object"]},"memberof":"Types","properties":[{"type":{"names":["Array.<String>"]},"description":"combination of hits and rests","name":"pattern"},{"type":{"names":["String"]},"description":"in note value","name":"subdivision"}],"examples":["{\n\tpattern: [ 'x', '-', 'x', '-' ],\n\tsubdivision: '4n',\n}"],"scope":"static","longname":"Types.Percussion","$longname":"Types.Percussion","$kind":"typedef","$docmaLink":"api/Functional/#Types.Percussion"}],"symbols":["Functional","Functional.createChordProgression","Functional.createMelodies","Functional.createMotif","Functional.createPercussion","Types.Melody","Types.Percussion"]},"Tools":{"documentation":[{"comment":"/**\n * The Toolshed\n * @namespace Tools\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"The Toolshed","kind":"namespace","name":"Tools","longname":"Tools","scope":"global","$longname":"Tools","$kind":"namespace","$docmaLink":"api/Tools/#Tools","$members":[{"comment":"/**\n * Choose a random element from an array\n * @function choose\n * @memberof Tools\n *\n * @param {Array} list\n * @param {Number} n\n * @param {*} compareAgainst\n * @return {*}\n */","meta":{"filename":"choose.js","lineno":11,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Choose a random element from an array","kind":"function","name":"choose","memberof":"Tools","params":[{"type":{"names":["Array"]},"name":"list"},{"type":{"names":["Number"]},"name":"n"},{"type":{"names":["*"]},"name":"compareAgainst"}],"returns":[{"type":{"names":["*"]}}],"scope":"static","longname":"Tools.choose","$longname":"Tools.choose","$kind":"method","$docmaLink":"api/Tools/#Tools.choose"},{"comment":"/**\n * Note distance functions\n * @namespace Distance\n * @memberof Tools\n */","meta":{"filename":"distance.js","lineno":10,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Note distance functions","kind":"namespace","name":"Distance","memberof":"Tools","scope":"static","longname":"Tools.Distance","$longname":"Tools.Distance","$kind":"namespace","$docmaLink":"api/Tools/#Tools.Distance","$members":[{"comment":"/**\n * Get the interval between 2 notes\n * @function interval\n * @memberof Tools.Distance\n *\n * @param {Note} a\n * @param {Note} b\n * @example interval(C, G) // => \"5P\"\n * @return {String|null} The interval between 2 notes\n */","meta":{"filename":"distance.js","lineno":48,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Get the interval between 2 notes","kind":"function","name":"interval","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"a"},{"type":{"names":["Note"]},"name":"b"}],"examples":["interval(C, G) // => \"5P\""],"returns":[{"type":{"names":["String","null"]},"description":"The interval between 2 notes"}],"scope":"static","longname":"Tools.Distance.interval","$longname":"Tools.Distance.interval","$kind":"method","$docmaLink":"api/Tools/#Tools.Distance.interval"},{"comment":"/**\n * Position in the chromatic scale from C\n * @function position\n * @memberof Tools.Distance\n *\n * @param {Note} note\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":16,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Position in the chromatic scale from C","kind":"function","name":"position","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"note"}],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.position","$longname":"Tools.Distance.position","$kind":"method","$docmaLink":"api/Tools/#Tools.Distance.position"},{"comment":"/**\n * Distance of 2 notes in semitones\n * @function semitones\n * @memberof Tools.Distance\n *\n * @param {Note} a\n * @param {Note} b\n * @example semitones(C, D) // => 2\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":28,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Distance of 2 notes in semitones","kind":"function","name":"semitones","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"a"},{"type":{"names":["Note"]},"name":"b"}],"examples":["semitones(C, D) // => 2"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.semitones","$longname":"Tools.Distance.semitones","$kind":"method","$docmaLink":"api/Tools/#Tools.Distance.semitones"},{"comment":"/**\n * Transpose a note by an interval\n * @function transposeDown\n * @memberof Tools.Distance\n *\n * @param {Note} note\n * @param {String} int interval\n * @example transposeDown(C, \"5P\") // => \"F\"\n * @return {String|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":114,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Transpose a note by an interval","kind":"function","name":"transposeDown","memberof":"Tools.Distance","params":[{"type":{"names":["Note"]},"name":"note"},{"type":{"names":["String"]},"description":"interval","name":"int"}],"examples":["transposeDown(C, \"5P\") // => \"F\""],"returns":[{"type":{"names":["String","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.transposeDown","$longname":"Tools.Distance.transposeDown","$kind":"method","$docmaLink":"api/Tools/#Tools.Distance.transposeDown"},{"comment":"/**\n * Transpose a note by an interval\n * @function transposeUp\n * @memberof Tools.Distance\n *\n * @param {Note | string} note\n * @param {String} int interval\n * @example transpose(C, \"5P\") // => \"G\"\n * @return {String|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"distance.js","lineno":101,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Transpose a note by an interval","kind":"function","name":"transposeUp","memberof":"Tools.Distance","params":[{"type":{"names":["Note","string"]},"name":"note"},{"type":{"names":["String"]},"description":"interval","name":"int"}],"examples":["transpose(C, \"5P\") // => \"G\""],"returns":[{"type":{"names":["String","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Distance.transposeUp","$longname":"Tools.Distance.transposeUp","$kind":"method","$docmaLink":"api/Tools/#Tools.Distance.transposeUp"}]},{"comment":"/**\n * Euclidean Rhythm tool\n * @namespace Euclidean\n * @memberof Tools\n */","meta":{"filename":"euclidean.js","lineno":7,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Euclidean Rhythm tool","kind":"namespace","name":"Euclidean","memberof":"Tools","scope":"static","longname":"Tools.Euclidean","$longname":"Tools.Euclidean","$kind":"namespace","$docmaLink":"api/Tools/#Tools.Euclidean","$members":[{"comment":"/**\n * Create an Euclidean rhythm based on Bresenham's line algorithm\n * @function create\n * @memberof Tools.Euclidean\n *\n * @param {Number} pulses larger number\n * @param {Number} beats smaller number\n * @return {Array}\n */","meta":{"filename":"euclidean.js","lineno":13,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Create an Euclidean rhythm based on Bresenham's line algorithm","kind":"function","name":"create","memberof":"Tools.Euclidean","params":[{"type":{"names":["Number"]},"description":"larger number","name":"pulses"},{"type":{"names":["Number"]},"description":"smaller number","name":"beats"}],"returns":[{"type":{"names":["Array"]}}],"scope":"static","longname":"Tools.Euclidean.create","$longname":"Tools.Euclidean.create","$kind":"method","$docmaLink":"api/Tools/#Tools.Euclidean.create"},{"comment":"/**\n * Rotates an euclidean pattern\n * @function rotate\n * @memberof Tools.Euclidean\n *\n * @param {Array} pattern\n * @return {Array}\n */","meta":{"filename":"euclidean.js","lineno":38,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Rotates an euclidean pattern","kind":"function","name":"rotate","memberof":"Tools.Euclidean","params":[{"type":{"names":["Array"]},"name":"pattern"}],"returns":[{"type":{"names":["Array"]}}],"scope":"static","longname":"Tools.Euclidean.rotate","$longname":"Tools.Euclidean.rotate","$kind":"method","$docmaLink":"api/Tools/#Tools.Euclidean.rotate"}]},{"comment":"/**\n * Approaches:\n * * Based on a list of notes, find possible compatible keys.\n * * The comparison is done between matching intervals. Categorized by the most notes in common to the least.\n *\n * @function friendly\n * @memberof Tools\n *\n * @param {Array<String>} notes\n * @param {Array<String>} [rankedScales]\n * @return {Array<Object>}\n */","meta":{"filename":"friendly.js","lineno":144,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Approaches:\n* Based on a list of notes, find possible compatible keys.\n* The comparison is done between matching intervals. Categorized by the most notes in common to the least.","kind":"function","name":"friendly","memberof":"Tools","params":[{"type":{"names":["Array.<String>"]},"name":"notes"},{"type":{"names":["Array.<String>"]},"optional":true,"name":"rankedScales"}],"returns":[{"type":{"names":["Array.<Object>"]}}],"scope":"static","longname":"Tools.friendly","$longname":"Tools.friendly","$kind":"method","$docmaLink":"api/Tools/#Tools.friendly"},{"comment":"/**\n * Intervals\n * @namespace Interval\n * @memberof Tools\n */","meta":{"filename":"interval.js","lineno":3,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Intervals","kind":"namespace","name":"Interval","memberof":"Tools","scope":"static","longname":"Tools.Interval","$longname":"Tools.Interval","$kind":"namespace","$docmaLink":"api/Tools/#Tools.Interval","$members":[{"comment":"/**\n * Adds two intervals together\n * @function add\n * @memberof Tools.Interval\n *\n * @param {String} a\n * @param {String} b\n *\n * @example\n * add(\"3M\", \"3M\") => 6m\n *\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"interval.js","lineno":68,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Adds two intervals together","kind":"function","name":"add","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"a"},{"type":{"names":["String"]},"name":"b"}],"examples":["add(\"3M\", \"3M\") => 6m"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Interval.add","$longname":"Tools.Interval.add","$kind":"method","$docmaLink":"api/Tools/#Tools.Interval.add"},{"comment":"/**\n * Gets one or several intervals from a number of semitones\n * @function interval\n * @memberof Tools.Interval\n *\n * @param {Number} semitones\n * @return {Array<String>|null}\n */","meta":{"filename":"interval.js","lineno":9,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Gets one or several intervals from a number of semitones","kind":"function","name":"interval","memberof":"Tools.Interval","params":[{"type":{"names":["Number"]},"name":"semitones"}],"returns":[{"type":{"names":["Array.<String>","null"]}}],"scope":"static","longname":"Tools.Interval.interval","$longname":"Tools.Interval.interval","$kind":"method","$docmaLink":"api/Tools/#Tools.Interval.interval"},{"comment":"/**\n * Inverts the given interval\n * @function invert\n * @memberof Tools.Interval\n *\n * @param {String} interv\n * @return {String|null}\n */","meta":{"filename":"interval.js","lineno":50,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Inverts the given interval","kind":"function","name":"invert","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"interv"}],"returns":[{"type":{"names":["String","null"]}}],"scope":"static","longname":"Tools.Interval.invert","$longname":"Tools.Interval.invert","$kind":"method","$docmaLink":"api/Tools/#Tools.Interval.invert"},{"comment":"/**\n * Gets the semitones of an interval\n * @function semitones\n * @memberof Tools.Interval\n *\n * @param {String} interv\n * @return {Number|null}\n */","meta":{"filename":"interval.js","lineno":34,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Gets the semitones of an interval","kind":"function","name":"semitones","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"interv"}],"returns":[{"type":{"names":["Number","null"]}}],"scope":"static","longname":"Tools.Interval.semitones","$longname":"Tools.Interval.semitones","$kind":"method","$docmaLink":"api/Tools/#Tools.Interval.semitones"},{"comment":"/**\n * Subtracts two intervals together\n * @function subtract\n * @memberof Tools.Interval\n *\n * @param {String} a\n * @param {String} b\n *\n * @example\n * subtract(\"9m\", \"3m\") => 7m\n *\n * @return {Number|null} How many semitones are they apart or null if not possible\n */","meta":{"filename":"interval.js","lineno":96,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Subtracts two intervals together","kind":"function","name":"subtract","memberof":"Tools.Interval","params":[{"type":{"names":["String"]},"name":"a"},{"type":{"names":["String"]},"name":"b"}],"examples":["subtract(\"9m\", \"3m\") => 7m"],"returns":[{"type":{"names":["Number","null"]},"description":"How many semitones are they apart or null if not possible"}],"scope":"static","longname":"Tools.Interval.subtract","$longname":"Tools.Interval.subtract","$kind":"method","$docmaLink":"api/Tools/#Tools.Interval.subtract"}]},{"comment":"/**\n * MIDI tools\n * @namespace Midi\n * @memberof Tools\n */","meta":{"filename":"midi.js","lineno":6,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"MIDI tools","kind":"namespace","name":"Midi","memberof":"Tools","scope":"static","longname":"Tools.Midi","$longname":"Tools.Midi","$kind":"namespace","$docmaLink":"api/Tools/#Tools.Midi","$members":[{"comment":"/**\n * Find the nearest chord\n * @function findNearest\n * @memberof Tools.Midi\n *\n * @param {Array<Number>} baseChord\n * @param {Array<String>} chord\n * @param {Boolean} hasFlats\n *\n * @return {Array<Number>} midi note\n */","meta":{"filename":"midi.js","lineno":50,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Find the nearest chord","kind":"function","name":"findNearest","memberof":"Tools.Midi","params":[{"type":{"names":["Array.<Number>"]},"name":"baseChord"},{"type":{"names":["Array.<String>"]},"name":"chord"},{"type":{"names":["Boolean"]},"name":"hasFlats"}],"returns":[{"type":{"names":["Array.<Number>"]},"description":"midi note"}],"scope":"static","longname":"Tools.Midi.findNearest","$longname":"Tools.Midi.findNearest","$kind":"method","$docmaLink":"api/Tools/#Tools.Midi.findNearest"},{"comment":"/**\n * Find the nearest MIDI note\n *\n * @function findNearest\n * @memberof Tools.Midi\n *\n * @param {Number} base\n * @param {String} note\n *\n * @return {Number} midi note\n */","meta":{"filename":"midi.js","lineno":12,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Find the nearest MIDI note","kind":"function","name":"findNearest","memberof":"Tools.Midi","params":[{"type":{"names":["Number"]},"name":"base"},{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["Number"]},"description":"midi note"}],"scope":"static","longname":"Tools.Midi.findNearest","$longname":"Tools.Midi.findNearest","$kind":"method","$docmaLink":"api/Tools/#Tools.Midi.findNearest"}]},{"comment":"/**\n * Rotates an array N number of times\n * @function rotate\n * @memberof Tools\n *\n * @param {Array<*>} list\n * @param {number} [nrOfTimes=1]\n * @return {Array<*>}\n */","meta":{"filename":"rotate.js","lineno":3,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Rotates an array N number of times","kind":"function","name":"rotate","memberof":"Tools","params":[{"type":{"names":["Array.<*>"]},"name":"list"},{"type":{"names":["number"]},"optional":true,"defaultvalue":1,"name":"nrOfTimes"}],"returns":[{"type":{"names":["Array.<*>"]}}],"scope":"static","longname":"Tools.rotate","$longname":"Tools.rotate","$kind":"method","$docmaLink":"api/Tools/#Tools.rotate"},{"comment":"/**\n * Shuffles an array N number of times\n * @function shuffle\n * @memberof Tools\n *\n * @param {Array<*>} list\n * @param {number} [nrOfTimes=3]\n * @return {Array<*>}\n */","meta":{"filename":"shuffle.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Shuffles an array N number of times","kind":"function","name":"shuffle","memberof":"Tools","params":[{"type":{"names":["Array.<*>"]},"name":"list"},{"type":{"names":["number"]},"optional":true,"defaultvalue":3,"name":"nrOfTimes"}],"returns":[{"type":{"names":["Array.<*>"]}}],"scope":"static","longname":"Tools.shuffle","$longname":"Tools.shuffle","$kind":"method","$docmaLink":"api/Tools/#Tools.shuffle"},{"comment":"/**\n * Time tools\n * @namespace Time\n * @memberof Tools\n */","meta":{"filename":"time.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Time tools","kind":"namespace","name":"Time","memberof":"Tools","scope":"static","longname":"Tools.Time","$longname":"Tools.Time","$kind":"namespace","$docmaLink":"api/Tools/#Tools.Time","$members":[{"comment":"/**\n * Creates a timeline by assigning the duration to each event's time\n * @function mapDurations\n * @memberof Tools.Time\n *\n * @example mapDurations(pattern) =>\n * [ { time: 0, dur: 8nt },\n * { time: 0, dur: 4nd },\n * { time: 0, dur: 4nd },\n * { time: 0, dur: 8nt },\n * { time: 0, dur: 8nt } ]\n *\n * @param {Array<Object>} pattern\n * @param {Boolean} mapToTicks\n * @return {Array<Object>} pattern\n */","meta":{"filename":"time.js","lineno":102,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Creates a timeline by assigning the duration to each event's time","kind":"function","name":"mapDurations","memberof":"Tools.Time","examples":["mapDurations(pattern) =>\n[ { time: 0, dur: 8nt },\n{ time: 0, dur: 4nd },\n{ time: 0, dur: 4nd },\n{ time: 0, dur: 8nt },\n{ time: 0, dur: 8nt } ]"],"params":[{"type":{"names":["Array.<Object>"]},"name":"pattern"},{"type":{"names":["Boolean"]},"name":"mapToTicks"}],"returns":[{"type":{"names":["Array.<Object>"]},"description":"pattern"}],"scope":"static","longname":"Tools.Time.mapDurations","$longname":"Tools.Time.mapDurations","$kind":"method","$docmaLink":"api/Tools/#Tools.Time.mapDurations"},{"comment":"/**\n * Converts ticks to transport notation\n *\n * @function ticksToTransport\n * @memberof Tools.Time\n *\n * @param {Number} ticks\n * @param {Object} [opts = {}]\n * @param {Array<Number>} [opts.timeSignature = [ 4, 4 ]]\n * @param {Boolean} [opts.positionMode = false]\n * @return {String}\n */","meta":{"filename":"time.js","lineno":53,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"Converts ticks to transport notation","kind":"function","name":"ticksToTransport","memberof":"Tools.Time","params":[{"type":{"names":["Number"]},"name":"ticks"},{"type":{"names":["Object"]},"optional":true,"defaultvalue":"{}","name":"opts"},{"type":{"names":["Array.<Number>"]},"optional":true,"defaultvalue":"[ 4, 4 ]","name":"opts.timeSignature"},{"type":{"names":["Boolean"]},"optional":true,"defaultvalue":false,"name":"opts.positionMode"}],"returns":[{"type":{"names":["String"]}}],"scope":"static","longname":"Tools.Time.ticksToTransport","$longname":"Tools.Time.ticksToTransport","$kind":"method","$docmaLink":"api/Tools/#Tools.Time.ticksToTransport"},{"comment":"/**\n * BARS : QUARTERS : BEATS\n *\n * @function transportToTicks\n * @memberof Tools.Time\n *\n * @param {String} time '2.3.1'\n * @param {boolean} [positionMode=false]\n * @return {Number}\n */","meta":{"filename":"time.js","lineno":29,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/tools","code":{}},"description":"BARS : QUARTERS : BEATS","kind":"function","name":"transportToTicks","memberof":"Tools.Time","params":[{"type":{"names":["String"]},"description":"'2.3.1'","name":"time"},{"type":{"names":["boolean"]},"optional":true,"defaultvalue":false,"name":"positionMode"}],"returns":[{"type":{"names":["Number"]}}],"scope":"static","longname":"Tools.Time.transportToTicks","$longname":"Tools.Time.transportToTicks","$kind":"method","$docmaLink":"api/Tools/#Tools.Time.transportToTicks"}]}]}],"symbols":["Tools","Tools.choose","Tools.Distance","Tools.Distance.interval","Tools.Distance.position","Tools.Distance.semitones","Tools.Distance.transposeDown","Tools.Distance.transposeUp","Tools.Euclidean","Tools.Euclidean.create","Tools.Euclidean.rotate","Tools.friendly","Tools.Interval","Tools.Interval.add","Tools.Interval.interval","Tools.Interval.invert","Tools.Interval.semitones","Tools.Interval.subtract","Tools.Midi","Tools.Midi.findNearest","Tools.Midi.findNearest","Tools.rotate","Tools.shuffle","Tools.Time","Tools.Time.mapDurations","Tools.Time.ticksToTransport","Tools.Time.transportToTicks"]},"Utils":{"documentation":[{"comment":"/**\n * Generic Utilities\n * @namespace Utils\n */","meta":{"filename":"index.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Generic Utilities","kind":"namespace","name":"Utils","longname":"Utils","scope":"global","$longname":"Utils","$kind":"namespace","$docmaLink":"api/Utils/#Utils","$members":[{"comment":"/**\n * Assign octaves to the notes passed\n * @function assignOctaves\n * @memberof Utils\n *\n * @param {Array<Scale|Chord>} notes\n * @param {Array<Number>} octaves which octaves to map to\n * @param {Object} opts\n * @param {'scale'|'chord'} opts.type which type of the notes array is it\n * @param {boolean} opts.hasFlats if the notes should be flats or sharps\n * @example\n * \t\tassignOctaves(scale.notes, [ 3, 2 ])\n * \t\tassignOctaves(chord.notes, [ 4, 2 ], 'chord')\n *\n * @return {Array<Note>} Array of the Key notes mapped to octaves\n */","meta":{"filename":"octaves.js","lineno":21,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Assign octaves to the notes passed","kind":"function","name":"assignOctaves","memberof":"Utils","params":[{"type":{"names":["Array.<(Scale|Chord)>"]},"name":"notes"},{"type":{"names":["Array.<Number>"]},"description":"which octaves to map to","name":"octaves"},{"type":{"names":["Object"]},"name":"opts"},{"type":{"names":["'scale'","'chord'"]},"description":"which type of the notes array is it","name":"opts.type"},{"type":{"names":["boolean"]},"description":"if the notes should be flats or sharps","name":"opts.hasFlats"}],"examples":["assignOctaves(scale.notes, [ 3, 2 ])\n\t\tassignOctaves(chord.notes, [ 4, 2 ], 'chord')"],"returns":[{"type":{"names":["Array.<Note>"]},"description":"Array of the Key notes mapped to octaves"}],"scope":"static","longname":"Utils.assignOctaves","$longname":"Utils.assignOctaves","$kind":"method","$docmaLink":"api/Utils/#Utils.assignOctaves"},{"comment":"/**\n * Backtracking algorithm for finding all possible combination for a specific sum.\n * @memberof Utils\n * @function combinationSum\n *\n * @param {Number} target\n * @param {Number} maxOnes\n *\n * @return {Array<String>}\n */","meta":{"filename":"combinations.js","lineno":72,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Backtracking algorithm for finding all possible combination for a specific sum.","memberof":"Utils","kind":"function","name":"combinationSum","params":[{"type":{"names":["Number"]},"name":"target"},{"type":{"names":["Number"]},"name":"maxOnes"}],"returns":[{"type":{"names":["Array.<String>"]}}],"scope":"static","longname":"Utils.combinationSum","$longname":"Utils.combinationSum","$kind":"method","$docmaLink":"api/Utils/#Utils.combinationSum"},{"comment":"/**\n * Deconstruct Chord from a String into a Object\n *\n * @function deconstructName\n * @memberof Utils\n *\n * @param {String} chordName\n * @return {Object}\n */","meta":{"filename":"chord.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Deconstruct Chord from a String into a Object","kind":"function","name":"deconstructName","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"chordName"}],"returns":[{"type":{"names":["Object"]}}],"scope":"static","longname":"Utils.deconstructName","$longname":"Utils.deconstructName","$kind":"method","$docmaLink":"api/Utils/#Utils.deconstructName"},{"comment":"/**\n * Maps an array of notes into a specified type\n *\n *\n * @function mapNotes\n * @memberof Utils\n *\n * @param {Array<Note>} notes\n * @param {NoteType} type\n * @return {Array<NoteType>} Notes mapped to a type\n */","meta":{"filename":"map.js","lineno":18,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Maps an array of notes into a specified type","kind":"function","name":"mapNotes","memberof":"Utils","params":[{"type":{"names":["Array.<Note>"]},"name":"notes"},{"type":{"names":["NoteType"]},"name":"type"}],"returns":[{"type":{"names":["Array.<NoteType>"]},"description":"Notes mapped to a type"}],"scope":"static","longname":"Utils.mapNotes","$longname":"Utils.mapNotes","$kind":"method","$docmaLink":"api/Utils/#Utils.mapNotes"},{"comment":"/**\n * Returns a note without the accidental\n * @function natural\n * @memberof Utils\n *\n * @param {String|Note} note\n * @return {String} Natural note\n */","meta":{"filename":"note.js","lineno":19,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Returns a note without the accidental","kind":"function","name":"natural","memberof":"Utils","params":[{"type":{"names":["String","Note"]},"name":"note"}],"returns":[{"type":{"names":["String"]},"description":"Natural note"}],"scope":"static","longname":"Utils.natural","$longname":"Utils.natural","$kind":"method","$docmaLink":"api/Utils/#Utils.natural"},{"comment":"/**\n * Custom Error\n * @class\n * @memberof Utils\n *\n * @name PlayaError\n * @extends {Error}\n */","meta":{"filename":"error.js","lineno":1,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Custom Error","kind":"class","memberof":"Utils","name":"PlayaError","augments":["Error"],"scope":"static","longname":"Utils.PlayaError","$longname":"Utils.PlayaError","$kind":"class","$docmaLink":"api/Utils/#Utils.PlayaError","$constructor":{"comment":"/**\n\t * Creates an instance of PlayaError.\n\t * @constructor\n\t * @memberof Utils\n\t * @param {String} name\n\t * @param {String} [message]\n\t * @param {Object} Object { error, ...context }\n\t */","meta":{"range":[320,593],"filename":"error.js","lineno":18,"columnno":1,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{"id":"astnode100000208","name":"PlayaError","type":"MethodDefinition","paramnames":["name","message",""]},"vars":{"":null}},"description":"Creates an instance of PlayaError.","kind":"class","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"name"},{"type":{"names":["String"]},"optional":true,"name":"message"},{"type":{"names":["Object"]},"description":"{ error, ...context }","name":"Object"}],"name":"PlayaError","longname":"Utils.PlayaError","scope":"static","$longname":"Utils.PlayaError","$kind":"constructor","$docmaLink":"api/Utils/#Utils.PlayaError"}},{"comment":"/**\n * Strips the octave from the note\n *\n * @function stripOctave\n * @memberof Utils\n *\n * @param {String} note\n * @return {String} Natural note\n */","meta":{"filename":"note.js","lineno":35,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Strips the octave from the note","kind":"function","name":"stripOctave","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["String"]},"description":"Natural note"}],"scope":"static","longname":"Utils.stripOctave","$longname":"Utils.stripOctave","$kind":"method","$docmaLink":"api/Utils/#Utils.stripOctave"},{"comment":"/**\n * Returns a note's accidental [# | b]\n *\n * @function whichAccident\n * @memberof Utils\n *\n * @param {String} note\n * @return {String}\n */","meta":{"filename":"note.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Returns a note's accidental [# | b]","kind":"function","name":"whichAccident","memberof":"Utils","params":[{"type":{"names":["String"]},"name":"note"}],"returns":[{"type":{"names":["String"]}}],"scope":"static","longname":"Utils.whichAccident","$longname":"Utils.whichAccident","$kind":"method","$docmaLink":"api/Utils/#Utils.whichAccident"},{"comment":"/**\n * Loops till the condition seizes to be true\n *\n * @function whilst\n * @memberof Utils\n *\n * @param {Function} fn\n * @param {Function} condition\n * @param {Object.Number} [maxLoops = 1000]\n */","meta":{"filename":"whilst.js","lineno":4,"columnno":0,"path":"/Users/feral/Creative-Coding/playa/lib/utils","code":{}},"description":"Loops till the condition seizes to be true","kind":"function","name":"whilst","memberof":"Utils","params":[{"type":{"names":["function"]},"name":"fn"},{"type":{"names":["function"]},"name":"condition"},{"type":{"names":["Object.Number"]},"optional":true,"defaultvalue":1000,"name":"maxLoops"}],"scope":"static","longname":"Utils.whilst","$longname":"Utils.whilst","$kind":"method","$docmaLink":"api/Utils/#Utils.whilst"}]}],"symbols":["Utils","Utils.assignOctaves","Utils.combinationSum","Utils.deconstructName","Utils.mapNotes","Utils.natural","Utils.PlayaError","Utils.stripOctave","Utils.whichAccident","Utils.whilst"]}},"app":{"title":"PLAYA","routing":{"method":"path","caseSensitive":true},"entrance":"content:home","base":"/","favicon":"assets/favicon.ico","meta":null,"server":"static"},"template":{"name":"docma-template-zebra","description":"Zebra - Default template for Docma. https://github.com/onury/docma","version":"2.3.1","supportedDocmaVersion":">=2.0.0","author":"Onur Yıldırım","license":"MIT","mainHTML":"index.html","options":{"title":null,"logo":{"dark":"assets/logo.png","light":"assets/logo-transparent.png"},"sidebar":{"enabled":true,"outline":"tree","collapsed":false,"toolbar":true,"itemsFolded":true,"itemsOverflow":"crop","badges":true,"search":true,"animations":true},"symbols":{"autoLink":true,"params":"table","enums":"table","props":"table","meta":false},"contentView":{"bookmarks":"h1,h2,h3","faLibs":"solid,regular,brands","faVersion":"5.5.0"},"navbar":{"enabled":true,"dark":true,"animations":true,"menu":[{"label":"Readme","href":"/"},{"label":"Documentation","href":"/api"}],"fixed":true}}},"partials":{"api":"docma-api","content":"docma-content","notFound":"docma-404"},"elementID":"docma-main","contentElementID":"docma-content","defaultApiName":"_def_","logsEnabled":false}));

!function(){"use strict";var r="path"===docma.app.routing.method;function n(a){return(a.params[1]||"").replace(/\/$/,"")}function a(a,e){var o=n(a)||docma._.defaultApiName,t=docma.createRoute(o,DocmaWeb.Route.Type.API);if(!t||!t.exists())return e();t.apply()}docma.app.base&&page.base(docma.app.base),page.redirect("(/)?"+docma.template.main,""),r&&(page("(/)?api/(.+)",a),page("(/)?api(/)?",a),page("(/)?(.*)",function(a,e){var o=n(a),t=docma.createRoute(o,DocmaWeb.Route.Type.CONTENT);if(!t||!t.exists())return e();t.apply()})),page("(/)?",function(c,i){!function(){if(r){var a=sessionStorage.getItem("redirectPath")||null;if(a)return sessionStorage.removeItem("redirectPath"),docma.info("Redirecting to:",a),page.redirect(a),1}}()&&setTimeout(function(){var a,e,o,t=(e=c.querystring,o=e||window.location.search,/^[?&]/.test(o)&&(o=o.slice(1)),o||null);if(r){if(t)return i();a=docma._.appEntranceRI}else docma.log("Query-string:",t),a=t?docma.createRouteFromQuery(t):docma._.appEntranceRI;if(!a||!a.exists())return i();function n(){docma._trigger(DocmaWeb.Event.Navigate,[a])}a.isCurrent()?n():a.apply(function(a){200===a&&n()})},100)}),page("*",function(a){docma.warn("Unknown Route:",a.path),docma.log("context:",a),docma.createRoute(null).apply()}),docma.info("Docma SPA Configuration:"),docma.info("App Title:          ",docma.app.title),docma.info("Routing Method:     ",docma.app.routing.method),docma.info("App Server:         ",docma.app.server),docma.info("Base Path:          ",docma.app.base),docma.info("Entrance Route ID:  ",docma.app.entrance),window.onload=function(){docma._.initialLoad=!0,docma._.appEntranceRI=docma.createRouteFromID(docma.app.entrance),page.start({click:!0,popstate:!0,dispatch:!0,hashbang:!1,decodeURLComponents:!0}),docma.info("Docma SPA loaded!")}}();